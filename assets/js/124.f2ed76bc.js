(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{684:function(t,s,e){"use strict";e.r(s);var a=e(55),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"hotmoduleplacement"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hotmoduleplacement"}},[t._v("#")]),t._v(" HotModulePlacement")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/9/2/16cf203824359397?imageView2/0/w/1280/h/960/ignore-error/1",alt:""}})]),t._v(" "),e("h2",{attrs:{id:"服务器部分"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务器部分"}},[t._v("#")]),t._v(" 服务器部分")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("启动"),e("code",[t._v("webpack-dev-server")]),t._v("服务器，源代码地址"),e("code",[t._v("@webpack-dev-server/webpack-dev-server.js#L173")])])]),t._v(" "),e("li",[e("p",[t._v("创建 Webpack 实例，源代码地址"),e("code",[t._v("@webpack-dev-server/webpack-dev-server.js#L89")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" compiler "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("webpack")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("创建 Server 服务器，源代码地址@webpack-dev-server/webpack-dev-server.js#L107")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Server")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("compiler")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("compiler "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" compiler\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("port")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("server"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("port"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("服务器已经在")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("port"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("端口上启动了")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" server "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Server")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("compiler"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nserver"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("添加 Webpack 的"),e("code",[t._v("done")]),t._v("事件回调，源代码地址"),e("code",[t._v("@webpack-dev-server/Server.js#L122")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("compiler")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sockets "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" lasthash\n    compiler"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hooks"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("done"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tap")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'webpack-dev-server'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("stats")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      lasthash "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" stats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 每当新一个编译完成后都会向客户端发送消息")]),t._v("\n      sockets"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("socket")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        socket"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hash'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stats"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hash"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先向客户端发送最新的hash值")]),t._v("\n        socket"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ok'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 再向客户端发送一个ok")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("Webpack 编译后提供提供了一系列钩子函数，以供插件能访问到它的各个生命周期节点，并对其打包内容做修改。"),e("code",[t._v("compiler.hooks.done")]),t._v("则是插件能修改其内容的最后一个节点。")]),t._v(" "),e("p",[t._v("编译完成通过 Socket 向客户端发送消息，推送每次编译产生的 "),e("code",[t._v("hash")]),t._v("。另外如果是热更新的话，还会产出二个补丁文件，\n里面描述了从上一次结果到这一次结果都有哪些 chunk 和模块发生了变化。")]),t._v(" "),e("p",[t._v("使用"),e("code",[t._v("let sockets = []")]),t._v("数组去存放当打开了多个Tab时每个Tab的 socket实例。")])]),t._v(" "),e("li",[e("p",[t._v("创建express应用app，源代码地址"),e("code",[t._v("@webpack-dev-server/Server.js#L123")])]),t._v(" "),e("p",[e("code",[t._v("let app = new express()")])])]),t._v(" "),e("li",[e("p",[t._v("设置文件系统为内存文件系统,源代码地址"),e("code",[t._v("@webpack-dev-middleware/fs.js#L115")])]),t._v(" "),e("p",[e("code",[t._v("let fs = new MemoryFileSystem()")])]),t._v(" "),e("p",[t._v("使用"),e("code",[t._v("MemoryFileSystem")]),t._v("将"),e("code",[t._v("compiler")]),t._v("的产出文件打包到内存中")])]),t._v(" "),e("li",[e("p",[t._v("添加"),e("code",[t._v("webpack-dev-middleware")]),t._v("中间件,中间件负责返回生成的文件，源代码地址"),e("code",[t._v("@webpack-dev-server/Server.js#L125")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("middleware")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/favicon.ico'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendStatus")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /index.html   dist/index.html")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" filename "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" req"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" stat "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("statSync")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filename"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stat"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFile")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断是否存在这个文件,如果在的话直接把这个读出来发给浏览器")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" content "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileSync")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filename"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" contentType "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mime"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filename"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Type'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" contentType"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("statusCode "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("statusCode "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n      res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("content"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sendStatus")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("middleware"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("使用express启动了本地开发服务后，使用中间件去为其构造一个静态服务器，并使用了内存文件系统，使读取文件后存放到内存中，提高读写效率，最终返回生成的文件")])]),t._v(" "),e("li",[e("p",[t._v("启动webpack编译,源代码地址"),e("code",[t._v("@webpack-dev-middleware/index.js#L51")]),t._v(", 编译完成向客户端发送消息"),e("code",[t._v("@webpack-dev-server/Server.js#L184")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" compiler.watch({}, err => {\n    console.log('又一次编译任务成功完成了')\n  })\n")])])]),e("p",[t._v("以监控的模式启动一次webpack编译，当编译成功之后执行回调")])]),t._v(" "),e("li",[e("p",[t._v("创建http服务器并启动服务，源代码地址"),e("code",[t._v("@webpack-dev-server/Server.js#L135")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  constructor(compiler) {\n    // ...\n    this.server = require('http').createServer(app)\n    // ...\n  }\n  listen(port) {\n    this.server.listen(port, () => {\n      console.log(`服务器已经在${port}端口上启动了`)\n    })\n  }\n")])])])]),t._v(" "),e("li",[e("p",[t._v("使用sockjs在浏览器端和服务端之间建立一个 websocket 长连接，源代码地址"),e("code",[t._v("@webpack-dev-server/Server.js#L745")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("constructor(compiler) {\n    // ...\n    this.server = require('http').createServer(app)\n    let io = require('socket.io')(this.server)\n    io.on('connection', (socket) => {\n      sockets.push(socket)\n      socket.emit('hash', lastHash)\n      socket.emit('ok')\n    })\n  }\n")])])])]),t._v(" "),e("li",[e("p",[t._v("创建socket服务器，源代码地址"),e("code",[t._v("@webpack-dev-server/SockJSServer.js#L34")])]),t._v(" "),e("p",[t._v("启动一个 websocketwebpack-dev-middleware服务器，然后等待连接来到，连接到来之后存进sockets池")]),t._v(" "),e("p",[t._v("当有文件改动，webpack重新编译时，向客户端推送"),e("code",[t._v("hash")]),t._v("和"),e("code",[t._v("ok")]),t._v("两个事件")])])]),t._v(" "),e("h2",{attrs:{id:"客户端部分"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#客户端部分"}},[t._v("#")]),t._v(" 客户端部分")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("webpack-dev-server/client")]),t._v("端会监听到此hash消息，源代码地址"),e("code",[t._v("@webpack-dev-server/index.js#L54")])]),t._v(" "),e("p",[e("code",[t._v('<script src="/socket.io/socket.io.js"><\/script>')])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" socket "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("io")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsocket"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'connect'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onConnected"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onConnected")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'客户端连接成功'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" hotCurrentHash "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lastHash 上一次 hash值 ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" currentHash "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这一次的hash值")]),t._v("\nsocket"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hash'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("hash")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  currentHash "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hash\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("客户端收到ok的消息后会执行"),e("code",[t._v("reloadApp")]),t._v("方法进行更新，源代码地址"),e("code",[t._v("index.js#L101")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("socket.on('ok', () => {\n  reloadApp(true)\n})\n")])])])]),t._v(" "),e("li",[e("p",[t._v("在"),e("code",[t._v("reloadApp")]),t._v("中会进行判断，是否支持热更新，如果支持的话发射"),e("code",[t._v("webpackHotUpdate")]),t._v("事件，如果不支持则直接刷新浏览器，源代码地址"),e("code",[t._v("reloadApp.js#L7")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 当收到ok事件后，会重新刷新app\nfunction reloadApp(hot) {\n  if (hot) { // 如果hot为true 走热更新的逻辑\n    hotEmitter.emit('webpackHotUpdate')\n  } else { // 如果不支持热更新，则直接重新加载\n    window.location.reload()\n  }\n}\n")])])])]),t._v(" "),e("li",[e("p",[t._v("在"),e("code",[t._v("webpack/hot/dev-server.js")]),t._v("会监听"),e("code",[t._v("webpackHotUpdate")]),t._v("事件，源代码地址"),e("code",[t._v("dev-server.js#L55")])]),t._v(" "),e("p",[t._v("首先需要一个发布订阅去绑定事件并在合适的时机触发")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("class Emitter {\n  constructor() {\n    this.listeners = {}\n  }\n  on(type, listener) {\n    this.listeners[type] = listener\n  }\n  emit(type) {\n    this.listeners[type] && this.listeners[type]()\n  }\n}\nlet hotEmitter = new Emitter()\nhotEmitter.on('webpackHotUpdate', () => {\n  if (!hotCurrentHash || hotCurrentHash == currentHash) {\n    return hotCurrentHash = currentHash\n  }\n  hotCheck()\n})\n")])])]),e("p",[t._v("会判断是否为第一次进入页面和代码是否有更新。")])]),t._v(" "),e("li",[e("p",[t._v("在"),e("code",[t._v("check")]),t._v("方法里会调用"),e("code",[t._v("module.hot.check")]),t._v("方法,源代码地址"),e("code",[t._v("dev-server.js#L13")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("function hotCheck() {\n  hotDownloadManifest().then(update => {\n    let chunkIds = Object.keys(update.c)\n    chunkIds.forEach(chunkId => {\n      hotDownloadUpdateChunk(chunkId)\n    })\n  })\n}\n\n")])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("HotModuleReplacement.runtime")]),t._v("请求"),e("code",[t._v("Manifest")]),t._v(",源代码地址"),e("code",[t._v("HotModuleReplacement.runtime.js#L180")])])]),t._v(" "),e("li",[e("p",[t._v("它通过调用 "),e("code",[t._v("JsonpMainTemplate.runtime")]),t._v("的"),e("code",[t._v("hotDownloadManifest")]),t._v("方法,源代码地址"),e("code",[t._v("JsonpMainTemplate.runtime.js#L23")])]),t._v(" "),e("p",[t._v("上面也提到过webpack每次编译都会产生hash值、已改动模块的json文件、已改动模块代码的js文件，")]),t._v(" "),e("p",[t._v("此时先使用"),e("code",[t._v("ajax")]),t._v("请求"),e("code",[t._v("Manifest")]),t._v("即服务器这一次编译相对于上一次编译改变了哪些"),e("code",[t._v("module")]),t._v("和"),e("code",[t._v("chunk")])]),t._v(" "),e("p",[t._v("然后再通过"),e("code",[t._v("jsonp")]),t._v("获取这些已改动的"),e("code",[t._v("module")]),t._v("和"),e("code",[t._v("chunk")]),t._v("的代码。")])]),t._v(" "),e("li",[e("p",[t._v("调用"),e("code",[t._v("JsonpMainTemplate.runtime")]),t._v("的"),e("code",[t._v("hotDownloadUpdateChunk")]),t._v("方法通过JSONP请求获取到最新的模块代码，源代码地址"),e("code",[t._v("JsonpMainTemplate.runtime.js#L14")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("function hotDownloadUpdateChunk(chunkId) {\nlet script = document.createElement('script')\nscript.charset = 'utf-8'\n// /main.xxxx.hot-update.js\nscript.src = '/' + chunkId + \".\" + hotCurrentHash + \".hot-update.js\"\ndocument.head.appendChild(script)\n}\n")])])]),e("p",[t._v("这里解释下为什么使用JSONP获取而不直接利用socket获取最新代码？主要是因为JSONP获取的代码可以直接执行")])]),t._v(" "),e("li",[e("p",[t._v("补丁JS取回来后会调用"),e("code",[t._v("JsonpMainTemplate.runtime.js")]),t._v("的"),e("code",[t._v("webpackHotUpdate")]),t._v("方法，源代码地址"),e("code",[t._v("JsonpMainTemplate.runtime.js#L8")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("window.webpackHotUpdate = function (chunkId, moreModules) {\n  // 循环新拉来的模块\n  for (let moduleId in moreModules) {\n    // 从模块缓存中取到老的模块定义\n    let oldModule = __webpack_require__.c[moduleId]\n    // parents哪些模块引用这个模块 children这个模块引用了哪些模块\n    // parents=['./src/index.js']\n    let {\n      parents,\n      children\n    } = oldModule\n    // 更新缓存为最新代码 缓存进行更新\n    let module = __webpack_require__.c[moduleId] = {\n      i: moduleId,\n      l: false,\n      exports: {},\n      parents,\n      children,\n      hot: window.hotCreateModule(moduleId)\n    }\n    moreModules[moduleId].call(module.exports, module, module.exports, __webpack_require__)\n    module.l = true // 状态变为加载就是给module.exports 赋值了\n    parents.forEach(parent => {\n      // parents=['./src/index.js']\n      let parentModule = __webpack_require__.c[parent]\n      // _acceptedDependencies={'./src/title.js',render}\n      parentModule && parentModule.hot && parentModule.hot._acceptedDependencies[moduleId] && parentModule.hot._acceptedDependencies[moduleId]()\n    })\n    hotCurrentHash = currentHash\n  }\n}\n")])])])]),t._v(" "),e("li",[e("p",[t._v("然后会调用"),e("code",[t._v("HotModuleReplacement.runtime.js")]),t._v("的"),e("code",[t._v("hotAddUpdateChunk")]),t._v("方法动态更新模块代码，源代码地址"),e("code",[t._v("HotModuleReplacement.runtime.js#L222")])])]),t._v(" "),e("li",[e("p",[t._v("然后调用"),e("code",[t._v("hotApply")]),t._v("方法进行热更新，源代码地址"),e("code",[t._v("HotModuleReplacement.runtime.js#L257")]),t._v("、"),e("code",[t._v("HotModuleReplacement.runtime.js#L278")])])])]),t._v(" "),e("h1",{attrs:{id:"q-a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#q-a"}},[t._v("#")]),t._v(" Q&A")]),t._v(" "),e("p",[e("strong",[t._v("webpack 可以将不同的模块打包成 bundle 文件或者几个 chunk 文件，但是当我通过 webpack HMR 进行开发的过程中，我并没有在我的 dist 目录中找到 webpack 打包好的文件，它们去哪呢？")])]),t._v(" "),e("p",[e("code",[t._v("webpack-dev-server")]),t._v("使用内存文件系统,来保存打包的文件，利用了"),e("code",[t._v("memory-fs")]),t._v("模块，之所以这么做是因为访问内存中的代码比访问文件系统中的文件更快，而且也减少了代码写入文件的开销")]),t._v(" "),e("p",[e("strong",[t._v("通过查看 webpack-dev-server 的 package.json 文件，我们知道其依赖于 webpack-dev-middleware 库，那么 webpack-dev-middleware 在 HMR 过程中扮演什么角色？")])]),t._v(" "),e("p",[t._v("使用中间件去为其构造一个静态服务器，并使用了内存文件系统，使读取文件后存放到内存中，提高读写效率，最终返回生成的文件")]),t._v(" "),e("p",[e("strong",[t._v("使用 HMR 的过程中，通过 Chrome 开发者工具我知道浏览器是通过 websocket 和 webpack-dev-server 进行通信的，但是 websocket 的 message 中并没有发现新模块代码。打包后的新模块又是通过什么方式发送到浏览器端的呢？")])]),t._v(" "),e("ol",[e("li",[e("p",[t._v("编译完成通过socket向客户端发送消息，推送每次编译产生的hash")])]),t._v(" "),e("li",[e("p",[t._v("此时先使用ajax请求Manifest即服务器这一次编译相对于上一次编译改变了哪些module和chunk。")])]),t._v(" "),e("li",[e("p",[t._v("然后再通过jsonp获取这些已改动的module和chunk的代码。")])])]),t._v(" "),e("p",[e("strong",[t._v("为什么新的模块不通过 websocket 随消息一起发送到浏览器端呢？")])]),t._v(" "),e("p",[t._v("因为通过socket通信获取的是一串字符串需要再做处理。而通过JSONP获取的代码可以直接执行。")]),t._v(" "),e("p",[e("strong",[t._v("浏览器拿到最新的模块代码，HMR 又是怎么将老的模块替换成新的模块，在替换的过程中怎样处理模块之间的依赖关系？")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("从缓存中删除过期的模块和依赖")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var queue = outdatedModules.slice();\nwhile (queue.length > 0) {\n    moduleId = queue.pop();\n    // 从缓存中删除过期的模块\n    module = installedModules[moduleId];\n    // 删除过期的依赖\n    delete outdatedDependencies[moduleId];\n    \n    // 存储了被删掉的模块id，便于更新代码\n    outdatedSelfAcceptedModules.push({\n        module: moduleId\n    });\n}\n")])])])]),t._v(" "),e("li",[e("p",[t._v("新的模块添加到 "),e("code",[t._v("modules")]),t._v(" 中")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("appliedUpdate[moduleId] = hotUpdate[moduleId];\nfor (moduleId in appliedUpdate) {\n    if (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n        modules[moduleId] = appliedUpdate[moduleId];\n    }\n}\n\n")])])])]),t._v(" "),e("li",[e("p",[t._v("当下次调用 "),e("code",[t._v("__webpack_require__")]),t._v("(webpack 重写的 "),e("code",[t._v("require")]),t._v(" 方法)方法的时候，就是获取到了新的模块代码了")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("for (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n    var item = outdatedSelfAcceptedModules[i];\n    moduleId = item.module;\n    try {\n        // 执行最新的代码\n        __webpack_require__(moduleId);\n    } catch (err) {\n        // ...容错处理\n    }\n}\n\n")])])])])]),t._v(" "),e("p",[e("strong",[t._v("当模块的热替换过程中，如果替换模块失败，有什么回退机制吗？")])]),t._v(" "),e("p",[t._v("如果替换失败，则 "),e("code",[t._v("window.location.reload()")])]),t._v(" "),e("p",[e("strong",[t._v("为什么编辑"),e("code",[t._v("main.js")]),t._v("时还是刷新整个页面")])]),t._v(" "),e("p",[t._v("就如上一个问题所说的。其原因当块更新，更新事件会一层一层向上传递，当传递到了最外层 "),e("code",[t._v("main.js")]),t._v(" 中，如果 "),e("code",[t._v("main.js")]),t._v(" 中定义的 "),e("code",[t._v("accept")]),t._v(" 函数就会被 "),e("code",[t._v("accept")]),t._v(" 接收然后执行我们定义的 "),e("code",[t._v("callback")]),t._v(" 函数。但是如果事件一直往上拋，到了最外层都没有文件接收它，则会直接刷新页面。")]),t._v(" "),e("p",[t._v("那为什么我们没定义接收 CSS 的地方，可修改 CSS 文件时，并不是刷新页面，而是触发模块热更新呢？")]),t._v(" "),e("p",[t._v("原因在于 "),e("code",[t._v("style-loader")]),t._v(" 会注入用于接收 CSS 的代码")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" render "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-dom'")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" AppComponent "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react-dom'")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./main.css'")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("AppComponent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'app'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只有当开启了模块热替换时，module.hot才存在")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// module.hot.accept函数的第一个参数指出当前文件接收哪些子模块的替换，这里表示只接受'./AppComponent'这个子模块")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第二个参数表示模块更新时要执行的逻辑")]),t._v("\n    module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("accept")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./AppComponent'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("AppComponent"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'app'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),e("p",[t._v("WDS与浏览品之间维护一个 Websocket ，当本地资源发生变化后，WDS 会向浏览器推送更新，推送更新的模块 "),e("code",[t._v("hash")]),t._v("，让客户端与现有资源做\n对比。客户端对比差异后，向WDS 发起 AJAX 请求来获取更改内容（文件列表, "),e("code",[t._v("hash")]),t._v("），这样客户端就可以借助这些信息继续向 WDS 发起 "),e("code",[t._v("jsonp")]),t._v(" 请求\n获取该 "),e("code",[t._v("chunk")]),t._v("的增量更新")]),t._v(" "),e("p",[t._v("后续的部分(拿到增量更新之后如何处理？哪些状态该保留？哪些又需要更新？)由 "),e("code",[t._v("HotModulePlugin")]),t._v(" 来完成，提供了相关 API 以供开发者针对自身场景进行处理，\n"),e("code",[t._v("react-hot-loader")]),t._v(" 和 "),e("code",[t._v("vue-loader")]),t._v(" 都是借助这些 API 实现 HMR。")]),t._v(" "),e("h2",{attrs:{id:"其它"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[t._v("#")]),t._v(" 其它")]),t._v(" "),e("p",[t._v("在发生模块热替换时，我们会在浏览器的控制台中看到一些输出信息，其中有 "),e("code",[t._v("Updated modules：[数字]")]),t._v("的信息输出，这个 "),e("code",[t._v("[数字]")]),t._v(" 表示 "),e("code",[t._v("ID")]),t._v(" 为几的模块被替换了，这对开发者不是很友好，因为开发都不知道"),e("code",[t._v("ID")]),t._v(" 和模块之间的对应关系，最好是模块名字代替这个 "),e("code",[t._v("ID")]),t._v(" 输出。Webpack 内置的 "),e("code",[t._v("NameModulesPlugin")]),t._v(" 插件可以解决这个问题，修改 "),e("code",[t._v("Webpack")]),t._v(" 配置文件接入该插件：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" NameModeulesPlugin "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'webpack/lib/NameModulesPlugin'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    plugins"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 显示出被替换模块的名称")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NameModeulesPlugin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("重新构建后，我们就能发现输出的日志发生了变化")]),t._v(" "),e("p",[t._v("除此之外，模块热替换还面临和自动刷新一样的性能问题，因为它们都需要监听文件的变化和注入客户端。优化模块热替换的构建性能的思路和之前优化自动更新的思路类似：监听更少的文件，忽略 "),e("code",[t._v("node_mosules")]),t._v(" 目录下的文件。")]),t._v(" "),e("p",[t._v("但是其中提到的关闭默认的 "),e("code",[t._v("inline")]),t._v(" 模式且手动注入代理客户端的优化方法，不能用于使用模块热替换的情况，原因在于模块热替换的运行依赖在每个 "),e("code",[t._v("Chunk")]),t._v(" 中都包含代理客户端的代码。")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.im/post/5d6d0ee5f265da03f66ddba9",target:"_blank",rel:"noopener noreferrer"}},[t._v("搞懂webpack热更新原理"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/30669007",target:"_blank",rel:"noopener noreferrer"}},[t._v("Webpack HMR 原理解析"),e("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);