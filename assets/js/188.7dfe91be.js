(window.webpackJsonp=window.webpackJsonp||[]).push([[188],{760:function(e,t,a){"use strict";a.r(t);var s=a(55),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"keep-alive"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive"}},[e._v("#")]),e._v(" keep-alive")]),e._v(" "),a("p",[e._v("HTTP "),a("code",[e._v("keep-alive")]),e._v(" 也称为 HTTP 长连接, 是一个通用消息头。它通过重用一个 TCP 连接来发送/接收多个 HTTP请求，来减少创建/关闭多个 TCP 连接的开销。")]),e._v(" "),a("p",[e._v("在 Http 1.0 中，Keep-Alive是没有官方支持的，但是也有一些 Server 端支持")]),e._v(" "),a("p",[e._v("Http1.1 以后，Keep-Alive 已经默认支持并开启")]),e._v(" "),a("h2",{attrs:{id:"使用keep-alive"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用keep-alive"}},[e._v("#")]),e._v(" 使用"),a("code",[e._v("keep-alive")])]),e._v(" "),a("p",[e._v("客户端（包括但不限于浏览器）发送请求时会在 Header 中增加一个请求头 "),a("code",[e._v("Connection: Keep-Alive")]),e._v("，当服务器收到附带有 "),a("code",[e._v("Connection: Keep-Alive")]),e._v(" 的请求时，也会在响应头中添加 "),a("code",[e._v("Keep-Alive")]),e._v(", 这样一来，客户端和服务器之间的 HTTP 连接就会被保持，不会断开（断开方式下面介绍），当客户端发送另外一个请求时，就可以复用已建立的连接。")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[e._v("HTTP")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.1")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("200")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[e._v("OK")]),e._v("\nConnection"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Keep"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Alive\nContent"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Encoding"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" gzip\nContent"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Type"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" text"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" charset"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("utf"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("8")]),e._v("\nDate"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Thu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("11")]),e._v(" Aug "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2016")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("15")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("23")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("13")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[e._v("GMT")]),e._v("\nKeep"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Alive"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" max"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1000")]),e._v("\nLast"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("Modified"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" Mon"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("25")]),e._v(" Jul "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2016")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("04")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("32")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("39")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[e._v("GMT")]),e._v("\nServer"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("Apache")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("body"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n")])])]),a("ul",[a("li",[a("p",[a("code",[e._v("timeout")]),e._v(": 空闲时保持打开状态的最小时长（以秒为单位）")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("max")]),e._v(": 在连接关闭之前，在此连接可以发送的请求的最大值")])])]),e._v(" "),a("h2",{attrs:{id:"keep-alive不足之处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive不足之处"}},[e._v("#")]),e._v(" "),a("code",[e._v("keep-alive")]),e._v("不足之处")]),e._v(" "),a("p",[e._v("保持连接是比较浪费资源的，可能会非常影响性能，因为它在文件被请求之后还保持了不必要的连接很长时间，额外占用了服务端的连接数")]),e._v(" "),a("h2",{attrs:{id:"http-连接复用后怎样断开连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-连接复用后怎样断开连接"}},[e._v("#")]),e._v(" Http 连接复用后怎样断开连接")]),e._v(" "),a("p",[e._v("Http 协议规定了两种关闭复用连接的方式：")]),e._v(" "),a("p",[a("strong",[e._v("通过 Keep-Alive Timeout 标识")])]),e._v(" "),a("p",[e._v("如果服务端 Response Header 设置了 "),a("code",[e._v("Keep-Alive:timeout={timeout}")]),e._v("，客户端会就会保持此连接 "),a("code",[e._v("timeout")]),e._v("（单位秒）时间，超时之后关闭连接。")]),e._v(" "),a("p",[a("code",[e._v("Keep-Alive: timeout=5, max=1000")])]),e._v(" "),a("p",[a("strong",[e._v("Connection close")])]),e._v(" "),a("p",[e._v("客户端发送Header头："),a("code",[e._v("Connection: close")])]),e._v(" "),a("h2",{attrs:{id:"服务端开启keep-alive"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务端开启keep-alive"}},[e._v("#")]),e._v(" 服务端开启keep-alive")]),e._v(" "),a("p",[e._v("Httpd 守护进程，一般都提供了 "),a("code",[e._v("keep-alive timeout")]),e._v(" 时间设置参数, "),a("code",[e._v("nginx")]),e._v(" 本身仅支持一个"),a("code",[e._v("keepalive_timeout")]),e._v(" 指令")]),e._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[e._v("location "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("cqjt"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("   \n    alias "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("url"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("var")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("www"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("html"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("   \n    keepalive_timeout  "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("75")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("   \n    expires "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),e._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("   \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v(" \n")])])]),a("h2",{attrs:{id:"tcp-keep-alive"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tcp-keep-alive"}},[e._v("#")]),e._v(" tcp keep-alive")]),e._v(" "),a("p",[a("code",[e._v("tcp keep-alive")]),e._v(" 与 "),a("code",[e._v("http keep-alive")]),e._v("，不是同一回事")]),e._v(" "),a("p",[a("code",[e._v("tcp keep-alive")]),e._v(" 是TCP的一种检测TCP[连接]状况的保鲜机制,定时发送一个空的 TCP Segment，来监测连接是否存活")]),e._v(" "),a("p",[a("strong",[e._v("如何设置它?")])]),e._v(" "),a("p",[e._v("KeepAlive都支持哪些设置项")]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("tcp_keepalive_time: KeepAlive")]),e._v(" 的空闲时长，或者说每次正常发送心跳的周期，默认值为"),a("code",[e._v("7200s（2小时）")])])]),e._v(" "),a("li",[a("p",[a("code",[e._v("tcp_keepalive_intvl")]),e._v(": KeepAlive探测包的发送间隔，默认值为75s")])]),e._v(" "),a("li",[a("p",[a("code",[e._v("tcp_keepalive_probes")]),e._v(": 在"),a("code",[e._v("tcp_keepalive_time")]),e._v("之后，没有接收到对方确认，继续发送保活探测包次数，默认值为9（次）")])])]),e._v(" "),a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/28894266",target:"_blank",rel:"noopener noreferrer"}},[e._v("聊聊 TCP 中的 KeepAlive 机制"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);