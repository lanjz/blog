(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{489:function(t,s,a){t.exports=a.p+"assets/img/browser_1.e0d8ecf7.png"},490:function(t,s,a){t.exports=a.p+"assets/img/browser_2.9db1aec3.png"},634:function(t,s,a){"use strict";a.r(s);var e=a(58),v=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"浏览器中的进程和线程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器中的进程和线程"}},[t._v("#")]),t._v(" 浏览器中的进程和线程")]),t._v(" "),e("p",[t._v("在了解浏览器中的进程和线程前先了解一下什么是"),e("RouterLink",{attrs:{to:"/Node/基础/进程和线程.html"}},[t._v("进程和线程")])],1),t._v(" "),e("h2",{attrs:{id:"浏览器的特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的特点"}},[t._v("#")]),t._v(" 浏览器的特点")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("浏览器是多进程的")])]),t._v(" "),e("li",[e("p",[t._v("浏览器之所以能够运行，是因为系统给它的进程分配了资源（cpu、内存）")])]),t._v(" "),e("li",[e("p",[t._v("简单点理解，每打开一个 Tab 页，就相当于创建了一个独立的浏览器进程。")])])]),t._v(" "),e("p",[t._v("浏览器是多进程的，有一个主控进程，以及每一个 Tab 页面都会新开一个进程（某些情况下多个 Tab 会合并进程）")]),t._v(" "),e("p",[t._v("如下图：")]),t._v(" "),e("p",[e("img",{attrs:{src:a(489),alt:""}})]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("打开 "),e("code",[t._v("chrome任务管理器的方法")]),t._v(" ：在浏览头部标签页旁边的空白区域，"),e("code",[t._v("右键")]),t._v(" 就可以弹出有任务管理器的面板.或者 "),e("code",[t._v("Chrome的更多工具 -> 任务管理器")])])]),t._v(" "),e("p",[t._v("从 "),e("code",[t._v("chrome任务管理器")]),t._v(" 可以看到浏览器进程可能包括主控进程，插件扩展进程，GPU，tab页（浏览器内核）等等")]),t._v(" "),e("h2",{attrs:{id:"浏览器有哪些进程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器有哪些进程"}},[t._v("#")]),t._v(" 浏览器有哪些进程")]),t._v(" "),e("p",[t._v("浏览器包括进程主要有：")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("Browser进程")]),t._v("：浏览器的主进程（负责协调、主控），只有一个")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("负责浏览器界面显示，与用户交互。如前进，后退等")])]),t._v(" "),e("li",[e("p",[t._v("负责各个页面的管理，创建和销毁其他进程")])]),t._v(" "),e("li",[e("p",[t._v("将 Renderer 进程得到的内存中的 Bitmap，绘制到用户界面上")])]),t._v(" "),e("li",[e("p",[t._v("网络资源的管理，下载等")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("第三方插件扩展进程")]),t._v("：每种类型的插件对应一个进程，仅当使用该插件时才创建")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("GPU进程")]),t._v("：最多一个，用于 3D 绘制")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("浏览器渲染进程（浏览器内核）（ Renderer 进程，内部是多线程的）")]),t._v("： 可能有多个，默认每个 Tab 页面一个进程，互不影响（有时候会优化，如多个空白 tab 会合并成一个进程）")]),t._v(" "),e("p",[t._v("控制页面渲染，脚本执行，事件处理等")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("网络进程")])]),t._v(" "),e("p",[t._v("主要负责页面的网络资源加载，之前是作为一个模块运行在浏览器进程里面的，直至最近才独立出来，成为一个单独的进程")])])]),t._v(" "),e("p",[e("strong",[t._v("所以，打开一个网页，最少需要四个进程：")]),t._v(" 1 个网络进程、1 个浏览器进程、1 个 GPU 进程以及 1 个渲染进程。如果打开的页面有运行插件的话，还需要再加上 1 个插件进程")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("浏览器中打开一个网页相当于新起了一个进程（进程内有自己的多线程）")])]),t._v(" "),e("h3",{attrs:{id:"浏览器多进程的优势"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器多进程的优势"}},[t._v("#")]),t._v(" 浏览器多进程的优势")]),t._v(" "),e("p",[t._v("相比于单进程浏览器，多进程有如下优点：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("避免单个 "),e("code",[t._v("page crash")]),t._v(" 影响整个浏览器")])]),t._v(" "),e("li",[e("p",[t._v("避免第三方插件 "),e("code",[t._v("crash")]),t._v(" 影响整个浏览器")])]),t._v(" "),e("li",[e("p",[t._v("多进程充分利用多核优势")])]),t._v(" "),e("li",[e("p",[t._v("方便使用沙盒模型隔离插件等进程，提高浏览器稳定性")])])]),t._v(" "),e("p",[t._v("简单点理解：如果浏览器是单进程，那么某个 Tab 页崩溃了，就影响了整个浏览器，体验有多差；同理如果是单进程，插件崩溃了也会影响整个浏览器")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("当然，开启开进程就意味着内存等资源消耗也会更大，有点空间换时间的意思。")])]),t._v(" "),e("h2",{attrs:{id:"渲染进程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#渲染进程"}},[t._v("#")]),t._v(" 渲染进程")]),t._v(" "),e("p",[t._v("作为前端一枚，我们这里重点关注一下 "),e("strong",[t._v("渲染进程")])]),t._v(" "),e("p",[t._v("可以这样理解，页面的渲染，JS的执行，事件的循环，都在这个进程内进行。")]),t._v(" "),e("p",[e("strong",[t._v("浏览器的渲染进程是多线程的")]),t._v("，那么接下来看看它都包含了哪些线程（列举一些主要常驻线程）：")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("GUI渲染线程")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("负责渲染浏览器界面，解析 HTML，CSS，构建 DOM 树和 RenderObject 树，布局和绘制等。")])]),t._v(" "),e("li",[e("p",[t._v("当界面需要重绘（Repaint）或由于某种操作引发回流(reflow)时，该线程就会执行")])]),t._v(" "),e("li",[e("p",[t._v("注意，GUI 渲染线程与 JS 引擎线程是互斥的，当 JS 引擎执行时 GUI 线程会被挂起（相当于被冻结了），GUI 更新会被保存在一个队列中等到 JS 引擎空闲时立即被执行")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("JS引擎线程")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("也称为 JS 内核，负责处理 Javascript 脚本程序。（例如V8引擎）")])]),t._v(" "),e("li",[e("p",[t._v("JS 引擎线程负责解析 Javascript 脚本，运行代码。")])]),t._v(" "),e("li",[e("p",[t._v("JS 引擎一直等待着任务队列中任务的到来，然后加以处理，一个 Tab 页（renderer进程）中无论什么时候都只有一个 JS 线程在运行 JS 程序")])]),t._v(" "),e("li",[e("p",[t._v("同样注意，GUI 渲染线程与 JS 引擎线程是互斥的，所以如果 JS 执行的时间过长，这样就会造成页面的渲染不连贯，导致页面渲染加载阻塞。")])])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("事件触发线程")])]),t._v(" "),e("ul",[e("li",[t._v("属于浏览器而不是JS引擎，用来控制事件循环；当JS引擎执行代码块如setTimeOut时（也可是来自浏览器内核的其他线程,如鼠标点击、AJAX异步请求等），会将对应任务添加到事件触发线程中；当对应的事件符合触发条件被触发时，该线程会把事件添加到待处理队列的队尾，等待JS引擎的处理")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("定时触发器线程")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("传说中的 "),e("code",[t._v("setInterval")]),t._v(" 与 "),e("code",[t._v("setTimeout")]),t._v(" 所在线程")])]),t._v(" "),e("li",[e("p",[t._v("浏览器定时计数器并不是由 JavaScript 引擎计数的,（因为JavaScript引擎是单线程的, 如果处于阻塞线程状态就会影响记计时的准确）")])]),t._v(" "),e("li",[e("p",[t._v("因此通过单独线程来计时并触发定时（计时完毕后，添加到事件队列中，等待JS引擎空闲后执行）")])]),t._v(" "),e("li",[e("p",[t._v("注意，W3C 在HTML标准中规定，规定要求setTimeout中低于4ms的时间间隔算为4ms。")])])]),t._v(" "),e("p",[e("strong",[t._v("注意：W3C在HTML标准中规定，定时器的定时时间不能小于4ms，如果是小于4ms，则默认为4ms。")])])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("异步 "),e("code",[t._v("http")]),t._v(" 请求线程")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("在 "),e("code",[t._v("XMLHttpRequest")]),t._v(" 在连接后是通过浏览器新开一个线程请求")])]),t._v(" "),e("li",[e("p",[t._v("将检测到状态变更时，如果设置有回调函数，异步线程就产生状态变更事件，将这个回调再放入事件队列中。再由 JavaScript 引擎执行。")])])])])]),t._v(" "),e("p",[t._v("总结如下图：")]),t._v(" "),e("p",[e("img",{attrs:{src:a(490),alt:""}})]),t._v(" "),e("h3",{attrs:{id:"gui渲染线程与js引擎线程互斥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gui渲染线程与js引擎线程互斥"}},[t._v("#")]),t._v(" GUI渲染线程与JS引擎线程互斥")]),t._v(" "),e("p",[t._v("由于 JavaScript 是可操纵 DOM 的，如果在修改这些元素属性同时渲染界面（即JS线程和UI线程同时运行），那么渲染线程前后获得的元素数据就可能不一致了。")]),t._v(" "),e("p",[t._v("因此为了防止渲染出现不可预期的结果，浏览器设置 GUI 渲染线程与 JS 引擎为互斥的关系，当JS引擎执行时GUI线程会被挂起")]),t._v(" "),e("p",[t._v("GUI更新则会被保存在一个队列中等到 JS 引擎线程空闲时立即被执行。所以，要尽量避免JS执行时间过长，这样就会造成页面的渲染不连贯，导致页面渲染加载阻塞的感觉。")]),t._v(" "),e("h2",{attrs:{id:"browser进程和renderer进程的通信过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#browser进程和renderer进程的通信过程"}},[t._v("#")]),t._v(" Browser进程和Renderer进程的通信过程")]),t._v(" "),e("p",[t._v("以浏览器解析 URL 到页面渲染为例：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Browser 进程收到用户请求，首先需要获取页面内容（譬如通过网络下载资源），随后将该任务通过 RendererHost 接口传递给 Render 进程")])]),t._v(" "),e("li",[e("p",[t._v("Renderer 进程的 Renderer 接口收到消息，简单解释后，交给渲染线程，然后开始渲染")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("渲染线程接收请求，加载网页并渲染网页，这其中可能需要 Browser 进程获取资源和需要 GPU 进程来帮助渲染")])]),t._v(" "),e("li",[e("p",[t._v("当然可能会有 JS 线程操作 DOM（这样可能会造成回流并重绘）")])])])]),t._v(" "),e("li",[e("p",[t._v("最后 Render 进程将结果传递给 Browser 进程")])]),t._v(" "),e("li",[e("p",[t._v("Browser 进程接收到结果并将结果绘制出来")])])]),t._v(" "),e("h2",{attrs:{id:"q-a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#q-a"}},[t._v("#")]),t._v(" Q&A")]),t._v(" "),e("h3",{attrs:{id:"什么是异步"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是异步"}},[t._v("#")]),t._v(" 什么是异步")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("在主线程外额外开启一个线程去处理任务，所以不会导致主线程的代码阻塞")])]),t._v(" "),e("li",[e("p",[t._v("不用等待结果的代码")])])]),t._v(" "),e("h3",{attrs:{id:"click是异步的嘛"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#click是异步的嘛"}},[t._v("#")]),t._v(" click是异步的嘛")]),t._v(" "),e("p",[t._v("事件都是由事件处理线程处理的，所以是异步")]),t._v(" "),e("h3",{attrs:{id:"如何实现浏览器内多个标签页之间的通信"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何实现浏览器内多个标签页之间的通信"}},[t._v("#")]),t._v(" 如何实现浏览器内多个标签页之间的通信")]),t._v(" "),e("p",[t._v("实现多个标签页之间的通信，本质上都是通过中介者模式来实现的。因为标签页之间没有办法直接通信，因此我们可以找一个中介者，让标签页和中介者进行通信，然后让这个中介者来进行消息的转发。通信方法如下：")]),t._v(" "),e("p",[e("strong",[t._v("1. 使用 "),e("code",[t._v("websocket")])])]),t._v(" "),e("p",[t._v("websocket 协议可以实现服务器推送，所以服务器就可以用来当做这个中介者。标签页通过向服务器发送数据，然后由服务器向其他标签页推送转发")]),t._v(" "),e("p",[e("strong",[t._v("2. 使用 "),e("code",[t._v("ShareWorker")])])]),t._v(" "),e("p",[e("code",[t._v("shareWorker")]),t._v(" 会在页面存在的生命周期内创建一个唯一的线程，并且开启多个页面也只会使用同一个线程。这个时候共享线程就可以充当中介者的角色。标签页间通过共享一个线程，然后通过这个共享的线程来实现数据的交换")]),t._v(" "),e("p",[e("strong",[t._v("3. 使用 "),e("code",[t._v("localStorage")]),t._v(" 的方式")])]),t._v(" "),e("p",[t._v("我们可以在一个标签页对 "),e("code",[t._v("localStorage")]),t._v(" 的变化事件进行监听，然后当另一个标签页修改数据的时候，我们就可以通过这个监听事件来获取到数据。这个时候 "),e("code",[t._v("localStorage")]),t._v(" 对象就是充当的中介者的角色")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'storage'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.my-key'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.my-old'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("oldValue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.my-new'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("newValue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.my-url'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.my-storage'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("storageArea"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("注意点：")]),t._v(" "),e("ul",[e("li",[t._v("在同一个页面内发生的改变不会起作用")])]),t._v(" "),e("p",[t._v("— 在相同域名下的其他页面（如一个新标签或 iframe）发生的改变才会起作用")]),t._v(" "),e("ul",[e("li",[t._v("在其他域名下的页面不能访问相同的 Storage 对象")])])])}),[],!1,null,null,null);s.default=v.exports}}]);