(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{526:function(t,s,a){t.exports=a.p+"assets/img/esmodule.a993b2bc.png"},527:function(t,s,a){t.exports=a.p+"assets/img/vs_1.c508ae89.png"},528:function(t,s,a){t.exports=a.p+"assets/img/vs_2.25f0ca2b.png"},708:function(t,s,a){"use strict";a.r(s);var e=a(58),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"vite"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vite"}},[t._v("#")]),t._v(" Vite")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://cn.vitejs.dev/guide/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vite"),e("OutboundLink")],1),t._v(" (发音 /vit/) 是一种新型前端构建工具，能够显著提升前端开发体验。它主要由两部分组成：")]),t._v(" "),e("p",[t._v("一个开发服务器，它基于 原生 ES 模块 提供了 丰富的内建功能，如速度快到惊人的 模块热更新（HMR）。")]),t._v(" "),e("p",[t._v("一套构建指令，它使用 Rollup 打包你的代码，并且它是预配置的，可输出用于生产环境的高度优化过的静态资源")]),t._v(" "),e("p",[t._v("Vite 有两个重点要特点：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("极速的服务启动")])]),t._v(" "),e("li",[e("p",[t._v("轻量快速的热重载")])])]),t._v(" "),e("p",[t._v("Vite 快的原因？")]),t._v(" "),e("p",[t._v("Vite 以 原生ESM 方式提供源码。这实际上是让浏览器接管了打包程序的部分工作：Vite 只需要在浏览器请求源码时进行转换并按需提供源码。根据情景动态导入代码，即只在当前屏幕上实际使用时才会被处理。所以先了解一下 原生ESM")]),t._v(" "),e("h2",{attrs:{id:"原生esm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原生esm"}},[t._v("#")]),t._v(" 原生ESM")]),t._v(" "),e("p",[t._v("先来个例子：")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!--index.html--\x3e")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/src/main.js"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token script"}}),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// main.js")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" doSomeThing "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./utils.js"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomeThing")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// utils.js")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomeThing")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'doSomeThing'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("浏览器打后控制台能正常输出了 "),e("code",[t._v("doSomeThing")])]),t._v(" "),e("p",[t._v("控制台 network 的信息如下：")]),t._v(" "),e("p",[e("img",{attrs:{src:a(526),alt:""}})]),t._v(" "),e("p",[t._v("可以发现对于 "),e("code",[t._v("main.js")]),t._v(" 中的 "),e("code",[t._v('import { doSomeThing } from "./utils.js"')])]),t._v(" "),e("p",[t._v("浏览器会发起了一个 "),e("code",[t._v("get")]),t._v("请求，下载 "),e("code",[t._v("utils.js")]),t._v(" 文件并获取其中导出的模块并执行，也就是说不需要任何浏览器直接识别了 "),e("code",[t._v("import")])]),t._v(" "),e("h3",{attrs:{id:"vite-app"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vite-app"}},[t._v("#")]),t._v(" vite-app")]),t._v(" "),e("p",[t._v("回头看下使用 "),e("code",[t._v("vite-app")]),t._v(" 创建的项目，浏览器是如何加载的")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createApp "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" App "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./App.vue'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createApp")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("App"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mount")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("控制台 network 的信息如下：")]),t._v(" "),e("ol",[e("li",[t._v("首先加载："),e("code",[t._v("http://localhost:3000/src/main.js")])])]),t._v(" "),e("p",[t._v("下载下来的内容为：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" createApp "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/node_modules/.vite/vue.js?v=80d8618d'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" App "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/src/App.vue'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createApp")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("App"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mount")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#app'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("可以看到源码中的 "),e("code",[t._v("import { createApp } from 'vue'")]),t._v(" 变成了 "),e("code",[t._v("import { createApp } from '/node_modules/.vite/vue.js?v=80d8618d'")])]),t._v(" "),e("p",[t._v("这是为了让浏览器把资源路径定位到 "),e("code",[t._v("node_modules")]),t._v(" 中，准确下载到对应的模块")]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[e("p",[t._v("之后加载："),e("code",[t._v("http://localhost:3000/node_modules/.vite/vue.js")]),t._v("，获取 "),e("code",[t._v("createApp")]),t._v(" 这个方法")])]),t._v(" "),e("li",[e("p",[t._v("之后再加载： "),e("code",[t._v("http://localhost:3000/src/App.vue")]),t._v("，获取 App")])]),t._v(" "),e("li",[e("p",[t._v("最后使用 "),e("code",[t._v("createApp")]),t._v(" 创建应用并挂载节点")])])]),t._v(" "),e("p",[t._v("vite 利用 ES module，把 “构建 vue 应用” 这个本来需要通过 webpack 打包后才能执行的代码直接放在浏览器里执行，这么做是的好外就是："),e("strong",[t._v("去掉打包步骤")]),t._v(" 和 "),e("strong",[t._v("实现按需加载")])]),t._v(" "),e("h2",{attrs:{id:"去掉打包步骤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#去掉打包步骤"}},[t._v("#")]),t._v(" 去掉打包步骤")]),t._v(" "),e("p",[t._v("打包的概念是开发者利用打包工具以一定规则读取模块的代码，对这些模块进行翻译转换，组成形成 bundle，以便在不支持模块化的浏览器里使用。webpack 的运行就离不开打包这个环节，先回顾一下 Webpack 的运行流程：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("[初始化参数]：从配置文件和 Shell 语句中读取与合并参数，得出最终的参数")])]),t._v(" "),e("li",[e("p",[t._v("[开始编译]：用上一步得到的参数初始化 Compiler 对象，加载所有配置的插件，执行对象的 run 方法开始执行编译")])]),t._v(" "),e("li",[e("p",[t._v("[确定入口]：根据配置中的 entry 找出所有的入口文件")])]),t._v(" "),e("li",[e("p",[t._v("[编译模块]：从入口文件出发，调用所有配置的 Loader 对模块进行翻译，再找出该模块依赖的模块，再递归本步骤直到所有入口依赖的文件都经过了本步骤的处理")])]),t._v(" "),e("li",[e("p",[t._v("[完成模块编译]：在经过第4步使用 Loader 翻译完所有模块后，得到了每个模块被翻译后的最终内容以及它们之间的依赖关系")])]),t._v(" "),e("li",[e("p",[t._v("[输出资源]：根据入口和模块之间的依赖关系，组装成一个个包含多个模块的 Chunk，再把每个 Chunk 转换成一个单独的文件加入到输出列表，这步是可以修改输出内容的最后机会")])]),t._v(" "),e("li",[e("p",[t._v("[输出完成]：在确定好输出内容后，根据配置确定输出的路径和文件名，把文件内容写入到文件系统")])])]),t._v(" "),e("p",[t._v("在 webpack 的启动和和每次热更新的过程中，模块的编译都需要花费很多的时间")]),t._v(" "),e("p",[e("strong",[t._v("vite 利用浏览器原生支持模块化导入这一特性，省略了对模块的编译和组装工作，所以打包这一步就可以省略了")])]),t._v(" "),e("h2",{attrs:{id:"实现按需打包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现按需打包"}},[t._v("#")]),t._v(" 实现按需打包")]),t._v(" "),e("p",[t._v("前面说到，webpack 会将各模块提前打包进 bundle 里，在不进行任何的处理的情况，webpack 会将所以的模块打包在一起——不管这个模块的代码是否有被执行到，所以往往一个 bundle 文件会很大，并且随着项目越来越大打包后的 bundle 也越来越大")]),t._v(" "),e("p",[t._v("为了解决这个问题，开发者会使用动态 "),e("code",[t._v("import()")]),t._v(" 的方式将模块进行分离，实现按需模块（ 但被分离的模块依然需要提前编译和打包)，又或者使用 teaserPlugin 进行代码压缩或 tree shaking 等方式尽力得去减小代码体积，然而这些方式都不如 vite 的优雅，"),e("strong",[t._v("vite 可以只在某个模块被 "),e("code",[t._v("import")]),t._v(" 时才去引入它，并且不需要提前打包")])]),t._v(" "),e("h2",{attrs:{id:"vite如何处理esm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vite如何处理esm"}},[t._v("#")]),t._v(" vite如何处理ESM")]),t._v(" "),e("p",[t._v("通过上文第一个直接使用 ES module 的例子可以发现对于 EMS 模块浏览器是会使用 http 请求的方式去拿到模块，但是这种方法只能识别符合 EMS 的模块，对于其它类型的模块是不能直接使用的，所以 vite 启动时也是启动了一个 web server 去代理这些模块，vite 通过对请求路径的劫持获取资源并对这些模块做了特殊处理")]),t._v(" "),e("h3",{attrs:{id:"node-module路径处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-module路径处理"}},[t._v("#")]),t._v(" node_module路径处理")]),t._v(" "),e("p",[t._v("上文在 vite-app 粟子中有提到源码中的 "),e("code",[t._v("import { createApp } from 'vue'")]),t._v(" 变成了 "),e("code",[t._v("import { createApp } from '/node_modules/.vite/vue.js?v=80d8618d'")])]),t._v(" "),e("p",[t._v("在开发时对于 "),e("code",[t._v("node_modules中")]),t._v(" 的模块，我们是以绝对路径的方式去获取，但是浏览器不知道，所以 vite 会对使用了绝对路径的 "),e("code",[t._v("import")]),t._v("，将路径重写成了 "),e("code",[t._v("node_modules")]),t._v(" 目录下面")]),t._v(" "),e("h3",{attrs:{id:"非ems模块的处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#非ems模块的处理"}},[t._v("#")]),t._v(" 非EMS模块的处理")]),t._v(" "),e("p",[t._v("既然 Vite 的模块加载是基于 ESM 的，可是现在很多的模块都是已经编译成了 cjs 的形式，对于这种形式的模块，Vite 引用时将不能正常访问，为了处理这个问题 Vite 加入了 "),e("code",[t._v("optimize")]),t._v(" 命令，只需要在 "),e("code",[t._v("vite.config.js")]),t._v(" （vite 配置文件）中，配置 "),e("code",[t._v("optimizeDeps")]),t._v(" 对象，在 include 数组中添加要处理的模块名即可")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vite.config.js")]),t._v("\nmodule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  optimizeDeps"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    include"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lodash"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("对于上面的配置 vite 在执行 "),e("code",[t._v("runOptimize")]),t._v(" 的时候中会使用 "),e("code",[t._v("roolup")]),t._v(" 对 "),e("code",[t._v("lodash")]),t._v(" 包重新编译，将编译成符合 esm 模块规范的新的包放入 "),e("code",[t._v("node_modules")]),t._v(" 下的 "),e("code",[t._v(".vite_opt_cache")]),t._v(" 中，然后配合 "),e("code",[t._v("resolver")]),t._v(" 对 "),e("code",[t._v("lodash")]),t._v(" 的导入进行处理：使用编译后的包内容代替原来 "),e("code",[t._v("lodash")]),t._v(" 的包的内容，这样就解决了 vite 中不能使用 cjs 包的问题。")]),t._v(" "),e("h3",{attrs:{id:"非类型的模块的处理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#非类型的模块的处理"}},[t._v("#")]),t._v(" 非类型的模块的处理")]),t._v(" "),e("p",[t._v("使用原生的 EMS 只是让浏览器自己支持 "),e("code",[t._v("import")]),t._v(" JS模块，但是实际开发还存在如 "),e("code",[t._v("css")]),t._v("、"),e("code",[t._v("less/scss")]),t._v("、"),e("code",[t._v("vue")]),t._v(" 等形式的模块，对于这类的模块 Vite 都配置的插件这些模块进行转换，但是这类的模块仍在加载时才进行处理的")]),t._v(" "),e("h2",{attrs:{id:"vs-webpack"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vs-webpack"}},[t._v("#")]),t._v(" VS Webpack")]),t._v(" "),e("p",[t._v("之前对 Vite 有了大致之后，就很容易捊清楚跟 Webpack 的区别了")]),t._v(" "),e("p",[t._v("Webpack 原理图")]),t._v(" "),e("p",[e("img",{attrs:{src:a(527),alt:""}})]),t._v(" "),e("p",[t._v("Vite 原理图")]),t._v(" "),e("p",[e("img",{attrs:{src:a(528),alt:""}})]),t._v(" "),e("p",[e("strong",[t._v("Webpack")])]),t._v(" "),e("p",[t._v("识别入口->逐层识别依赖->分析/转换/编译/输出代码->打包后的代码")]),t._v(" "),e("p",[t._v("Webpack 需要一个打包的过程，包括在 HMR 方面，即改动了一个模块，Webpack 也是需要将该模块的相关依赖模块全部编译一次")]),t._v(" "),e("p",[e("strong",[t._v("Vite")])]),t._v(" "),e("p",[t._v("vite是直接启动开发服务器，请求哪个模块再对该模块进行编译，直接实现了按需加载模块，极大的缩减了编译时间")]),t._v(" "),e("h3",{attrs:{id:"vite-的缺点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vite-的缺点"}},[t._v("#")]),t._v(" Vite 的缺点")]),t._v(" "),e("p",[t._v("虽然在开发环境可以使用特定的浏览器进行快速开发，但在生产环境下仍需要考虑浏览的兼容性和差异性，所以也是要像 Webpack 进行打包工作，目前因为生态的关系 Webpack 生产环境的构建还是不如 Webpack 完善")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://jishuin.proginn.com/p/763bfbd29d7f",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入 vite 原理：尤大最新力作到底是如何实现的？"),e("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);