(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{559:function(t,e,a){t.exports=a.p+"assets/img/scoped.3a8dc641.jpg"},768:function(t,e,a){"use strict";a.r(e);var v=a(58),s=Object(v.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"吱不吱"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#吱不吱"}},[t._v("#")]),t._v(" 吱不吱")]),t._v(" "),v("h3",{attrs:{id:"在使用计算属性的时-函数名和-data-数据源中的数据可以同名吗"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#在使用计算属性的时-函数名和-data-数据源中的数据可以同名吗"}},[t._v("#")]),t._v(" 在使用计算属性的时，函数名和 data 数据源中的数据可以同名吗？")]),t._v(" "),v("p",[t._v("可以同名，但 "),v("code",[t._v("data")]),t._v(" 会覆盖 "),v("code",[t._v("methods")]),t._v("。因为"),v("code",[t._v("Props")]),t._v("、"),v("code",[t._v("methods")]),t._v("、"),v("code",[t._v("data")]),t._v("、"),v("code",[t._v("computed")]),t._v("、"),v("code",[t._v("watch")]),t._v(" 都是在 "),v("code",[t._v("initState")]),t._v(" 函数中被初始化的。初始化顺序就是我上面给出的顺序，本质上这些都是要挂载到 "),v("code",[t._v("this")]),t._v(" 上面的，如果重名的话，后面出现的属性自然而然会覆盖之前挂载的属性了。")]),t._v(" "),v("h3",{attrs:{id:"跟keep-alive有关的生命周期是哪些-描述下这些生命周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#跟keep-alive有关的生命周期是哪些-描述下这些生命周期"}},[t._v("#")]),t._v(" 跟keep-alive有关的生命周期是哪些？描述下这些生命周期")]),t._v(" "),v("ul",[v("li",[v("p",[v("code",[t._v("activated")]),t._v(": 动态组件激活时执行，包括首次显示在"),v("code",[t._v("mounted")]),t._v("后执行")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("deactivatd")]),t._v(": 动态组件离开时执行")])])]),t._v(" "),v("h3",{attrs:{id:"vue中怎么重置data"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue中怎么重置data"}},[t._v("#")]),t._v(" vue中怎么重置data")]),t._v(" "),v("p",[t._v("vue组件有两个属性：")]),t._v(" "),v("ul",[v("li",[v("p",[v("code",[t._v("this.$data")]),t._v(": 当前状态下的 "),v("code",[t._v("data")])])]),t._v(" "),v("li",[v("p",[v("code",[t._v("this.$options.data()")]),t._v(": 获取初化状态下的 "),v("code",[t._v("data")])])])]),t._v(" "),v("p",[t._v("所以重置 "),v("code",[t._v("data")]),t._v(" 的方式为："),v("code",[t._v("Object.assign(this.$data, this.$options.data())")])]),t._v(" "),v("h3",{attrs:{id:"style加scoped属性的用途和原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#style加scoped属性的用途和原理"}},[t._v("#")]),t._v(" style加scoped属性的用途和原理")]),t._v(" "),v("p",[t._v("用途："),v("code",[t._v("防止污染同名的CSS样式")])]),t._v(" "),v("p",[t._v("原理：在标签加上 "),v("code",[t._v("v-data-something")]),t._v(" 属性，再在选择器时加上对应 "),v("code",[t._v("[v-data-something]")]),t._v(" ，即 CSS 带属性选择器，以此完成类似作用域的选择方式")]),t._v(" "),v("p",[v("img",{attrs:{src:a(559),alt:""}})]),t._v(" "),v("h3",{attrs:{id:"vue的错误捕获"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue的错误捕获"}},[t._v("#")]),t._v(" vue的错误捕获")]),t._v(" "),v("ul",[v("li",[v("p",[v("code",[t._v("errorCaptured")]),t._v(": "),v("code",[t._v("errorCaptured")]),t._v(" 是组件内部钩子，可捕捉本组件与子孙组件抛出的错误，接收"),v("code",[t._v("error")]),t._v("、"),v("code",[t._v("vm")]),t._v("、"),v("code",[t._v("info")]),t._v(" 三个参数，"),v("code",[t._v("return false")]),t._v(" 后可以阻止错误继续向上抛出")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("errorHandler")]),t._v(" 为全局钩子，使用 "),v("code",[t._v("Vue.config.errorHandler")]),t._v(" 配置，接收参数与"),v("code",[t._v("errorCaptured")]),t._v("一致")])])]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[t._v("Vue"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("errorHandler")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vm"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" info")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// handle error")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `info` 是 Vue 特定的错误信息，比如错误所在的生命周期钩子")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只在 2.2.0+ 可用")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),v("h3",{attrs:{id:"在vue事件中传入-event-使用-e-target-和-e-currenttarget有什么区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#在vue事件中传入-event-使用-e-target-和-e-currenttarget有什么区别"}},[t._v("#")]),t._v(" 在vue事件中传入 "),v("code",[t._v("$event")]),t._v("，使用 "),v("code",[t._v("e.target")]),t._v(" 和 "),v("code",[t._v("e.currentTarget")]),t._v("有什么区别")]),t._v(" "),v("ul",[v("li",[v("p",[v("code",[t._v("e.currentTarget")]),t._v("：绑定事件的对象")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("e.target")]),t._v(": 真正触发事件的对象")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("$event")]),t._v(": "),v("code",[t._v("e")])])])]),t._v(" "),v("h3",{attrs:{id:"vue变量名如果以-、-开头的属性会发生什么问题-怎么访问到它们的值"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue变量名如果以-、-开头的属性会发生什么问题-怎么访问到它们的值"}},[t._v("#")]),t._v(" vue变量名如果以_、$开头的属性会发生什么问题？怎么访问到它们的值")]),t._v(" "),v("p",[t._v("以 "),v("code",[t._v("_")]),t._v(" 或 "),v("code",[t._v("$")]),t._v(" 开头的属性不会被 Vue 实例代理，因为它们可能和 Vue 内置的属性、API 方法冲突。你可以使用例如 "),v("code",[t._v("vm.$data._property")]),t._v(" 的方式访问这些属性")]),t._v(" "),v("h3",{attrs:{id:"vue使用v-for遍历对象时-是按什么顺序遍历的"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue使用v-for遍历对象时-是按什么顺序遍历的"}},[t._v("#")]),t._v(" vue使用v-for遍历对象时，是按什么顺序遍历的")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("会先判断是否有 "),v("code",[t._v("iterator")]),t._v(" 接口，如果有循环执行 "),v("code",[t._v("next()")]),t._v(" 方法")])]),t._v(" "),v("li",[v("p",[t._v("没有 "),v("code",[t._v("iterator")]),t._v(" 的情况下，会调用 "),v("code",[t._v("Object.keys()")]),t._v(" 方法，在不同浏览器中，JS引擎不能保证输出顺序一致")])])]),t._v(" "),v("p",[t._v("保证对象的输出顺序可以把对象放在数组中，作为数组的元素")]),t._v(" "),v("h3",{attrs:{id:"lazy修辞符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#lazy修辞符"}},[t._v("#")]),t._v(" .lazy修辞符")]),t._v(" "),v("p",[t._v("在默认情况下，"),v("code",[t._v("v-model")]),t._v(" 在每次 "),v("code",[t._v("input")]),t._v(" 事件触发后将输入框的值与数据进行同步 (除了上述输入法组合文字时)。你可以添加 "),v("code",[t._v("lazy")]),t._v(" 修饰符，从而转为在 "),v("code",[t._v("change")]),t._v(" 事件之后进行同步：")]),t._v(" "),v("div",{staticClass:"language-html extra-class"},[v("pre",{pre:!0,attrs:{class:"language-html"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 在“change”时而非“input”时更新 --\x3e")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-model.lazy")]),v("span",{pre:!0,attrs:{class:"token attr-value"}},[v("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("msg"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),v("p",[v("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/71229672",target:"_blank",rel:"noopener noreferrer"}},[t._v("248+个知识点"),v("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=s.exports}}]);