import{_ as a,o,c as e,b as n,a as t,d as p,e as c,r as l}from"./app.4d5def3b.js";const i={},u=p(`<h1 id="symbol" tabindex="-1"><a class="header-anchor" href="#symbol" aria-hidden="true">#</a> Symbol</h1><p><code>symbol</code> \u662F\u4E00\u79CD\u57FA\u672C\u6570\u636E\u7C7B\u578B, <strong>\u6BCF\u4E2A\u4ECE <code>Symbol()</code> \u8FD4\u56DE\u7684 <code>symbol</code> \u503C\u90FD\u662F\u552F\u4E00\u7684</strong></p><p>\u52A0\u4E0A <code>symbol</code> JavaScript \u8BED\u8A00\u5C31\u4E00\u5171\u67096\u79CD\u57FA\u672C\u6570\u636E\u7C7B\u578B\uFF1A<code>undefined</code> \u3001<code>null</code> \u3001\u5E03\u5C14\u503C\uFF08Boolean\uFF09\u3001\u5B57\u7B26\u4E32\uFF08String\uFF09\u3001\u6570\u503C\uFF08Number\uFF09\u3001<code>symbol</code></p><p>Symbol\u51FD\u6570\u53EF\u4EE5\u63A5\u53D7\u4E00\u4E2A\u5B57\u7B26\u4E32\u4F5C\u4E3A\u53C2\u6570\uFF0C\u8868\u793A\u5BF9 Symbol \u5B9E\u4F8B\u7684\u63CF\u8FF0\uFF0C\u4E3B\u8981\u662F\u4E3A\u4E86\u5728\u63A7\u5236\u53F0\u663E\u793A\uFF0C\u6216\u8005\u8F6C\u4E3A\u5B57\u7B26\u4E32\u65F6\uFF0C\u6BD4\u8F83\u5BB9\u6613\u533A\u5206</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> s1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> s2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

s1 <span class="token comment">// Symbol(foo)</span>
s2 <span class="token comment">// Symbol(bar)</span>

s1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// &quot;Symbol(foo)&quot;</span>
s2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// &quot;Symbol(bar)&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C Symbol \u7684\u53C2\u6570\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5C31\u4F1A\u8C03\u7528\u8BE5\u5BF9\u8C61\u7684 <code>toString</code> \u65B9\u6CD5\uFF0C\u5C06\u5176\u8F6C\u4E3A\u5B57\u7B26\u4E32\uFF0C\u7136\u540E\u624D\u751F\u6210\u4E00\u4E2A Symbol \u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> sym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
sym <span class="token comment">// Symbol(abc)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0CSymbol\u51FD\u6570\u7684\u53C2\u6570\u53EA\u662F\u8868\u793A\u5BF9\u5F53\u524D Symbol \u503C\u7684\u63CF\u8FF0\uFF0C\u56E0\u6B64\u76F8\u540C\u53C2\u6570\u7684Symbol\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u662F\u4E0D\u76F8\u7B49\u7684</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6CA1\u6709\u53C2\u6570\u7684\u60C5\u51B5</span>
<span class="token keyword">let</span> s1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> s2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

s1 <span class="token operator">===</span> s2 <span class="token comment">// false</span>

<span class="token comment">// \u6709\u53C2\u6570\u7684\u60C5\u51B5</span>
<span class="token keyword">let</span> s1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> s2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

s1 <span class="token operator">===</span> s2 <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Symbol \u503C\u4E0D\u80FD\u4E0E\u5176\u4ED6\u7C7B\u578B\u7684\u503C\u8FDB\u884C\u8FD0\u7B97\uFF0C\u4F1A\u62A5\u9519</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> sym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;My symbol&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token string">&quot;your symbol is &quot;</span> <span class="token operator">+</span> sym
<span class="token comment">// TypeError: can&#39;t convert symbol to string</span>
<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">your symbol is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>sym<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token comment">// TypeError: can&#39;t convert symbol to string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Symbol \u503C\u53EF\u4EE5\u663E\u5F0F\u8F6C\u4E3A\u5B57\u7B26\u4E32</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> sym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;My symbol&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">String</span><span class="token punctuation">(</span>sym<span class="token punctuation">)</span> <span class="token comment">// &#39;Symbol(My symbol)&#39;</span>
sym<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// &#39;Symbol(My symbol)&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53E6\u5916\uFF0CSymbol \u503C\u4E5F\u53EF\u4EE5\u8F6C\u4E3A\u5E03\u5C14\u503C\uFF0C\u4F46\u662F\u4E0D\u80FD\u8F6C\u4E3A\u6570\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> sym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">Boolean</span><span class="token punctuation">(</span>sym<span class="token punctuation">)</span> <span class="token comment">// true</span>
<span class="token operator">!</span>sym  <span class="token comment">// false</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>sym<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token function">Number</span><span class="token punctuation">(</span>sym<span class="token punctuation">)</span> <span class="token comment">// TypeError</span>
sym <span class="token operator">+</span> <span class="token number">2</span> <span class="token comment">// TypeError</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="symbol-prototype-description" tabindex="-1"><a class="header-anchor" href="#symbol-prototype-description" aria-hidden="true">#</a> Symbol.prototype.description</h2><p>\u83B7\u53D6 Symbol \u63CF\u8FF0\u7B26\u7684\u4E00\u4E2A\u65B9\u6CD5\u662F\u663E\u5F0F\u8F6C\u4E3A\u5B57\u7B26\u4E32</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> sym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">String</span><span class="token punctuation">(</span>sym<span class="token punctuation">)</span> <span class="token comment">// &quot;Symbol(foo)&quot;</span>
sym<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// &quot;Symbol(foo)&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ES2019 \u63D0\u4F9B\u4E86\u4E00\u4E2A\u5B9E\u4F8B\u5C5E\u6027 <code>description</code> \uFF0C\u76F4\u63A5\u8FD4\u56DE Symbol \u7684\u63CF\u8FF0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> sym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

sym<span class="token punctuation">.</span>description <span class="token comment">// &quot;foo&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4F5C\u4E3A\u5C5E\u6027\u540D\u7684-symbol" tabindex="-1"><a class="header-anchor" href="#\u4F5C\u4E3A\u5C5E\u6027\u540D\u7684-symbol" aria-hidden="true">#</a> \u4F5C\u4E3A\u5C5E\u6027\u540D\u7684 Symbol</h2><p>Symbol \u503C\u4F5C\u4E3A\u5BF9\u8C61\u5C5E\u6027\u540D\u65F6\uFF0C\u4E0D\u80FD\u7528\u70B9\u8FD0\u7B97\u7B26</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> mySymbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

a<span class="token punctuation">.</span>mySymbol <span class="token operator">=</span> <span class="token string">&#39;Hello!&#39;</span><span class="token punctuation">;</span>
a<span class="token punctuation">[</span>mySymbol<span class="token punctuation">]</span> <span class="token comment">// undefined</span>
a<span class="token punctuation">[</span><span class="token string">&#39;mySymbol&#39;</span><span class="token punctuation">]</span> <span class="token comment">// &quot;Hello!&quot;</span>

<span class="token comment">// \u6B63\u786E\u7528\u6CD5</span>
a<span class="token punctuation">[</span>mySymbol<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Hello!&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B2C\u4E8C\u79CD\u5199\u6CD5</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>mySymbol<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;Hello!&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
a<span class="token punctuation">[</span>mySymbol<span class="token punctuation">]</span> <span class="token comment">// &quot;Hello!&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u56E0\u4E3A\u70B9\u8FD0\u7B97\u7B26\u540E\u9762\u603B\u662F\u5B57\u7B26\u4E32\uFF0C\u6240\u4EE5\u4E0D\u4F1A\u8BFB\u53D6 <code>mySymbol</code> \u4F5C\u4E3A\u6807\u8BC6\u540D\u6240\u6307\u4EE3\u7684\u90A3\u4E2A\u503C\uFF0C\u5BFC\u81F4a\u7684\u5C5E\u6027\u540D\u5B9E\u9645\u4E0A\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u800C\u4E0D\u662F\u4E00\u4E2A Symbol \u503C</p><h2 id="\u904D\u5386-symbol\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386-symbol\u5C5E\u6027" aria-hidden="true">#</a> \u904D\u5386 symbol\u5C5E\u6027</h2><p>Symbol \u4F5C\u4E3A\u5C5E\u6027\u540D\uFF0C\u904D\u5386\u5BF9\u8C61\u7684\u65F6\u5019\uFF0C\u8BE5\u5C5E\u6027\u4E0D\u4F1A\u51FA\u73B0\u5728 <code>for...in</code>\u3001<code>for...of</code> \u5FAA\u73AF\u4E2D\uFF0C\u4E5F\u4E0D\u4F1A\u88AB <code>Object.keys()</code> \u3001<code>Object.getOwnPropertyNames()</code>\u3001<code>JSON.stringify()</code> \u8FD4\u56DE</p><p>\u53EA\u80FD\u4F7F\u7528 <code>Object.getOwnPropertySymbols()</code>\u53EF\u4EE5\u83B7\u53D6\u6307\u5B9A\u5BF9\u8C61\u7684\u6240\u6709 Symbol \u5C5E\u6027\u540D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

obj<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;Hello&#39;</span><span class="token punctuation">;</span>
obj<span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;World&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> objectSymbols <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertySymbols</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>

objectSymbols
<span class="token comment">// [Symbol(a), Symbol(b)]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9664\u4E86 <code>Object.getOwnPropertyNames()</code>, <code>Reflect.ownKeys()</code> \u65B9\u6CD5\u4E5F\u53EF\u4EE5\u8FD4\u56DE\u6240\u6709\u7C7B\u578B\u7684\u952E\u540D\uFF0C\u5305\u62EC\u5E38\u89C4\u952E\u540D\u548C Symbol \u952E\u540D\u4EE5\u53CA\u4E0D\u53EF\u679A\u4E3E\u7684\u5C5E\u6027</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;my_key&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token keyword">enum</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token literal-property property">nonEnum</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
<span class="token comment">//  [&quot;enum&quot;, &quot;nonEnum&quot;, Symbol(my_key)]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="symbol-for-symbol-keyfor" tabindex="-1"><a class="header-anchor" href="#symbol-for-symbol-keyfor" aria-hidden="true">#</a> Symbol.for()\uFF0CSymbol.keyFor()</h2><p>\u6709\u65F6\uFF0C\u6211\u4EEC\u5E0C\u671B\u91CD\u65B0\u4F7F\u7528\u540C\u4E00\u4E2A Symbol \u503C\uFF0C<code>Symbol.for()</code>\u3000\u65B9\u6CD5\u53EF\u4EE5\u505A\u5230\u8FD9\u4E00\u70B9\u3002\u5B83\u63A5\u53D7\u4E00\u4E2A\u5B57\u7B26\u4E32\u4F5C\u4E3A\u53C2\u6570\uFF0C\u7136\u540E\u641C\u7D22\u6709\u6CA1\u6709\u4EE5\u8BE5\u53C2\u6570\u4F5C\u4E3A\u540D\u79F0\u7684 Symbol \u503C\u3002\u5982\u679C\u6709\uFF0C\u5C31\u8FD4\u56DE\u8FD9\u4E2A Symbol \u503C\uFF0C\u5426\u5219\u5C31\u65B0\u5EFA\u4E00\u4E2A\u4EE5\u8BE5\u5B57\u7B26\u4E32\u4E3A\u540D\u79F0\u7684 Symbol \u503C\uFF0C\u5E76\u5C06\u5176\u6CE8\u518C\u5230\u5168\u5C40</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> s1 <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> s2 <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

s1 <span class="token operator">===</span> s2 <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Symbol.for()</code> \u4E0E <code>Symbol()</code> \u8FD9\u4E24\u79CD\u5199\u6CD5\uFF0C\u90FD\u4F1A\u751F\u6210\u65B0\u7684 Symbol\u3002\u5B83\u4EEC\u7684\u533A\u522B\u662F\uFF0C\u524D\u8005\u4F1A\u88AB\u767B\u8BB0\u5728\u5168\u5C40\u73AF\u5883\u4E2D\u4F9B\u641C\u7D22\uFF0C\u540E\u8005\u4E0D\u4F1A\u3002<code>Symbol.for()</code> \u4E0D\u4F1A\u6BCF\u6B21\u8C03\u7528\u5C31\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 Symbol \u7C7B\u578B\u7684\u503C\uFF0C\u800C\u662F\u4F1A\u5148\u68C0\u67E5\u7ED9\u5B9A\u7684 <code>key</code> \u662F\u5426\u5DF2\u7ECF\u5B58\u5728\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u624D\u4F1A\u65B0\u5EFA\u4E00\u4E2A\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span> <span class="token operator">===</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// true</span>

<span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span>
<span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C<code>Symbol.for()\u4E3A</code> Symbol \u503C\u767B\u8BB0\u7684\u540D\u5B57\uFF0C\u662F\u5168\u5C40\u73AF\u5883\u7684\uFF0C\u4E0D\u7BA1\u6709\u6CA1\u6709\u5728\u5168\u5C40\u73AF\u5883\u8FD0\u884C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> y <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x <span class="token operator">===</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Symbol.for()</code> \u7684\u8FD9\u4E2A\u5168\u5C40\u767B\u8BB0\u7279\u6027\uFF0C\u53EF\u4EE5\u7528\u5728\u4E0D\u540C\u7684 <code>ifram</code>e \u6216 <code>service worker</code> \u4E2D\u53D6\u5230\u540C\u4E00\u4E2A\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>iframe <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;iframe&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
iframe<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>location<span class="token punctuation">)</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>iframe<span class="token punctuation">)</span><span class="token punctuation">;</span>

iframe<span class="token punctuation">.</span>contentWindow<span class="token punctuation">.</span>Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span> <span class="token operator">===</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Symbol.keyFor()</code> \u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u5DF2\u767B\u8BB0\u7684 Symbol \u7C7B\u578B\u503C\u7684 <code>key</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> s1 <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token comment">// &quot;foo&quot;</span>

<span class="token comment">// \u53D8\u91CFs2\u5C5E\u4E8E\u672A\u767B\u8BB0\u7684 Symbol \u503C\uFF0C\u6240\u4EE5\u8FD4\u56DEundefined</span>
<span class="token keyword">let</span> s2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span> <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5B9E\u73B0symbol" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0symbol" aria-hidden="true">#</a> \u5B9E\u73B0Symbol</h2><h3 id="\u7B2C\u4E00\u7248" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E00\u7248" aria-hidden="true">#</a> \u7B2C\u4E00\u7248</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B2C\u4E00\u7248</span>
<span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> root <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>

    <span class="token keyword">var</span> <span class="token function-variable function">SymbolPolyfill</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token parameter">description</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">// \u5B9E\u73B0\u7279\u6027\uFF1ASymbol \u51FD\u6570\u524D\u4E0D\u80FD\u4F7F\u7528 new \u547D\u4EE4</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">SymbolPolyfill</span><span class="token punctuation">)</span> <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;Symbol is not a constructor&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5B9E\u73B0\u7279\u6027\uFF1A\u5982\u679C Symbol \u7684\u53C2\u6570\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5C31\u4F1A\u8C03\u7528\u8BE5\u5BF9\u8C61\u7684 toString \u65B9\u6CD5\uFF0C\u5C06\u5176\u8F6C\u4E3A\u5B57\u7B26\u4E32\uFF0C\u7136\u540E\u624D\u751F\u6210\u4E00\u4E2A Symbol \u503C\u3002</span>
        <span class="token keyword">var</span> descString <span class="token operator">=</span> description <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> <span class="token function">String</span><span class="token punctuation">(</span>description<span class="token punctuation">)</span>

        <span class="token keyword">var</span> symbol <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>

        Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span>symbol<span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&#39;__Description__&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">value</span><span class="token operator">:</span> descString<span class="token punctuation">,</span>
                <span class="token literal-property property">writable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">false</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5B9E\u73B0\u7279\u6027\uFF0C\u56E0\u4E3A\u8C03\u7528\u8BE5\u65B9\u6CD5\uFF0C\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u65B0\u5BF9\u8C61\uFF0C\u4E24\u4E2A\u5BF9\u8C61\u4E4B\u95F4\uFF0C\u53EA\u8981\u5F15\u7528\u4E0D\u540C\uFF0C\u5C31\u4E0D\u4F1A\u76F8\u540C</span>
        <span class="token keyword">return</span> symbol<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    root<span class="token punctuation">.</span>SymbolPolyfill <span class="token operator">=</span> SymbolPolyfill<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7B2C\u4E8C\u7248" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E8C\u7248" aria-hidden="true">#</a> \u7B2C\u4E8C\u7248</h3><p><strong>\u4F7F\u7528 typeof\uFF0C\u7ED3\u679C\u4E3A &quot;symbol&quot;</strong></p><p>\u5229\u7528 ES5\uFF0C\u6211\u4EEC\u5E76\u4E0D\u80FD\u4FEE\u6539 typeof \u64CD\u4F5C\u7B26\u7684\u7ED3\u679C\uFF0C\u6240\u4EE5\u8FD9\u4E2A\u65E0\u6CD5\u5B9E\u73B0</p><p><strong>Symbol \u51FD\u6570\u53EF\u4EE5\u63A5\u53D7\u4E00\u4E2A\u5B57\u7B26\u4E32\u4F5C\u4E3A\u53C2\u6570\uFF0C\u8868\u793A\u5BF9 Symbol \u5B9E\u4F8B\u7684\u63CF\u8FF0\u3002\u4E3B\u8981\u662F\u4E3A\u4E86\u5728\u63A7\u5236\u53F0\u663E\u793A\uFF0C\u6216\u8005\u8F6C\u4E3A\u5B57\u7B26\u4E32\u65F6\uFF0C\u6BD4\u8F83\u5BB9\u6613\u533A\u5206</strong></p><p>\u5F53\u6211\u4EEC\u6253\u5370\u4E00\u4E2A\u539F\u751F Symbol \u503C\u7684\u65F6\u5019\uFF1A</p><p><code>console.log(Symbol(&#39;1&#39;)); // Symbol(1)</code></p><p>\u53EF\u662F\u6211\u4EEC\u6A21\u62DF\u5B9E\u73B0\u7684\u65F6\u5019\u8FD4\u56DE\u7684\u5374\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u6240\u4EE5\u8FD9\u4E2A\u4E5F\u662F\u65E0\u6CD5\u5B9E\u73B0\u7684\uFF0C\u5F53\u7136\u4F60\u4FEE\u6539 console.log \u8FD9\u4E2A\u65B9\u6CD5\u662F\u53E6\u8BB2</p><p><strong>Symbol \u503C\u53EF\u4EE5\u663E\u5F0F\u8F6C\u4E3A\u5B57\u7B26\u4E32</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> sym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;My symbol&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span>sym<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;Symbol(My symbol)&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sym<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;Symbol(My symbol)&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u8C03\u7528 String \u65B9\u6CD5\u7684\u65F6\u5019\uFF0C\u5982\u679C\u8BE5\u5BF9\u8C61\u6709 toString \u65B9\u6CD5\uFF0C\u5C31\u4F1A\u8C03\u7528\u8BE5 toString \u65B9\u6CD5\uFF0C\u6240\u4EE5\u6211\u4EEC\u53EA\u8981\u7ED9\u8FD4\u56DE\u7684\u5BF9\u8C61\u6DFB\u52A0\u4E00\u4E2A toString \u65B9\u6CD5\uFF0C\u5373\u53EF\u5B9E\u73B0\u8FD9\u4E24\u4E2A\u6548\u679C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B2C\u4E8C\u7248</span>

<span class="token comment">// \u524D\u9762\u9762\u4EE3\u7801\u76F8\u540C \u2026\u2026</span>

<span class="token keyword">var</span> symbol <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function-variable function">toString</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;Symbol(&#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__Description__ <span class="token operator">+</span> <span class="token string">&#39;)&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,55),r={href:"https://juejin.cn/post/6844903619544760328#heading-3",target:"_blank",rel:"noopener noreferrer"},d=c("ES6 \u7CFB\u5217\u4E4B\u6A21\u62DF\u5B9E\u73B0 Symbol \u7C7B\u578B");function k(m,v){const s=l("ExternalLinkIcon");return o(),e("div",null,[u,n("p",null,[n("a",r,[d,t(s)])])])}var y=a(i,[["render",k],["__file","Symbol.html.vue"]]);export{y as default};
