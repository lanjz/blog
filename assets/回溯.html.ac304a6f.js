import{_ as e,o,c,b as n,a as t,d as a,e as s,r as i}from"./app.cd435b6b.js";var l="/lanjz/assets/screenshot.38a0a2e1.png";const u={},r=a('<h1 id="\u56DE\u6EAF" tabindex="-1"><a class="header-anchor" href="#\u56DE\u6EAF" aria-hidden="true">#</a> \u56DE\u6EAF</h1><p>\u56DE\u6EAF\u7B97\u6CD5\u5B9E\u9645\u4E0A\u4E00\u4E2A\u7C7B\u4F3C\u679A\u4E3E\u7684\u641C\u7D22\u5C1D\u8BD5\u8FC7\u7A0B\uFF0C\u4E3B\u8981\u662F\u5728\u641C\u7D22\u5C1D\u8BD5\u8FC7\u7A0B\u4E2D\u5BFB\u627E\u95EE\u9898\u7684\u89E3\uFF0C\u5F53\u53D1\u73B0\u5DF2\u4E0D\u6EE1\u8DB3\u6C42\u89E3\u6761\u4EF6\u65F6\uFF0C\u5C31\u201C\u56DE\u6EAF\u201D\u8FD4\u56DE\uFF0C\u5C1D\u8BD5\u522B\u7684\u8DEF\u5F84\u3002</p><p>\u7528\u56DE\u6EAF\u7B97\u6CD5\u89E3\u51B3\u95EE\u9898\u7684\u4E00\u822C\u6B65\u9AA4\uFF1A</p><ul><li><p>\u9488\u5BF9\u6240\u7ED9\u95EE\u9898\uFF0C\u5B9A\u4E49\u95EE\u9898\u7684\u89E3\u7A7A\u95F4\uFF0C\u5B83\u81F3\u5C11\u5305\u542B\u95EE\u9898\u7684\u4E00\u4E2A\uFF08\u6700\u4F18\uFF09\u89E3\u3002</p></li><li><p>\u786E\u5B9A\u6613\u4E8E\u641C\u7D22\u7684\u89E3\u7A7A\u95F4\u7ED3\u6784,\u4F7F\u5F97\u80FD\u7528\u56DE\u6EAF\u6CD5\u65B9\u4FBF\u5730\u641C\u7D22\u6574\u4E2A\u89E3\u7A7A\u95F4</p></li><li><p>\u4EE5\u6DF1\u5EA6\u4F18\u5148\u7684\u65B9\u5F0F\u641C\u7D22\u89E3\u7A7A\u95F4\uFF0C\u5E76\u4E14\u5728\u641C\u7D22\u8FC7\u7A0B\u4E2D\u7528\u526A\u679D\u51FD\u6570\u907F\u514D\u65E0\u6548\u641C\u7D22</p></li></ul><h2 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h2><p>\u505A\u56DE\u6EAF\u7684\u9898\uFF0C\u9996\u5148\u8981\u5C3D\u91CF\u628A\u76EE\u6807\u62BD\u8C61\u6210\u6811\uFF0C\u628A\u89E3\u9898\u8FC7\u7A0B\u8F6C\u6362\u6210\u5982\u679C\u904D\u5386\u8FD9\u4E2A\u6811\u7684\u8FC7\u7A0B</p><p>\u5982\u5BF9\u4E8E\u4F8B\u5B50 <code>[1,2,3]</code> \uFF0C\u53EF\u4EE5\u5148\u62BD\u8C61\u6210\u4EE5\u4E0B\u7ED3\u6784\u7684\u6811\uFF0C\u4E4B\u540E\u518D\u6839\u636E\u5177\u4F53\u9898\u610F\u8FDB\u884C\u89E3\u9898</p><p><img src="'+l+`" alt=""></p><p>\u56DE\u6EAF\u662F\u7ECF\u8FC7\u4FEE\u6539\u7684\u6DF1\u5EA6\u4F18\u5148\u67E5\u627E\u65B9\u6CD5\uFF0C\u8FC7\u7A0B\u5305\u62EC\uFF1A\u5BF9\u4E00\u4E2A\u72B6\u6001\u7A7A\u95F4\u6811\u8FDB\u884C\u6DF1\u5EA6\u4F18\u5148\u67E5\u627E\uFF0C\u68C0\u67E5\u6BCF\u4E2A\u8282\u70B9\u662F\u5426\u6EE1\u8DB3\u6761\u4EF6\u3002\u5982\u679C\u4E0D\u6EE1\u8DB3\u5C31\u56DE\u6EAF\u5230\u8BE5\u8282\u70B9\u7684\u7236\u8282\u70B9\u3002\u7B97\u6CD5\u6846\u67B6(\u4F2A\u4EE3\u7801)\u5982\u4E0B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>result = []
backtrack(\u8DEF\u5F84, \u9009\u62E9\u5217\u8868):
    if \u6EE1\u8DB3\u7ED3\u675F\u6761\u4EF6:
        result.add(\u8DEF\u5F84)
        return
    
    for \u9009\u62E9 in \u9009\u62E9\u5217\u8868:
        \u505A\u9009\u62E9
        backtrack(\u8DEF\u5F84, \u9009\u62E9\u5217\u8868)
        \u64A4\u9500\u9009\u62E9

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),k={id:"_46-\u5168\u6392\u5217",tabindex:"-1"},d=n("a",{class:"header-anchor",href:"#_46-\u5168\u6392\u5217","aria-hidden":"true"},"#",-1),m=s(),v={href:"https://leetcode-cn.com/problems/permutations/",target:"_blank",rel:"noopener noreferrer"},b=s("46. \u5168\u6392\u5217"),h=a(`<p>\u7ED9\u5B9A\u4E00\u4E2A \u6CA1\u6709\u91CD\u590D \u6570\u5B57\u7684\u5E8F\u5217\uFF0C\u8FD4\u56DE\u5176\u6240\u6709\u53EF\u80FD\u7684\u5168\u6392\u5217</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165: [1,2,3]
\u8F93\u51FA:
[
  [1,2,3],
  [1,3,2],
  [2,1,3],
  [2,3,1],
  [3,1,2],
  [3,2,1]
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u601D\u8DEF</strong></p><p>\u4EE5\u4E0A\u9762\u7684\u6811\u4E3A\u4F8B\uFF0C\u8FD9\u4E2A\u9898\u76EE\u5C31\u53EF\u4EE5\u8F6C\u6362\u6210\uFF0C\u6DF1\u5EA6\u4E14\u524D\u5E8F\u904D\u5386\u8BE5\u6811</p><p>\u5982\u679C\u53EA\u662F\u4F7F\u7528\u6DF1\u5EA6\u4E14\u524D\u5E8F\u904D\u5386\u8BE5\u6811\u7684\u8BDD\uFF0C\u4EE3\u7801\u5982\u4E0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">var</span> <span class="token function-variable function">permute1</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> tem <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> <span class="token function-variable function">walk</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u7ED3\u679C\u6761\u4EF6\uFF1A\u5230\u8FBE\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u7ED3\u675F</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        tem<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u524D\u5E8F\u904D\u5386\uFF0C\u6240\u4EE5\u5148\u4FDD\u5B58\u503C</span>
        <span class="token function">walk</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// \u6DF1\u5EA6\u4F18\u5148\uFF0C\u6240\u4EE5\u9012\u5F52\u8BBF\u95EE\u4E0B\u4E00\u4E2A</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">walk</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> tem
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6839\u636E\u9898\u610F\u505A\u4E9B\u4EE3\u7801\u6539\u52A8</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">permute</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u904D\u5386\u5B8C\u4E00\u6761\u8DEF\u5F84\u540E\uFF0C\u4FDD\u5B58\u8FD9\u4E2A\u8DEF\u5F84</span>
    <span class="token keyword">let</span> tem <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length
    <span class="token keyword">let</span> <span class="token function-variable function">walk</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">===</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u7ED3\u679C\u6761\u4EF6\uFF1A\u6700\u540E\u4E00\u8282\u70B9\u5DF2\u7ECF\u7ED3\u679C\uFF0C\u51FA\u7ED3\u679C</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>tem<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>tem<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">// \u4E00\u6B21\u8DEF\u5F84\u4E2D\uFF0C\u5982\u679C\u4E4B\u524D\u5DF2\u7ECF\u5B58\u5728\u8BE5\u503C\uFF0C\u76F4\u63A5\u8DF3\u8FC7</span>
          <span class="token keyword">continue</span>
        <span class="token punctuation">}</span>
        tem<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u524D\u5E8F\u904D\u5386\uFF0C\u6240\u4EE5\u5148\u4FDD\u5B58\u503C</span>
        <span class="token function">walk</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u6DF1\u5EA6\u4F18\u5148\uFF0C\u6240\u4EE5\u9012\u5F52\u8BBF\u95EE\u4E0B\u4E00\u4E2A</span>
        tem<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u56DE\u6EAF\uFF0C\u79FB\u51FA\u6700\u540E\u4E00\u4E2A\u503C\uFF0C\u8868\u793A\u56DE\u5230\u4E0A\u4E00\u5C42\u8282\u70B9</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">walk</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),f={id:"_47-\u5168\u6392\u5217-ii",tabindex:"-1"},w=n("a",{class:"header-anchor",href:"#_47-\u5168\u6392\u5217-ii","aria-hidden":"true"},"#",-1),g=s(),_={href:"https://leetcode-cn.com/problems/permutations-ii/",target:"_blank",rel:"noopener noreferrer"},y=s("47. \u5168\u6392\u5217 II"),x=a(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u7ED9\u5B9A\u4E00\u4E2A\u53EF\u5305\u542B\u91CD\u590D\u6570\u5B57\u7684\u5E8F\u5217 nums \uFF0C\u6309\u4EFB\u610F\u987A\u5E8F \u8FD4\u56DE\u6240\u6709\u4E0D\u91CD\u590D\u7684\u5168\u6392\u5217\u3002
\u793A\u4F8B 1\uFF1A

\u8F93\u5165\uFF1Anums = [1,1,2]
\u8F93\u51FA\uFF1A
[[1,1,2],
 [1,2,1],
 [2,1,1]]
\u793A\u4F8B 2\uFF1A

\u8F93\u5165\uFF1Anums = [1,2,3]
\u8F93\u51FA\uFF1A[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u601D\u8DEF</strong></p><ol><li><p>\u8DDF\u4E0A\u4E00\u9898\u4E0D\u540C\u4E4B\u5904\u5728\u4E8E\u73B0\u5728\u7684 <code>nums</code> \u5B58\u5728\u91CD\u590D\u7684\u6570\uFF0C\u5728\u4E0A\u4E00\u9898\u4E2D\u6211\u4EEC\u662F\u4F7F\u7528 <code>tem.indexOf(nums[i])&gt;-1</code> \u6765\u5224\u65AD\u5F53\u524D\u8FD9\u4E2A\u6570\u662F\u5426\u6CA1\u6709\u7528\u8FC7\uFF0C\u8FD9\u4E00\u9898\u5C31\u7528\u4E0D\u4E86\u4E86\uFF0C\u6240\u4EE5\u5F97\u5F97\u6539\u7528\u5224\u65AD\u5F53\u524D\u7D22\u5F15\u662F\u5426\u6709\u8FC7\uFF0C\u8FD9\u91CC\u4F7F\u7528\u54C8\u5E0C\u7ED3\u6784\u6765\u4FDD\u5B58\u5F53\u524D\u503C\u7684\u7D22\u5F15\u662F\u5426\u6709\u7528\u8FC7</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">permuteUnique</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> tem <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    nums<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> <span class="token function-variable function">walk</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">===</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
             result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>tem<span class="token punctuation">]</span><span class="token punctuation">)</span>      
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span> <span class="token comment">// \u6839\u636E\u7D22\u5F15\u6765\u5224\u65AD\u5F53\u524D\u8FD9\u4E2A\u6570\u662F\u5426\u6709\u7528\u8FC7</span>
            map<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// \u6807\u5FD7\u5F53\u524D\u7528\u8FC7\u7684\u7D22\u5F15</span>
            tem<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token function">walk</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
            tem<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            map<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment">// \u8FD8\u539F\u5F53\u524D\u7528\u8FC7\u7684\u7D22\u5F15</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">walk</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span><span class="token punctuation">;</span>
 <span class="token comment">// permuteUnique([1,1,2]) \u8F93\u51FA [[1,1,2],[1,2,1],[1,1,2],[1,2,1],[2,1,1],[2,1,1]]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u4E0A\u9762\u89E3\u51B3\u4E86\u6570\u53EA\u7528\u4E00\u6B21\uFF0C\u4F46\u662F\u7ED3\u679C\u8FD8\u662F\u4F1A\u51FA\u73B0\u91CD\u65B0\u7684\u961F\u5217</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">permuteUnique</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> tem <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    nums<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> <span class="token function-variable function">walk</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">===</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
             result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>tem<span class="token punctuation">]</span><span class="token punctuation">)</span>      
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u8FD9\u91CC\u6709\u70B9\u96BE\u7406\u89E3\u3002\u3002\u3002</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> map<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> map<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
            map<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
            tem<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token function">walk</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
            tem<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            map<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">walk</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u4F8B\u5B50 <code>[1,1,2]</code> \u6765\u7406\u89E3 <code>nums[i] === nums[i - 1] &amp;&amp; map[i - 1])</code> \u7684\u610F\u601D\uFF0C\u9996\u5148\u5BF9\u5E94\u7684\u7D22\u5F15\u4E3A <code>[0,1,2]</code></p><p>\u5BF9\u4E8E\u7D22\u5F15 <code>[0,1,2]</code> \u548C <code>[1,0,2]</code> \u90FD\u662F\u8868\u793A\u503C <code>[1,1,2]</code></p><p><code>nums[i] === nums[i - 1] &amp;&amp; map[i - 1])</code> \u8FD9\u4E00\u5224\u65AD\u6761\u4EF6\u5219\u662F\u8FC7\u6EE4\u8FC7 <code>[0,1,2]</code>\uFF0C\u603B\u662F\u6700\u540E\u4E00\u4E2A\u6EE1\u8DB3 <code>[1,2,3]</code>\u7684\u7D22\u5F15\u7EC4\u5408\u5373 <code>[1,0,2]</code></p>`,7),j={id:"_78-\u5B50\u96C6",tabindex:"-1"},I=n("a",{class:"header-anchor",href:"#_78-\u5B50\u96C6","aria-hidden":"true"},"#",-1),N=s(),T={href:"https://leetcode-cn.com/problems/subsets/submissions/",target:"_blank",rel:"noopener noreferrer"},V=s("78. \u5B50\u96C6"),q=a(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">subsets</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">let</span> path <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
     <span class="token keyword">let</span> <span class="token function-variable function">backTrace</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">start</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u904D\u5386\u4E00\u6B21\u5C31\u6DFB\u52A0\u4E00\u4E2A\u5B50\u96C6</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
           path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           <span class="token function">backTrace</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
           path<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
     <span class="token function">backTrace</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),z={id:"_90-\u5B50\u96C6-ii",tabindex:"-1"},B=n("a",{class:"header-anchor",href:"#_90-\u5B50\u96C6-ii","aria-hidden":"true"},"#",-1),E=s(),U={href:"https://leetcode-cn.com/problems/subsets-ii/",target:"_blank",rel:"noopener noreferrer"},L=s("90. \u5B50\u96C6 II"),O=a(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u7ED9\u4F60\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 nums \uFF0C\u5176\u4E2D\u53EF\u80FD\u5305\u542B\u91CD\u590D\u5143\u7D20\uFF0C\u8BF7\u4F60\u8FD4\u56DE\u8BE5\u6570\u7EC4\u6240\u6709\u53EF\u80FD\u7684\u5B50\u96C6\uFF08\u5E42\u96C6\uFF09\u3002

\u89E3\u96C6 \u4E0D\u80FD \u5305\u542B\u91CD\u590D\u7684\u5B50\u96C6\u3002\u8FD4\u56DE\u7684\u89E3\u96C6\u4E2D\uFF0C\u5B50\u96C6\u53EF\u4EE5\u6309 \u4EFB\u610F\u987A\u5E8F \u6392\u5217\u3002

\u793A\u4F8B 1\uFF1A

\u8F93\u5165\uFF1Anums = [1,2,2]
\u8F93\u51FA\uFF1A[[],[1],[1,2],[1,2,2],[2],[2,2]]
\u793A\u4F8B 2\uFF1A

\u8F93\u5165\uFF1Anums = [0]
\u8F93\u51FA\uFF1A[[],[0]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u9898\u89E3</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">subsetsWithDup</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> tem <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> <span class="token function-variable function">walk</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">start</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>start <span class="token operator">&gt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span> 
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>tem<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">&gt;</span>start<span class="token operator">&amp;&amp;</span>nums<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">===</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">continue</span>
            <span class="token punctuation">}</span>
            tem<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token function">walk</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
            tem<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">walk</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u91CD\u70B9\u518D\u4E8E <code>if(i&gt;start&amp;&amp;nums[i-1]===nums[i])</code></p><p>\u8003\u8651\u6570\u7EC4 <code>[1,2,2]</code>\uFF0C\u9009\u62E9\u4E0B\u6807<code>0 1</code> \u548C <code>0,2</code>\u90FD\u4F1A\u5F97\u5230\u76F8\u540C\u7684\u5B50\u96C6\u3002</p><p>\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5BF9\u4E8E\u5F53\u524D\u9009\u62E9\u7684\u6570 x\uFF0C\u82E5\u524D\u9762\u6709\u4E0E\u5176\u76F8\u540C\u7684\u6570 y\uFF0C\u653E\u5F03\u5176\u4E2D\u4E00\u4E2A\u7684\u7EE7\u7EED\u904D\u5386</p><p>\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u5224\u65AD\u8FD9\u79CD\u60C5\u51B5\uFF0C\u6765\u907F\u514D\u751F\u6210\u91CD\u590D\u7684\u5B50\u96C6\u3002\u4EE3\u7801\u5B9E\u73B0\u65F6\uFF0C\u53EF\u4EE5\u5148\u5C06\u6570\u7EC4\u6392\u5E8F\uFF1B\u8FED\u4EE3\u65F6\uFF0C\u82E5\u53D1\u73B0\u6CA1\u6709\u9009\u62E9\u4E0A\u4E00\u4E2A\u6570\uFF0C\u4E14\u5F53\u524D\u6570\u5B57\u4E0E\u4E0A\u4E00\u4E2A\u6570\u76F8\u540C\uFF0C\u5219\u53EF\u4EE5\u8DF3\u8FC7\u5F53\u524D\u751F\u6210\u7684\u5B50\u96C6</p><p>https://juejin.cn/post/6887049646988853262#heading-4</p><p>https://zhuanlan.zhihu.com/p/54275352</p>`,9);function C(D,S){const p=i("ExternalLinkIcon");return o(),c("div",null,[r,n("h3",k,[d,m,n("a",v,[b,t(p)])]),h,n("h3",f,[w,g,n("a",_,[y,t(p)])]),x,n("h3",j,[I,N,n("a",T,[V,t(p)])]),q,n("h3",z,[B,E,n("a",U,[L,t(p)])]),O])}var A=e(u,[["render",C],["__file","\u56DE\u6EAF.html.vue"]]);export{A as default};
