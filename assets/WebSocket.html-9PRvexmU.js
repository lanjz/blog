import{_ as e,o,c,e as d}from"./app-VicZdUS9.js";const p={},t=d('<h1 id="websocket" tabindex="-1"><a class="header-anchor" href="#websocket" aria-hidden="true">#</a> WebSocket</h1><p>Websocket是一个持久化的协议</p><h2 id="websocket-机制" tabindex="-1"><a class="header-anchor" href="#websocket-机制" aria-hidden="true">#</a> WebSocket 机制</h2><p>WebSocket 是 HTML5 下一种新的协议。它实现了浏览器与服务器全双工通信，能更好的节省服务器资源和带宽并达到实时通讯的目的。它与 HTTP 一样通过已建立的 TCP 连接来传输数据，但是它和HTTP最大不同是：</p><ul><li><p>WebSocket 是一种双向通信协议。在建立连接后，WebSocket 服务器端和客户端都能主动向对方发送或接收数据，就像 Socket 一样；</p></li><li><p>WebSocket 需要像 TCP 一样，先建立连接，连接成功后才能相互通信</p></li></ul><p>相比 HTTP 长连接，WebSocket 有以下特点：</p><ul><li><p>无跨域问题。</p></li><li><p>支持双向通信，实时性更强；</p></li><li><p>可以发送文本，也可以二进制文件</p></li><li><p>协议标识符是 <code>ws</code>，加密后是 <code>wss</code></p></li><li><p>HTTP长连接中，每次数据交换除了真正的数据部分外，服务器和客户端还要大量交换 <code>HTTP header</code>。</p></li></ul><p>Websocket 协议通过第一个 <code>request</code> 建立了 TCP 连接之后，之后交换的数据都不需要发送 <code>HTTP header</code> 就能交换数据</p><ul><li><p>支持扩展。<code>ws</code> 协议定义了扩展，用户可以扩展协议，或者实现自定义的子协议。（比如支持自定义压缩算法等）</p></li><li><p>不同的URL可以复用同一个 WebSocket 连接等功能。这些都是HTTP长连接不能做到的。</p></li></ul><h1 id="websocket的api" tabindex="-1"><a class="header-anchor" href="#websocket的api" aria-hidden="true">#</a> WebSocket的API</h1><p>使用构造函数 <code>new WebSocket(&quot;ws://localhost:3001&quot;)</code> 建立 WebSocket 连接, 并返回一个 WebSocket 对象</p><p>WebSocket 对象包含以下属性：</p><ul><li><p><code>onclose</code>：用于指定连接关闭后的回调函数</p></li><li><p><code>onerror</code>： 用于指定连接失败后的回调函数</p></li><li><p><code>onmessage</code>： 用于指定当从服务器接受到信息时的回调函数</p></li><li><p><code>onopen</code>： 用于指定连接成功后的回调函数</p></li><li><p><code>readyState</code>(只读) ： 当前的链接状态</p></li><li><p><code>url</code>(只读): WebSocket 的绝对路径</p></li><li><p><code>bufferedAmount</code>(只读)： 未发送至服务器的字节数</p></li><li><p><code>protocol</code> (只读) ： 服务器选择的下属协议</p></li></ul><p>WebSocket 对象包含以下方法：</p><p><code>close</code>: 关闭当前链接</p><p><code>send</code>: 向服务器发送数据</p><h1 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h1><p>node 实例 <code>websocket</code> 服务的模块：<code>ws</code></p><p>见 <code>demo</code></p>',19),l=[t];function i(a,s){return o(),c("div",null,l)}const n=e(p,[["render",i],["__file","WebSocket.html.vue"]]);export{n as default};
