import{_ as n,o as s,c as a,d as t}from"./app.7eca7f1a.js";const p={},e=t(`<h1 id="setstate" tabindex="-1"><a class="header-anchor" href="#setstate" aria-hidden="true">#</a> setState</h1><p><code>setState()</code> \u4F1A\u5BF9\u4E00\u4E2A\u7EC4\u4EF6\u7684 <code>state</code> \u5BF9\u8C61\u5B89\u6392\u4E00\u6B21\u66F4\u65B0\u3002\u5F53 <code>state</code> \u6539\u53D8\u4E86\uFF0C\u8BE5\u7EC4\u4EF6\u5C31\u4F1A\u91CD\u65B0\u6E32\u67D3</p><h2 id="\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528" aria-hidden="true">#</a> \u4F7F\u7528</h2><p>\u8981\u662F\u8981\u6CE8\u610F\u7684\u662F <code>setState</code> \u5176\u5B9E\u662F\u5F02\u6B65\u7684 \u2014\u2014 \u4E0D\u8981\u6307\u671B\u5728\u8C03\u7528 <code>setState</code> \u4E4B\u540E\uFF0C<code>this.state</code> \u4F1A\u7ACB\u5373\u6620\u5C04\u4E3A\u65B0\u7684\u503C\u3002\u5982\u679C\u4F60\u9700\u8981\u57FA\u4E8E\u5F53\u524D\u7684 <code>state</code> \u6765\u8BA1\u7B97\u51FA\u65B0\u7684\u503C\uFF0C\u90A3\u4F60\u5E94\u8BE5\u4F20\u9012\u4E00\u4E2A\u51FD\u6570\uFF0C\u800C\u4E0D\u662F\u4E00\u4E2A\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">incrementCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6CE8\u610F\uFF1A\u8FD9\u6837 *\u4E0D\u4F1A* \u50CF\u9884\u671F\u7684\u90A3\u6837\u5DE5\u4F5C\u3002</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">handleSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5047\u8BBE \`this.state.count\` \u4ECE 0 \u5F00\u59CB\u3002</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">incrementCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">incrementCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">incrementCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5F53 React \u91CD\u65B0\u6E32\u67D3\u8BE5\u7EC4\u4EF6\u65F6\uFF0C\`this.state.count\` \u4F1A\u53D8\u4E3A 1\uFF0C\u800C\u4E0D\u662F\u4F60\u671F\u671B\u7684 3\u3002</span>

  <span class="token comment">// \u8FD9\u662F\u56E0\u4E3A\u4E0A\u9762\u7684 \`incrementCount()\` \u51FD\u6570\u662F\u4ECE \`this.state.count\` \u4E2D\u8BFB\u53D6\u6570\u636E\u7684\uFF0C</span>
  <span class="token comment">// \u4F46\u662F React \u4E0D\u4F1A\u66F4\u65B0 \`this.state.count\`\uFF0C\u76F4\u5230\u8BE5\u7EC4\u4EF6\u88AB\u91CD\u65B0\u6E32\u67D3\u3002</span>
  <span class="token comment">// \u6240\u4EE5\u6700\u7EC8 \`incrementCount()\` \u6BCF\u6B21\u8BFB\u53D6 \`this.state.count\` \u7684\u503C\u90FD\u662F 0\uFF0C\u5E76\u5C06\u5B83\u8BBE\u4E3A 1\u3002</span>

  <span class="token comment">// \u95EE\u9898\u7684\u4FEE\u590D\u53C2\u89C1\u4E0B\u9762\u7684\u8BF4\u660E\u3002</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5982\u4F55\u66F4\u65B0\u90A3\u4E9B\u4F9D\u8D56\u4E8E\u5F53\u524D\u7684 state \u7684 state \u5462\uFF1F</strong></p><p>\u7ED9 <code>setState</code> \u4F20\u9012\u4E00\u4E2A\u51FD\u6570\uFF0C\u800C\u4E0D\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5C31\u53EF\u4EE5\u786E\u4FDD\u6BCF\u6B21\u7684\u8C03\u7528\u90FD\u662F\u4F7F\u7528\u6700\u65B0\u7248\u7684 <code>state</code></p><p>\u4F20\u9012\u4E00\u4E2A\u51FD\u6570\u53EF\u4EE5\u8BA9\u4F60\u5728\u51FD\u6570\u5185\u8BBF\u95EE\u5230\u5F53\u524D\u7684 <code>state</code> \u7684\u503C\u3002\u56E0\u4E3A <code>setState</code> \u7684\u8C03\u7528\u662F\u5206\u6279\u7684\uFF0C\u6240\u4EE5\u4F60\u53EF\u4EE5\u94FE\u5F0F\u5730\u8FDB\u884C\u66F4\u65B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">incrementCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u91CD\u8981\uFF1A\u5728\u66F4\u65B0\u7684\u65F6\u5019\u8BFB\u53D6 \`state\`\uFF0C\u800C\u4E0D\u662F \`this.state\`\u3002</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">count</span><span class="token operator">:</span> state<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">handleSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5047\u8BBE \`this.state.count\` \u4ECE 0 \u5F00\u59CB\u3002</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">incrementCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">incrementCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">incrementCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u5982\u679C\u4F60\u73B0\u5728\u5728\u8FD9\u91CC\u8BFB\u53D6 \`this.state.count\`\uFF0C\u5B83\u8FD8\u662F\u4F1A\u4E3A 0\u3002</span>
  <span class="token comment">// \u4F46\u662F\uFF0C\u5F53 React \u91CD\u65B0\u6E32\u67D3\u8BE5\u7EC4\u4EF6\u65F6\uFF0C\u5B83\u4F1A\u53D8\u4E3A 3\u3002</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="setstate-\u4EC0\u4E48\u65F6\u5019\u662F\u5F02\u6B65\u7684" tabindex="-1"><a class="header-anchor" href="#setstate-\u4EC0\u4E48\u65F6\u5019\u662F\u5F02\u6B65\u7684" aria-hidden="true">#</a> setState \u4EC0\u4E48\u65F6\u5019\u662F\u5F02\u6B65\u7684\uFF1F</h3><p>\u76EE\u524D\uFF0C\u5728\u4E8B\u4EF6\u5904\u7406\u51FD\u6570\u5185\u90E8\u7684 <code>setState</code> \u662F\u5F02\u6B65\u7684\u3002</p><p>\u4F8B\u5982\uFF0C\u5982\u679C <code>Parent</code> \u548C <code>Child</code> \u5728\u540C\u4E00\u4E2A <code>click</code> \u4E8B\u4EF6\u4E2D\u90FD\u8C03\u7528\u4E86 <code>setState</code> \uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u786E\u4FDD <code>Child</code> \u4E0D\u4F1A\u88AB\u91CD\u65B0\u6E32\u67D3\u4E24\u6B21\u3002\u53D6\u800C\u4EE3\u4E4B\u7684\u662F\uFF0CReact \u4F1A\u5C06\u8BE5 <code>state</code> \u201C\u51B2\u6D17\u201D \u5230\u6D4F\u89C8\u5668\u4E8B\u4EF6\u7ED3\u675F\u7684\u65F6\u5019\uFF0C\u518D\u7EDF\u4E00\u5730\u8FDB\u884C\u66F4\u65B0\u3002\u8FD9\u79CD\u673A\u5236\u53EF\u4EE5\u5728\u5927\u578B\u5E94\u7528\u4E2D\u5F97\u5230\u5F88\u597D\u7684\u6027\u80FD\u63D0\u5347</p><h2 id="\u6E90\u7801\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u5206\u6790" aria-hidden="true">#</a> \u6E90\u7801\u5206\u6790</h2><p><code>setState</code> \u6E90\u7801\u4E2D\u7684\u5B9A\u4E49</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Component</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">setState</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">partialState<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>updater<span class="token punctuation">.</span><span class="token function">enqueueSetState</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> partialState<span class="token punctuation">,</span> callback<span class="token punctuation">,</span> <span class="token string">&#39;setState&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5 <code>this.setState({count: this.state.count + 1})</code> \u4E3A\u4F8B\uFF0C\u53C2\u6570 <code>partialState</code> \u6B64\u65F6\u503C\u4E3A <code>{count: 1}</code>; <code>callback</code> \u4E3A <code>null</code></p><p><code>this.updater.enqueueSetState</code> \u7684\u5B9A\u4E49\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">var</span> classComponentUpdater <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">isMounted</span><span class="token operator">:</span> isMounted<span class="token punctuation">,</span>
    <span class="token function-variable function">enqueueSetState</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">inst<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> fiber <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span>inst<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> currentTime <span class="token operator">=</span> <span class="token function">requestCurrentTimeForUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> suspenseConfig <span class="token operator">=</span> <span class="token function">requestCurrentSuspenseConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> expirationTime <span class="token operator">=</span> <span class="token function">computeExpirationForFiber</span><span class="token punctuation">(</span>currentTime<span class="token punctuation">,</span> fiber<span class="token punctuation">,</span> suspenseConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> update <span class="token operator">=</span> <span class="token function">createUpdate</span><span class="token punctuation">(</span>expirationTime<span class="token punctuation">,</span> suspenseConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
      update<span class="token punctuation">.</span>payload <span class="token operator">=</span> payload<span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>callback <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> callback <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">{</span>
          <span class="token function">warnOnInvalidCallback</span><span class="token punctuation">(</span>callback<span class="token punctuation">,</span> <span class="token string">&#39;setState&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        update<span class="token punctuation">.</span>callback <span class="token operator">=</span> callback<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token function">enqueueUpdate</span><span class="token punctuation">(</span>fiber<span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">scheduleWork</span><span class="token punctuation">(</span>fiber<span class="token punctuation">,</span> expirationTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">enqueueReplaceState</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">inst<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> fiber <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span>inst<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> currentTime <span class="token operator">=</span> <span class="token function">requestCurrentTimeForUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> suspenseConfig <span class="token operator">=</span> <span class="token function">requestCurrentSuspenseConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> expirationTime <span class="token operator">=</span> <span class="token function">computeExpirationForFiber</span><span class="token punctuation">(</span>currentTime<span class="token punctuation">,</span> fiber<span class="token punctuation">,</span> suspenseConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> update <span class="token operator">=</span> <span class="token function">createUpdate</span><span class="token punctuation">(</span>expirationTime<span class="token punctuation">,</span> suspenseConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
      update<span class="token punctuation">.</span>tag <span class="token operator">=</span> ReplaceState<span class="token punctuation">;</span>
      update<span class="token punctuation">.</span>payload <span class="token operator">=</span> payload<span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>callback <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> callback <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">{</span>
          <span class="token function">warnOnInvalidCallback</span><span class="token punctuation">(</span>callback<span class="token punctuation">,</span> <span class="token string">&#39;replaceState&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        update<span class="token punctuation">.</span>callback <span class="token operator">=</span> callback<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token function">enqueueUpdate</span><span class="token punctuation">(</span>fiber<span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">scheduleWork</span><span class="token punctuation">(</span>fiber<span class="token punctuation">,</span> expirationTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">enqueueForceUpdate</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">inst<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> fiber <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span>inst<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> currentTime <span class="token operator">=</span> <span class="token function">requestCurrentTimeForUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> suspenseConfig <span class="token operator">=</span> <span class="token function">requestCurrentSuspenseConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> expirationTime <span class="token operator">=</span> <span class="token function">computeExpirationForFiber</span><span class="token punctuation">(</span>currentTime<span class="token punctuation">,</span> fiber<span class="token punctuation">,</span> suspenseConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> update <span class="token operator">=</span> <span class="token function">createUpdate</span><span class="token punctuation">(</span>expirationTime<span class="token punctuation">,</span> suspenseConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
      update<span class="token punctuation">.</span>tag <span class="token operator">=</span> ForceUpdate<span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>callback <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">&amp;&amp;</span> callback <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">{</span>
          <span class="token function">warnOnInvalidCallback</span><span class="token punctuation">(</span>callback<span class="token punctuation">,</span> <span class="token string">&#39;forceUpdate&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        update<span class="token punctuation">.</span>callback <span class="token operator">=</span> callback<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token function">enqueueUpdate</span><span class="token punctuation">(</span>fiber<span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">scheduleWork</span><span class="token punctuation">(</span>fiber<span class="token punctuation">,</span> expirationTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),c=[e];function o(i,u){return s(),a("div",null,c)}var k=n(p,[["render",o],["__file","setState.html.vue"]]);export{k as default};
