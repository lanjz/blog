import{_ as p,o as t,c as e,b as n,a as o,d as s,e as c,r as i}from"./app.a61e5c82.js";const l={},u=s('<h1 id="nexttick" tabindex="-1"><a class="header-anchor" href="#nexttick" aria-hidden="true">#</a> $nextTick</h1><p><code>$nextTick</code> \u7684\u4F5C\u7528\u662F\u5728\u4E0B\u6B21 DOM \u66F4\u65B0\u5FAA\u73AF\u7ED3\u675F\u4E4B\u540E\u6267\u884C\u5EF6\u8FDF\u56DE\u8C03\u3002\u5728\u4FEE\u6539\u6570\u636E\u4E4B\u540E\u7ACB\u5373\u4F7F\u7528\u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u83B7\u53D6\u66F4\u65B0\u540E\u7684 DOM</p><p>\u7528\u6CD5\uFF1A<code>Vue.nextTick( [callback, context] )</code></p><p>\u4E3A\u4EC0\u4E48\u9700\u8981 <code>$nextTick</code> \u624D\u80FD\u51C6\u786E\u53D6\u540E\u66F4\u65B0\u540E\u7684 DOM \u5462\uFF1F\u56E0\u4E3A Vue \u7684\u89C6\u56FE\u66F4\u65B0\u662F\u5F02\u6B65\uFF0C\u51C6\u786E\u6765\u8BF4\u662F Vue \u7684\u4F9D\u8D56\u66F4\u65B0\u662F\u5F02\u6B65\u7684</p><h2 id="vue\u5F02\u6B65\u66F4\u65B0\u961F\u5217" tabindex="-1"><a class="header-anchor" href="#vue\u5F02\u6B65\u66F4\u65B0\u961F\u5217" aria-hidden="true">#</a> Vue\u5F02\u6B65\u66F4\u65B0\u961F\u5217</h2>',5),k={href:"https://cn.vuejs.org/v2/guide/reactivity.html#%E5%BC%82%E6%AD%A5%E6%9B%B4%E6%96%B0%E9%98%9F%E5%88%97",target:"_blank",rel:"noopener noreferrer"},r=c("VUE - \u5F02\u6B65\u66F4\u65B0\u961F\u5217"),d=s(`<p>Vue \u5728\u66F4\u65B0 DOM \u65F6\u662F\u5F02\u6B65\u6267\u884C\u7684\u3002\u53EA\u8981\u4FA6\u542C\u5230\u6570\u636E\u53D8\u5316\uFF0CVue \u5C06\u5F00\u542F\u4E00\u4E2A\u961F\u5217\uFF0C\u5E76\u7F13\u51B2\u5728\u540C\u4E00\u4E8B\u4EF6\u5FAA\u73AF\u4E2D\u53D1\u751F\u7684\u6240\u6709\u6570\u636E\u53D8\u66F4\u3002\u5982\u679C\u540C\u4E00\u4E2A <code>watcher</code> \u88AB\u591A\u6B21\u89E6\u53D1\uFF0C\u53EA\u4F1A\u88AB\u63A8\u5165\u5230\u961F\u5217\u4E2D\u4E00\u6B21\u3002</p><p>\u7136\u540E\uFF0C\u5728\u4E0B\u4E00\u4E2A\u7684\u4E8B\u4EF6\u5FAA\u73AF <code>\u201Ctick\u201D</code> \u4E2D\uFF0CVue \u5237\u65B0\u961F\u5217\u5E76\u6267\u884C\u5B9E\u9645 (\u5DF2\u53BB\u91CD\u7684) \u5DE5\u4F5C\u3002Vue \u5728\u5185\u90E8\u5BF9\u5F02\u6B65\u961F\u5217\u5C1D\u8BD5\u4F7F\u7528\u539F\u751F\u7684 <code>Promise.then</code>\u3001<code>MutationObserver</code> \u548C <code>setImmediate</code>\uFF0C\u5982\u679C\u6267\u884C\u73AF\u5883\u4E0D\u652F\u6301\uFF0C\u5219\u4F1A\u91C7\u7528 <code>setTimeout(fn, 0)</code> \u4EE3\u66FF</p><p>\u4F8B\u5982\uFF0C\u5F53\u4F60\u8BBE\u7F6E <code>vm.someData = &#39;new value&#39;</code>\uFF0C\u8BE5\u7EC4\u4EF6\u4E0D\u4F1A\u7ACB\u5373\u91CD\u65B0\u6E32\u67D3\u3002 \u7EC4\u4EF6\u4F1A\u5728\u4E0B\u4E00\u4E2A\u4E8B\u4EF6\u5FAA\u73AF <code>\u201Ctick\u201D</code> \u4E2D\u66F4\u65B0\u3002\u591A\u6570\u60C5\u51B5\u6211\u4EEC\u4E0D\u9700\u8981\u5173\u5FC3\u8FD9\u4E2A\u8FC7\u7A0B\uFF0C\u4F46\u662F\u5982\u679C\u4F60\u60F3\u57FA\u4E8E\u66F4\u65B0\u540E\u7684 DOM \u72B6\u6001\u6765\u505A\u70B9\u4EC0\u4E48\uFF0C\u8FD9\u5C31\u53EF\u80FD\u4F1A\u6709\u4E9B\u68D8\u624B\u3002\u867D\u7136 Vue.js \u901A\u5E38\u9F13\u52B1\u5F00\u53D1\u4EBA\u5458\u4F7F\u7528\u201C\u6570\u636E\u9A71\u52A8\u201D\u7684\u65B9\u5F0F\u601D\u8003\uFF0C\u907F\u514D\u76F4\u63A5\u63A5\u89E6 DOM\uFF0C\u4F46\u662F\u6709\u65F6\u6211\u4EEC\u5FC5\u987B\u8981\u8FD9\u4E48\u505A\u3002\u4E3A\u4E86\u5728\u6570\u636E\u53D8\u5316\u4E4B\u540E\u7B49\u5F85 Vue \u5B8C\u6210\u66F4\u65B0 DOM\uFF0C\u53EF\u4EE5\u5728\u6570\u636E\u53D8\u5316\u4E4B\u540E\u7ACB\u5373\u4F7F\u7528 <code>Vue.nextTick(callback)</code>\u3002\u8FD9\u6837\u56DE\u8C03\u51FD\u6570\u5C06\u5728 DOM \u66F4\u65B0\u5B8C\u6210\u540E\u88AB\u8C03\u7528\u3002\u4F8B\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;example&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span>message<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#example&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;123&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
vm<span class="token punctuation">.</span>message <span class="token operator">=</span> <span class="token string">&#39;new message&#39;</span> <span class="token comment">// \u66F4\u6539\u6570\u636E</span>
vm<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>textContent <span class="token operator">===</span> <span class="token string">&#39;new message&#39;</span> <span class="token comment">// false</span>
Vue<span class="token punctuation">.</span><span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  vm<span class="token punctuation">.</span>$el<span class="token punctuation">.</span>textContent <span class="token operator">===</span> <span class="token string">&#39;new message&#39;</span> <span class="token comment">// true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A <code>$nextTick()</code> \u8FD4\u56DE\u4E00\u4E2A <code>Promise</code> \u5BF9\u8C61\uFF0C\u6240\u4EE5\u4F60\u53EF\u4EE5\u4F7F\u7528\u65B0\u7684 ES2017 <code>async/await</code> \u8BED\u6CD5\u5B8C\u6210\u76F8\u540C\u7684\u4E8B\u60C5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">updateMessage</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> <span class="token string">&#39;\u5DF2\u66F4\u65B0&#39;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>textContent<span class="token punctuation">)</span> <span class="token comment">// =&gt; &#39;\u672A\u66F4\u65B0&#39;</span>
    <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>textContent<span class="token punctuation">)</span> <span class="token comment">// =&gt; &#39;\u5DF2\u66F4\u65B0&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6E90\u7801\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u5206\u6790" aria-hidden="true">#</a> \u6E90\u7801\u5206\u6790</h2><p><code>$nextTick</code> \u7684\u6E90\u7801\u4E2D\u7684\u5B9A\u4E49\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$nextTick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">nextTick</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// nextTick \u65B9\u6CD5</span>
  <span class="token keyword">function</span> <span class="token function">nextTick</span> <span class="token punctuation">(</span><span class="token parameter">cb<span class="token punctuation">,</span> ctx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> _resolve<span class="token punctuation">;</span>
    callbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> ctx<span class="token punctuation">,</span> <span class="token string">&#39;nextTick&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>_resolve<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">_resolve</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pending<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      pending <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token function">timerFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// $flow-disable-line</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cb <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> Promise <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        _resolve <span class="token operator">=</span> resolve<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>nextTick</code> \u63A5\u6536\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570 <code>cb</code> \uFF0C <code>cb</code> \u5C31\u662F\u8981\u63A8\u5165\u4E8B\u4EF6\u5FAA\u73AF\u4EFB\u52A1\u961F\u5217\u4E2D\u7684\u51FD\u6570\u3002\u5B83\u53EF\u4EE5\u5F53\u524D\u66F4\u65B0\u7EC4\u4EF6\u7684\u65B9\u6CD5\uFF0C\u4E5F\u53EF\u4EE5\u662F\u4E00\u4E2A <code>watch</code> \u76D1\u542C\u7684\u56DE\u8C03\uFF0C\u4E5F\u53EF\u4EE5\u6211\u4EEC\u901A\u8FC7 <code>this.$nexttick</code> \u4F20\u7684\u56DE\u8C03\u51FD\u6570\u3002\u8FD9\u4E9B\u51FD\u6570\u5E76\u4E0D\u662F\u7ACB\u9A6C\u6267\u884C\u7684\uFF0C \u800C\u662F\u5148\u5C06\u8FD9\u4E9B\u51FD\u6570\u5B58\u5165 <code>callbacks</code> \u4E2D\uFF0C<code>callbacks</code> \u662F\u4E00\u4E2A\u5B58\u653E\u8FD9\u4E9B\u4EFB\u52A1\u7684\u6570\u7EC4\u3002\u7B49\u6536\u96C6\u5B8C\u4E4B\u540E\u6839\u636E\u4E8B\u4EF6\u5FAA\u73AF\u673A\u5236\u5C06\u5728\u5F53\u524D\u5B8F\u4EFB\u52A1\u4EE3\u7801\u6267\u884C\u5B8C\u8FD9\u540E\u7EDF\u4E00\u6267\u884C\u3002\u8D77\u5230\u5EF6\u8FDF\u6267\u884C\u7684\u4F5C\u7528</p><p>\u901A\u8FC7\u4E00\u4E2A\u4F8B\u5B50\u6765\u7406\u89E3\u4E00\u4E0B\u5982\u4F55\u5EF6\u8FDF\u6267\u884C\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4F8B\u5B50\u901A\u8FC7 <code>Promise.resolve().then</code> \u65B9\u6CD5\uFF0C\u5C06 <code> console.log(2)</code> \u7684\u6267\u884C\u5EF6\u8FDF\u4E86</p><p>\u56DE\u5230 <code>nextTick</code> \u65B9\u6CD5\u4E2D <code>timerFunc()</code> \u7684\u4F5C\u7528\u5C31\u7B49\u540C\u65F6\u5F00\u542F\u4E00\u4E2A\u5EF6\u8FDF\u6267\u884C\u7684\u4EFB\u52A1\u3002\u4E4B\u540E\u8BBE\u7F6E <code>pending</code> \u53D8\u91CF\uFF0C <code>pending</code> \u662F\u4E00\u4E2A\u6807\u5FD7\uFF0C\u9ED8\u8BA4\u662F <code>false</code> \u5F53\u65B0\u7684\u5FAE\u4EFB\u52A1\u5F00\u59CB\u6536\u96C6\u65F6\uFF0C\u4F1A\u8FDB\u5165 <code>if (!pending)</code> \u6761\u4EF6\uFF0C\u6267\u884C <code>timerFunc()</code>\u3002 <code>timerFunc()</code> \u5B9A\u4E49\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">var</span> timerFunc<span class="token punctuation">;</span>

  <span class="token comment">// The nextTick behavior leverages the microtask queue, which can be accessed</span>
  <span class="token comment">// via either native Promise.then or MutationObserver.</span>
  <span class="token comment">// MutationObserver has wider support, however it is seriously bugged in</span>
  <span class="token comment">// UIWebView in iOS &gt;= 9.3.3 when triggered in touch event handlers. It</span>
  <span class="token comment">// completely stops working after triggering a few times... so, if native</span>
  <span class="token comment">// Promise is available, we will use it:</span>
  <span class="token comment">/* istanbul ignore next, $flow-disable-line */</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Promise <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isNative</span><span class="token punctuation">(</span>Promise<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function-variable function">timerFunc</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>flushCallbacks<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// In problematic UIWebViews, Promise.then doesn&#39;t completely break, but</span>
      <span class="token comment">// it can get stuck in a weird state where callbacks are pushed into the</span>
      <span class="token comment">// microtask queue but the queue isn&#39;t being flushed, until the browser</span>
      <span class="token comment">// needs to do some other work, e.g. handle a timer. Therefore we can</span>
      <span class="token comment">// &quot;force&quot; the microtask queue to be flushed by adding an empty timer.</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isIOS<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>noop<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    isUsingMicroTask <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isIE <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> MutationObserver <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>
    <span class="token function">isNative</span><span class="token punctuation">(</span>MutationObserver<span class="token punctuation">)</span> <span class="token operator">||</span>
    <span class="token comment">// PhantomJS and iOS 7.x</span>
    MutationObserver<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object MutationObserverConstructor]&#39;</span>
  <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Use MutationObserver where native Promise is not available,</span>
    <span class="token comment">// e.g. PhantomJS, iOS7, Android 4.4</span>
    <span class="token comment">// (#6466 MutationObserver is unreliable in IE11)</span>
    <span class="token keyword">var</span> counter <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> observer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MutationObserver</span><span class="token punctuation">(</span>flushCallbacks<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> textNode <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span>counter<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    observer<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>textNode<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">characterData</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function-variable function">timerFunc</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      counter <span class="token operator">=</span> <span class="token punctuation">(</span>counter <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">;</span>
      textNode<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>counter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    isUsingMicroTask <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> setImmediate <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isNative</span><span class="token punctuation">(</span>setImmediate<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Fallback to setImmediate.</span>
    <span class="token comment">// Technically it leverages the (macro) task queue,</span>
    <span class="token comment">// but it is still a better choice than setTimeout.</span>
    <span class="token function-variable function">timerFunc</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setImmediate</span><span class="token punctuation">(</span>flushCallbacks<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// Fallback to setTimeout.</span>
    <span class="token function-variable function">timerFunc</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span>flushCallbacks<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>timerFunc</code> \u5176\u5B9E\u5C31\u662F\u4E00\u4E2A\u89E6\u53D1\u5F02\u6B65\u4EFB\u52A1\u7684\u65B9\u6CD5\uFF0C\u6839\u636E\u73AF\u5883\u53EF\u80FD\u662F\u4EE5\u4E0B\u4E4B\u4E00 <code>Promise.then</code>\u3001<code>MutationObserver</code> \u548C <code>setImmediate</code>\uFF0C <code>setTimeout(fn, 0)</code> \u3002\u603B\u4E4B\u5C31\u662F\u5C06 <code>timerFunc()</code> \u56DE\u8C03\u5EF6\u8FDF\u6267\u884C\u3002\u4E0A\u9762\u4EE3\u7801\u4E2D\u5F02\u6B65\u7684\u56DE\u8C03\u662F\u4E2A <code>flushCallbacks()</code> \u65B9\u6CD5, \u4E0B\u9762\u662F\u5B83\u7684\u5B9A\u4E49\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">var</span> callbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> pending <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">flushCallbacks</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pending <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> copies <span class="token operator">=</span> callbacks<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    callbacks<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> copies<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      copies<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>flushCallbacks</code> \u65B9\u6CD5\u5C31\u662F\u4ECE\u4E0A\u6587\u63D0\u5230\u7684 <code>callbacks</code> \u6570\u7EC4\u4E2D\u53D6\u51FA\u4E4B\u524D\u4FDD\u5B58\u4EFB\u52A1\uFF0C\u7136\u540E\u5E76\u4E00\u4E00\u6267\u884C\uFF0C\u540C\u65F6 <code>callbacks</code> \u957F\u7F6E\u4E3A <code>0</code> \u597D\u63A5\u6536\u4E0B\u4E00\u6279\u8981\u6267\u884C\u4EFB\u52A1\u3002</p><p><code>nextTick</code> \u65B9\u6CD5\u4E2D\u9664\u4E86\u6267\u884C <code>timerFunc()</code>, \u540C\u65F6\u8FD8\u6709\u4E00\u4E2A <code>pending \u53D8\u91CF</code>\uFF0C<code>pending</code> \u7684\u4F5C\u7528\u662F\u4E00\u4E2A\u6807\u8BB0\uFF0C\u521D\u59CB\u503C\u4E3A <code>false</code>,\u5F53\u542F\u52A8\u4E00\u4E2A\u5EF6\u8FDF\u4EFB\u52A1\u4E4B\u540E <code>pending</code> \u8BBE\u4E3A <code>true</code>\uFF0C\u5728\u540C\u4E00\u65F6\u95F4\u6BB5\u5185\u5982\u679C <code>nextTick</code> \u8FD8\u6709\u88AB\u89E6\u53D1\u90A3\u4E48\u8FD9\u4E9B\u4EFB\u52A1\u5C06\u4F1A\u88AB\u6536\u96C6\u5728\u4E00\u8D77\u3002\u88AB\u6536\u96C6\u5230\u4E00\u8D77\u7684\u4EFB\u52A1\u90FD\u5728\u4E0B\u4E00\u6574\u4EF6\u5FAA\u73AF\u4E2D\u4E00\u8D77\u6267\u884C\u3002\u5F53\u8FD9\u4E9B\u4E00\u6B21\u5EF6\u8FDF\u4EFB\u52A1\u5F00\u59CB\u6267\u884C\u7684\u65F6\u5019 <code>pending</code> \u624D\u4F1A\u91CD\u7F6E\u4E3A <code>false</code>\uFF0C\u4E4B\u540E\u6536\u96C6\u7684\u4EFB\u52A1\u5C06\u5728\u4E00\u4E0B\u5EF6\u8FDF\u4E2D\u6267\u884C\u3002</p><p>\u4E0A\u6587\u90FD\u662F\u5EF6\u8FDF\u4EFB\u52A1\u7684\u6536\u96C6\u90E8\u5206\u3002\u4E4B\u540E\u4E8B\u4EF6\u5FAA\u73AF\u8FDB\u5165\u8FD9\u4E9B\u4EFB\u52A1\u7684\u6267\u884C\u9636\u6BB5\u65F6\uFF0C\u5C06\u4F1A\u6267\u884C\u5EF6\u8FDF\u7684\u56DE\u8C03 <code>flushCallbacks</code> \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token comment">// </span>
  <span class="token keyword">var</span> callbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> pending <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">flushCallbacks</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pending <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> copies <span class="token operator">=</span> callbacks<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    callbacks<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> copies<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      copies<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\u9996\u5148 <code>pending</code> \u8BBE\u4E3A\u521D\u59CB\u503C <code>false</code>, \u4E4B\u540E\u6536\u96C6\u7684\u4EFB\u52A1\u5C06\u5728\u4E00\u4E0B\u5EF6\u8FDF\u4E2D\u6267\u884C\u3002\u7136\u540E\u4ECE <code>callbacks</code> \u6570\u7EC4\u53D6\u51FA\u4FDD\u5B58\u7684\u4EFB\u52A1\uFF0C\u4E00\u4E00\u6267\u884C</p><h3 id="\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50" aria-hidden="true">#</a> \u4F8B\u5B50</h3><p>\u4EE5\u4E0B\u9762\u901A\u8FC7\u4F8B\u5B50\u6765\u770B\u4E0B <code>$nextTick</code> \u7684\u6267\u884C\u8FC7\u7A0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;app&quot;</span><span class="token operator">&gt;</span>
  <span class="token punctuation">{</span><span class="token punctuation">{</span> name <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">{</span><span class="token punctuation">{</span>bind<span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
  <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;AA&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u54C8\u54C8&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">bind</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">+</span> <span class="token string">&#39;__________&#39;</span>
        <span class="token keyword">return</span> result
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">message</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">debugger</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;nextTick&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;mounted&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> <span class="token string">&quot;message_B&quot;</span>
      <span class="token keyword">debugger</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;nextTick2&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53 <code>mounted</code> \u94A9\u5B50\u89E6\u53D1\u540E\uFF0C\u6267\u884C\u4E86\u4E24\u4E2A <code>this.$nextTick</code> \u65B9\u6CD5\u548C\u4E00\u4E2A <code>this.message</code> \u5C5E\u6027\u503C\u7684\u4FEE\u6539</p><p>\u9996\u5148\u6267\u884C\u7B2C\u4E00\u4E2A <code>this.$nextTick</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">nextTick</span> <span class="token punctuation">(</span><span class="token parameter">cb<span class="token punctuation">,</span> ctx</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> _resolve<span class="token punctuation">;</span>
    callbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> ctx<span class="token punctuation">,</span> <span class="token string">&#39;nextTick&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>_resolve<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">_resolve</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>pending<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      pending <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token function">timerFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// $flow-disable-line</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cb <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> Promise <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        _resolve <span class="token operator">=</span> resolve<span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5C06 <code>() =&gt; console.log(&#39;nextTick&#39;)</code> \u5B58\u5165 <code>callbacks</code> \u6570\u7EC4\uFF0C\u5E76\u6267\u884C <code>timerFunc()</code> \u5F00\u542F\u4E00\u6B21\u5EF6\u8FDF\uFF0C\u540C\u65F6 <code>pending = true</code> \u8868\u793A\u5F53\u524D\u5EF6\u8FDF\u4EFB\u52A1\u5DF2\u5F00\u542F</p><p>\u7136\u540E\u6267\u884C <code>this.message = &quot;message_B&quot;</code></p><p>\u5F53 <code>message</code> \u53D8\u5316\u65F6\uFF0C\u5C06\u4F1A\u6267\u884C <code>message</code> \u5C5E\u6027\u6536\u96C6\u7684 <code>Watcher</code> \u4E8B\u4EF6\uFF0C\u4E0A\u9762\u4F8B\u5B50 <code>message</code> \u5C5E\u6027\u6536\u96C6\u7684\u4E8B\u4EF6\u6709\uFF1A<code>watch Watcher</code>\u3001 <code>computed Watcher</code>\u3001 <code>render Watcher</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token class-name">Dep</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">notify</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">notify</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> subs <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>subs<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>config<span class="token punctuation">.</span>async<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      subs<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> a<span class="token punctuation">.</span>id <span class="token operator">-</span> b<span class="token punctuation">.</span>id<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> subs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      subs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token comment">// update</span>
    <span class="token class-name">Watcher</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">update</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">update</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lazy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sync<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">queueWatcher</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token comment">// queueWatcher</span>
   <span class="token keyword">function</span> <span class="token function">queueWatcher</span> <span class="token punctuation">(</span><span class="token parameter">watcher</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> id <span class="token operator">=</span> watcher<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      has<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>flushing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>watcher<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// if already flushing, splice the watcher based on its id</span>
        <span class="token comment">// if already past its id, it will be run next immediately.</span>
        <span class="token keyword">var</span> i <span class="token operator">=</span> queue<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> index <span class="token operator">&amp;&amp;</span> queue<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>id <span class="token operator">&gt;</span> watcher<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          i<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        queue<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> watcher<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// queue the flush</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>waiting<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        waiting <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>config<span class="token punctuation">.</span>async<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">flushSchedulerQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token function">nextTick</span><span class="token punctuation">(</span>flushSchedulerQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6570\u636E\u53D8\u5316\u7136\u540E\u53D1\u51FA\u54CD\u5E94\uFF0C\u9996\u5148\u904D\u5386\u6536\u96C6\u5668 <code>subs</code> \u4E2D\u7684\u4EFB\u52A1\u4E0A\u7136\u540E\u901A\u8FC7 <code>queueWatcher()</code>\u5C06\u5F53\u524D\u8981\u6267\u884C\u7684 <code>watcher</code> \u63A8\u5165\u5230 <code>queue</code> \u6570\u7EC4\u4E2D\uFF0C \u7136\u540E\u5C06 <code>flushSchedulerQueue</code> \u65B9\u6CD5\u901A\u8FC7 <code>nextTick()</code> \u65B9\u6CD5\u6DFB\u52A0\u5230\u5F02\u6B65\u4EFB\u52A1\u56DE\u8C03\u7684 <code>callbacks</code> \u6570\u7EC4\u4E2D\u3002</p><p>\u7136\u540E\u6267\u884C\u6700\u540E\u4E00\u4E2A <code>this.$nextTick</code>\uFF0C\u5C06\u56DE\u8C03 <code>() =&gt; {console.log(&#39;nextTick2&#39;)}</code> \u6DFB\u52A0\u5230\u5F02\u6B65\u4EFB\u52A1\u56DE\u8C03\u7684 <code>callbacks</code> \u6570\u7EC4\u4E2D\u3002</p><p>\u4E4B\u540E\u5C31\u662F\u5C06\u5F53\u524D\u5B8F\u4EFB\u52A1\u7684\u4EE3\u7801\u5757\u6267\u884C\u5B8C\uFF0C\u8FC7\u4E86\u8089\u773C\u4E0D\u53EF\u89C1\u7684\u65F6\u95F4\u4E4B\u540E\uFF0C\u5C06\u4F1A\u6267\u884C\u5F02\u6B65\u56DE\u8C03 <code>flushCallbacks</code> \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">flushCallbacks</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pending <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> copies <span class="token operator">=</span> callbacks<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    callbacks<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> copies<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      copies<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u6267\u884C\u5C31\u662F\u53D6\u51FA <code>callbacks</code> \u91CC\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u4E00\u4E00\u6267\u884C</p><ol><li><p>\u9996\u5148\u6267\u884C\u6BCF\u4E00\u4E2A <code>$nextTick</code> \u56DE\u8C03\uFF0C\u8F93\u51FA <code>console.log(&#39;nextTick&#39;)</code></p></li><li><p>\u6267\u884C <code>message</code> \u5C5E\u6027\u6536\u96C6\u7684 <code>Watcher</code> \u4E8B\u4EF6\uFF0C\u5305\u62EC\u89C6\u56FE\u7684\u66F4\u65B0</p></li><li><p>\u6267\u884C\u6700\u540E\u4E00\u4E2A <code>$nextTick</code> \u56DE\u8C03\uFF0C\u8F93\u51FA <code>console.log(&#39;nextTick2&#39;)</code>\uFF0C\u56E0\u4E3A\u4E0A\u4E00\u6B65\u89C6\u56FE\u5DF2\u7ECF\u66F4\u65B0\u4E86\uFF0C\u6240\u4EE5\u5982\u679C\u5728\u8FD9\u4E2A\u56DE\u8C03\u91CC\u662F\u53EF\u4EE5\u8BBF\u95EE\u5230\u66F4\u65B0\u540E\u7684 DOM \u5143\u7D20\u7684</p></li></ol><p><strong>\u5982\u679C <code>$nextTick</code> \u53C8\u6267\u884C\u4E00\u4E2A <code>$nextTick</code> \u4F1A\u600E\u6837\u5462</strong></p><p>\u4E0A\u6587\u8BF4\u8FC7 <code>nextTick</code> \u65B9\u6CD5\u4E2D\u6709\u4E2A <code>pedding</code> \u6807\u8BB0\u3002\u5728\u5F00\u542F\u4E00\u8F6E\u5EF6\u8FDF\u4EFB\u52A1\u7684\u65F6\u5019\u4F1A\u5C06 <code>pedding</code> \u8BBE\u4E3A <code>true</code>\uFF0C\u6536\u96C6\u540C\u4E00\u65F6\u95F4\u7684\u9700\u8981\u5EF6\u8FDF\u6267\u884C\u7684\u4EFB\u52A1\u3002</p><p>\u5F53\u8FD9\u4E00\u8F6E\u7684\u5EF6\u8FDF\u7684\u4EFB\u52A1\uFF08A\uFF09\u5F00\u59CB\u6267\u884C\u65F6\u66F4\u65B0 <code>pedding</code> \u72B6\u6001 <code>pedding = false</code>\u3002\u6240\u4EE5\u6B64\u65F6\u5728\u56DE\u8C03\u5185\u5982\u679C\u53C8\u6267\u884C\u4E86 <code>$nextTick</code>\uFF0C\u76F8\u5F53\u4E8E\u53C8\u5F00\u542F\u4E86\u65B0\u4E00\u4E2A\u5EF6\u8FDF\u4EFB\u52A1\uFF08B\uFF09\uFF0C\u65B0\u4E00\u8F6E\u7684\u56DE\u8C03\u5C06\u5728\u5F53\u524D\u56DE\u8C03\uFF08A\uFF09\u6267\u884C\u4E4B\u540E\u6267\u884C</p><p>\u76F8\u5F53\u4EE5\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6267\u884C\u7B2C\u4E00\u4E2A\u5F02\u6B65\u7ED3\u679C</span>
    Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u53C8\u6DFB\u52A0\u4E86\u4E00\u4E2A\u5F02\u6B65\u4EFB\u52A1</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6267\u884C\u7B2C\u4E8C\u4E2A\u5F02\u6B65\u7ED3\u679C</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u540C\u4E00\u65F6\u95F4\u7684\u4EFB\u52A1\u90FD\u4F1A\u4FDD\u5B58\u5230 <code>callback</code> \u961F\u5217\u4E2D\uFF0C\u540C\u65F6\u6839\u636E\u73AF\u5883\u4F7F\u7528\u539F\u751F\u7684 <code>Promise.then</code>\u3001<code>MutationObserver</code> \u548C <code>setImmediate</code>\u65B9\u6CD5\uFF0C\u5EF6\u8FDF\u6267\u884C <code>callback</code> \u4E2D\u7684\u4EFB\u52A1</p>`,45);function v(m,b){const a=i("ExternalLinkIcon");return t(),e("div",null,[u,n("blockquote",null,[n("p",null,[n("a",k,[r,o(a)])])]),d])}var g=p(l,[["render",v],["__file","$nextTick.html.vue"]]);export{g as default};
