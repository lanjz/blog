import{_ as e,o,c,b as n,a as p,e as s,d as t,r as l}from"./app.35d123d0.js";const i={},u=n("h1",{id:"\u52A8\u6001\u89C4\u5212",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u52A8\u6001\u89C4\u5212","aria-hidden":"true"},"#"),s(" \u52A8\u6001\u89C4\u5212")],-1),r=n("p",null,"\u52A8\u6001\u89C4\u5212\uFF08Dynamic Programming\uFF0CDP\uFF09\u4E00\u822C\u7528\u4E8E\u53EF\u4EE5\u901A\u8FC7\u5B50\u95EE\u9898\u6765\u5BFB\u627E\u6700\u7EC8\u7B54\u6848\u7684\u9898\u76EE\uFF0C\u5F53\u7136\u6240\u6709\u5B50\u95EE\u9898\u53CA\u5B50\u95EE\u9898\u7684\u89E3\u6CD5\u662F\u4E00\u6837\u3002\u8FD9\u7C7B\u9898\u76EE\u7684\u5173\u952E\u8BCD\uFF1A\u91CD\u53E0\u5B50\u95EE\u9898\uFF0C\u6700\u4F18\u5B50\u7ED3\u6784",-1),k=n("p",null,[n("strong",null,"\u590D\u6742\u5EA6"),s("\uFF1A\u52A8\u6001\u89C4\u5219\u7684\u65F6\u95F4\u590D\u6742\u5EA6 = \u9012\u5F52\u51FD\u6570\u7684\u590D\u6742\u5EA6 * \u9012\u5F52\u51FD\u6570\u7684\u8C03\u7528\u6B21\u6570")],-1),d=n("h2",{id:"\u7C9F\u5B50",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7C9F\u5B50","aria-hidden":"true"},"#"),s(" \u7C9F\u5B50")],-1),v=n("p",null,"\u52A8\u6001\u89C4\u5219\u5E38\u7528\u4E8E\u89E3\u51B3\u8DEF\u5F84\u53CA\u56DE\u6587\u4E32\u7B49\u76F8\u5173\u7684\u9898\u76EE\u4E2D",-1),m={id:"\u6590\u6CE2\u90A3\u5951\u6570\u5217",tabindex:"-1"},b=n("a",{class:"header-anchor",href:"#\u6590\u6CE2\u90A3\u5951\u6570\u5217","aria-hidden":"true"},"#",-1),g=s(),w={href:"https://leetcode-cn.com/problems/fei-bo-na-qi-shu-lie-lcof/",target:"_blank",rel:"noopener noreferrer"},y=s("\u6590\u6CE2\u90A3\u5951\u6570\u5217"),h=t(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u5199\u4E00\u4E2A\u51FD\u6570\uFF0C\u8F93\u5165 n \uFF0C\u6C42\u6590\u6CE2\u90A3\u5951\uFF08Fibonacci\uFF09\u6570\u5217\u7684\u7B2C n \u9879\uFF08\u5373 F(N)\uFF09\u3002\u6590\u6CE2\u90A3\u5951\u6570\u5217\u7684\u5B9A\u4E49\u5982\u4E0B\uFF1A

F(0) = 0,   F(1) = 1
F(N) = F(N - 1) + F(N - 2), \u5176\u4E2D N &gt; 1.

\u6590\u6CE2\u90A3\u5951\u6570\u5217\u7531 0 \u548C 1 \u5F00\u59CB\uFF0C\u4E4B\u540E\u7684\u6590\u6CE2\u90A3\u5951\u6570\u5C31\u662F\u7531\u4E4B\u524D\u7684\u4E24\u6570\u76F8\u52A0\u800C\u5F97\u51FA\u3002

\u7B54\u6848\u9700\u8981\u53D6\u6A21 1e9+7\uFF081000000007\uFF09\uFF0C\u5982\u8BA1\u7B97\u521D\u59CB\u7ED3\u679C\u4E3A\uFF1A1000000008\uFF0C\u8BF7\u8FD4\u56DE 1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u66B4\u529B\u9012\u5F52\u6CD5</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">fib</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> n
    <span class="token keyword">return</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1AO(2^n) * O(1) = O(2^n)</p><p>\u95EE\u9898\uFF1A\u5728\u9012\u5F52\u8C03\u7528\u7684\u65F6\u5019\u4F1A\u9020\u6210\u91CD\u590D\u7684\u8BA1\u7B97\uFF0C\u6BD4\u5982\uFF1A<code>fib(7) = fib(6) + fib(5)</code>\u3001<code>fib(6) = fib(5)+fib(4)</code>,\u8FD9\u91CC <code>fib(5)</code> \u5C31\u91CD\u590D\u8BA1\u7B97\u4E86</p><p><strong>\u4F18\u5316\u4E00\uFF1A\u7F13\u5B58</strong></p><p>\u6DFB\u52A0\u4E00\u4E2A\u5BF9\u8C61\u5C06\u5DF2\u7ECF\u8BA1\u7B97\u8FC7\u7684\u503C\u7F13\u5B58\u8D77\u6765</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">n</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">var</span> <span class="token function-variable function">fib</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> n
    <span class="token keyword">if</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> map<span class="token punctuation">[</span>n<span class="token punctuation">]</span>
    map<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">fib</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> map<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token operator">%</span><span class="token number">1000000007</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F18\u5316\u540E\u6240\u6709\u7684\u503C\u53EA\u9700\u8C03\u7528\u4E00\u6B21\u5C31\u53EF\u4EE5\u4E86\uFF0C\u6240\u4EE5\u9012\u5F52\u7684\u8C03\u7528\u6B21\u6570\u4E3A n \u6B21\u3002\u90A3\u4E48\u5F97\u5230\u65F6\u95F4\u590D\u6742\u5EA6\uFF1AO(n) * O(1) = O(n)</p><p>\u4F46\u662F\u989D\u5916\u521B\u5EFA\u4E86 <code>map</code> \u5B58\u50A8\u6240\u6709\u503C\uFF0C\u6240\u4EE5\u989D\u5916\u6DFB\u52A0\u4E86\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1AO(n)\uFF0C\u5178\u578B\u7684\u7A7A\u95F4\u6362\u65F6\u95F4</p><p><strong>\u81F3\u5E95\u5411\u4E0A\u89E3\u51B3</strong></p><p>\u4E0A\u9762\u7684\u4F8B\u5B50\u90FD\u662F\u81F3\u9876\u5411\u4E0B\u7684\u89E3\u6CD5\uFF0C\u73B0\u5728\u4F7F\u7528\u8FED\u4EE3\u7684\u65B9\u5F0F\u5B8C\u6210\u81F4\u5E95\u5411\u4E0A\u7684\u89E3\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">n</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>

<span class="token keyword">var</span> <span class="token function-variable function">fib</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    map<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
    map<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        map<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>map<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>map<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">1000000007</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> map<span class="token punctuation">[</span>n<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1AO(n)</p><p>\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1AO(n)</p><p><strong>\u4F18\u5316\u4E8C\uFF1A\u4F18\u5316\u7A7A\u95F4\u590D\u6742\u5EA6</strong></p><p>\u6839\u636E\u6590\u6CE2\u90A3\u5951\u7684\u89C4\u5F8B\uFF0C<code>F(N) = F(N - 1) + F(N - 2)</code>\uFF0C\u5B9E\u9645\u4E0A\u5E76\u4E0D\u9700\u8981\u4FDD\u5B58\u6240\u6709\u7684\u503C\uFF0C\u53EA\u9700\u8981\u4FDD\u5B58 <code>F(N - 1)</code> \u548C <code> F(N - 2)</code> \u8FD9\u4E24\u4E2A\u503C\u5373\u53EF\uFF0C\u6240\u4EE5\u5728\u81F3\u5E95\u5411\u4E0A\u7684\u89E3\u6CD5\u4E0A\u53EF\u4EE5\u505A\u8FDB\u4E00\u6B65\u4F18\u5316</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">n</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>

<span class="token keyword">var</span> <span class="token function-variable function">fib</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> n
    <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        result <span class="token operator">=</span> <span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token punctuation">)</span> <span class="token operator">%</span><span class="token number">1000000007</span>
        a <span class="token operator">=</span> b
        b <span class="token operator">=</span> result
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result 
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EA\u9700\u8981\u989D\u5916\u4E09\u4E2A\u53D8\u91CF\u5C31\u53EF\u4EE5\u5B8C\u6210\u4F18\u5316\uFF0C\u7A7A\u95F4\u590D\u6742\u76F4\u63A5\u964D\u5230 O(1)</p>`,19),f={id:"\u722C\u697C\u68AF",tabindex:"-1"},_=n("a",{class:"header-anchor",href:"#\u722C\u697C\u68AF","aria-hidden":"true"},"#",-1),j=s(),x={href:"https://leetcode-cn.com/problems/climbing-stairs/",target:"_blank",rel:"noopener noreferrer"},q=s("\u722C\u697C\u68AF"),M=t(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u5047\u8BBE\u4F60\u6B63\u5728\u722C\u697C\u68AF\u3002\u9700\u8981 n \u9636\u4F60\u624D\u80FD\u5230\u8FBE\u697C\u9876\u3002

\u6BCF\u6B21\u4F60\u53EF\u4EE5\u722C 1 \u6216 2 \u4E2A\u53F0\u9636\u3002\u4F60\u6709\u591A\u5C11\u79CD\u4E0D\u540C\u7684\u65B9\u6CD5\u53EF\u4EE5\u722C\u5230\u697C\u9876\u5462\uFF1F

\u6CE8\u610F\uFF1A\u7ED9\u5B9A n \u662F\u4E00\u4E2A\u6B63\u6574\u6570\u3002

- \u793A\u4F8B\u4E00. \u722C2\u4E2A\u53F0\u9636\uFF0C\u6709\u4E24\u79CD\u89E3\u6CD5\uFF1A
  1. 1\u9636 + 1\u9636
  2. 2\u9636
  
- \u793A\u4F8B\u4E8C. \u722C3\u4E2A\u53F0\u9636\uFF0C\u6709\u4E09\u79CD\u89E3\u6CD5\uFF1A
  1. 1\u9636 + 1 \u9636 + 1 \u9636
  2. 1\u9636 + 2 \u9636
  3. 2\u9636 + 1 \u9636
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u601D\u8DEF\uFF1A</strong></p><ol><li><p>\u56E0\u4E3A\u6BCF\u6B21\u53EF\u4EE5\u9009\u62E9\u8D70\u4E00\u6B65\u6216\u4E24\u6B65\uFF0C\u6240\u4EE5\u5230\u8FBE <code>n</code> \u9636\u7684\u65B9\u5F0F\u6709\u4E24\u79CD\uFF1A\u4ECE <code>n-1</code> \u9636\u8D70\u4E00\u6B65\u5230\u8FBE <code>n</code> \u9636\uFF0C\u4E5F\u53EF\u4EE5\u4ECE <code>n-2</code> \u9636\u8D70\u4E24\u6B65\u5230\u8FBE <code>n</code> \u9636\uFF0C\u6240\u4EE5\u8D70 <code>n</code> \u521B\u7684\u53EF\u80FD\u6027\u4E3A <code>f(n) = f(n-1)+f(n-2)</code></p></li><li><p><code>n-1</code> \u548C <code>n-2</code> \u7684\u53EF\u80FD\u8D70\u6CD5\u4E5F\u662F\u540C\u7406\uFF0C\u76F4\u63A5\u5230\u8D70 <code>1\u9636</code> \u6216 <code>2\u9636</code> \u4E3A\u6B62</p></li><li><p>\u6240\u4EE5\u8BA1\u7B97\u601D\u8DEF\u5C31\u662F\u4ECE <code>1\u9636</code> \u5F00\u59CB\u8BA1\u7B97\u4E00\u76F4\u8FED\u4EE3\u5230 <code>n</code> \u9636\u5C31\u5F97\u5230\u8D70 <code>n</code> \u7684\u6240\u6709\u8D70\u6CD5</p></li></ol><p><strong>\u95EE\u9898\u7684\u89C4\u6A21\u968F\u7740\u62C6\u5206\uFF0C\u4F1A\u53D8\u5F97\u8D8A\u6765\u8D8A\u5C0F\uFF0C\u8FD9\u79CD\u5C06\u95EE\u9898\u62C6\u89E3\uFF0C\u5E76\u901A\u8FC7\u8BA1\u7B97\u5C0F\u95EE\u9898\u7684\u89E3\uFF0C\u6700\u7EC8\u8BA1\u7B97\u51FA\u6700\u4F18\u89E3\u7684\u601D\u60F3\u5C31\u662F\u52A8\u6001\u89C4\u5212</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">allMethods</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token keyword">let</span> dp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
   dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
   dp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
   <span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">2</span> <span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i <span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span>  <span class="token operator">=</span> dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u4E3AO(n)\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3A\uFF1AO(n)</p><p>\u6B64\u9898\u8DDF\u6590\u6CE2\u90A3\u5951\u6570\u5217\u7684\u89E3\u6CD5\u51E0\u4E4E\u4E00\u81F4</p>`,7),O={id:"_322-\u96F6\u94B1\u5151\u6362",tabindex:"-1"},A=n("a",{class:"header-anchor",href:"#_322-\u96F6\u94B1\u5151\u6362","aria-hidden":"true"},"#",-1),N=s(),F={href:"https://leetcode-cn.com/problems/coin-change/",target:"_blank",rel:"noopener noreferrer"},C=s("322. \u96F6\u94B1\u5151\u6362"),I=t(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u7ED9\u5B9A\u4E0D\u540C\u9762\u989D\u7684\u786C\u5E01 coins \u548C\u4E00\u4E2A\u603B\u91D1\u989D amount\u3002\u7F16\u5199\u4E00\u4E2A\u51FD\u6570\u6765\u8BA1\u7B97\u53EF\u4EE5\u51D1\u6210\u603B\u91D1\u989D\u6240\u9700\u7684\u6700\u5C11\u7684\u786C\u5E01\u4E2A\u6570\u3002\u5982\u679C\u6CA1\u6709\u4EFB\u4F55\u4E00\u79CD\u786C\u5E01\u7EC4\u5408\u80FD\u7EC4\u6210\u603B\u91D1\u989D\uFF0C\u8FD4\u56DE-1\u3002
\u4F60\u53EF\u4EE5\u8BA4\u4E3A\u6BCF\u79CD\u786C\u5E01\u7684\u6570\u91CF\u662F\u65E0\u9650\u7684\u3002

\u793A\u4F8B\uFF1A

\u8F93\u5165\uFF1Acoins = [1, 2, 5], amount = 11
\u8F93\u51FA\uFF1A3 
\u89E3\u91CA\uFF1A11 = 5 + 5 + 1

\u793A\u4F8B 2\uFF1A
\u8F93\u5165\uFF1Acoins = [2], amount = 3
\u8F93\u51FA\uFF1A-1

\u793A\u4F8B 3\uFF1A
\u8F93\u5165\uFF1Acoins = [1], amount = 0
\u8F93\u51FA\uFF1A0

\u793A\u4F8B 4\uFF1A
\u8F93\u5165\uFF1Acoins = [1], amount = 1
\u8F93\u51FA\uFF1A1

\u793A\u4F8B 5\uFF1A
\u8F93\u5165\uFF1Acoins = [1], amount = 2
\u8F93\u51FA\uFF1A2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u89E3\u9898\u601D\u8DEF</strong></p><p>\u5BF9\u4E8E\u603B\u91D1\u989D <code>amount</code> \u5047\u8BBE\u6709\u96F6\u94B1 <code>n</code>\uFF0C\u90A3\u4E48 <code>amount</code>\u7684\u6700\u5C11\u96F6\u94B1\u6570\u4E3A <code>dp[amount-n]+1</code>\uFF0C<code>dp</code> \u5B58\u50A8\u7684\u662F\u6240\u6709\u91D1\u989D\u7684\u6700\u5C11\u786C\u5E01\u6570\uFF0C<code>amount-n</code> \u5FC5\u7136\u662F\u5C0F\u4E8E <code>amount</code>\u7684\uFF0C\u6240\u4EE5\u8DDF\u722C\u697C\u68AF\u4E00\u6837\uFF0C\u6211\u4EEC\u8981\u5F97\u5230\u603B\u91D1\u989D <code>amount</code> \u7684\u6700\u5C11\u786C\u5E01\u6570\uFF0C\u5148\u4ECE\u91D1\u989D\u4E3A <code>1</code> \u5F00\u59CB\u5F97\u5230\u6BCF\u4E2A\u91D1\u989D\u7684\u6700\u5C11\u786C\u5E01\u6570\u76F4\u63A5 <code>n</code> \u4E3A\u6B62</p><p><strong>\u4F7F\u7528\u52A8\u6001\u89C4\u5212\u8FED\u4EE3\u81F3\u5E95\u5411\u4E0A\u89E3\u6CD5</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">coins</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">amount</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>

<span class="token keyword">var</span> <span class="token function-variable function">coinChange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">coins<span class="token punctuation">,</span> amount</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// amount\u662F\u6700\u540E\u7684\u957F\u5EA6\u4E0B\u6807\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u6570\u636E\u957F\u5EA6\u5E94\u56DE amount+1</span>
    <span class="token comment">// \u56E0\u4E3A\u662F\u4EE5\u6700\u5C0F\u4E3A\u6700\u4F18\u89E3\uFF0C\u6240\u4EE5\u9ED8\u8BA4\u7ED9\u6240\u6709 dp \u8D4B\u6700\u5927\u503C </span>
    <span class="token keyword">let</span> dp <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>amount<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span>
    dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>dp<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token keyword">of</span> coins<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">-</span> j <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">continue</span> <span class="token comment">// \u5982\u679C\u8FD9\u4E2A\u96F6\u98DF\u6BD4\u603B\u91D1\u989D\u5927\uFF0C\u5219\u8DEF\u8FC7</span>
            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token operator">+</span> dp<span class="token punctuation">[</span>i<span class="token operator">-</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u53D6\u6700\u4F18\u89E3</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>amount<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">Infinity</span> <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> dp<span class="token punctuation">[</span>amount<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u66B4\u529B\u9012\u5F52</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">coins</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">amount</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">coinChange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">coins<span class="token punctuation">,</span> amount</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token number">Infinity</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>amount <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>amount <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> coins<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> subResult <span class="token operator">=</span> <span class="token function">coinChange</span><span class="token punctuation">(</span>coins<span class="token punctuation">,</span> amount <span class="token operator">-</span> i<span class="token punctuation">)</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>subResult <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">continue</span>
        result <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> subResult<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result <span class="token operator">===</span> <span class="token number">Infinity</span> <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> result
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65F6\u95F4\u590D\u6742\u5EA6\u5206\u6790\uFF1A\u9012\u5F52\u603B\u6570 x \u6BCF\u4E2A\u9012\u5F52\u51FD\u6570\u7684\u65F6\u95F4</p><ul><li><p>\u9012\u5F52\u603B\u6570\uFF1A\u9012\u5F52\u6811\u8282\u70B9\u4E2A\u6570\uFF0C\u662F O(n^k)</p></li><li><p>\u6BCF\u4E2A\u9012\u5F52\u51FD\u6570\u7684\u65F6\u95F4\uFF1A\u6BCF\u4E2A\u9012\u5F52\u51FD\u6570\u4E2D\u542B\u6709\u4E00\u4E2A <code>for</code> \u5FAA\u73AF,O(k)</p></li></ul><p>\u6240\u4EE5\u603B\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(k * n^k)\uFF0C\u6307\u6570\u7EA7\u522B</p><p>\u6267\u884C\u4E0A\u8FF0\u7684\u4EE3\u7801\u5C06\u4F1A\u63D0\u793A\u8FD0\u884C\u8D85\u65F6\uFF0C\u53EF\u4EE5\u53C2\u8003\u4E4B\u524D\u6590\u6CE2\u90A3\u5951\u6570\u7684\u9898\u76EE\u505A\u4F18\u5316</p><p><strong>\u4F18\u5316\u4E00\uFF1A\u7F13\u5B58</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">coins</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">amount</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">var</span> <span class="token function-variable function">coinChange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">coins<span class="token punctuation">,</span> amount</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token number">Infinity</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>amount <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>amount <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>amount<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> map<span class="token punctuation">[</span>amount<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> coins<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> subResult <span class="token operator">=</span> <span class="token function">coinChange</span><span class="token punctuation">(</span>coins<span class="token punctuation">,</span> amount <span class="token operator">-</span> i<span class="token punctuation">)</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>subResult <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">continue</span>
        result <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> subResult<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    map<span class="token punctuation">[</span>amount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>result <span class="token operator">===</span> <span class="token number">Infinity</span> <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> result<span class="token punctuation">)</span>
    <span class="token keyword">return</span> map<span class="token punctuation">[</span>amount<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A\u9012\u5F52\u6570\u91CF\uFF08n\uFF09\uFF0C\u6BCF\u4E2A\u9012\u5F52\u9700\u8981\u7684\u65F6\u95F4\u4ECD\u662F\uFF08k\uFF09\uFF0C\u6240\u4EE5\u6700\u7EC8\u7684\u590D\u6742\u5EA6\u4E3A O(kn)</p>`,14),S={id:"_343-\u6574\u6570\u62C6\u5206",tabindex:"-1"},B=n("a",{class:"header-anchor",href:"#_343-\u6574\u6570\u62C6\u5206","aria-hidden":"true"},"#",-1),R=s(),V={href:"https://leetcode-cn.com/problems/integer-break/",target:"_blank",rel:"noopener noreferrer"},D=s("343. \u6574\u6570\u62C6\u5206"),E=t(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u7ED9\u5B9A\u4E00\u4E2A\u6B63\u6574\u6570 n\uFF0C\u5C06\u5176\u62C6\u5206\u4E3A\u81F3\u5C11\u4E24\u4E2A\u6B63\u6574\u6570\u7684\u548C\uFF0C\u5E76\u4F7F\u8FD9\u4E9B\u6574\u6570\u7684\u4E58\u79EF\u6700\u5927\u5316\u3002 \u8FD4\u56DE\u4F60\u53EF\u4EE5\u83B7\u5F97\u7684\u6700\u5927\u4E58\u79EF\u3002

\u793A\u4F8B 1:

\u8F93\u5165: 2
\u8F93\u51FA: 1
\u89E3\u91CA: 2 = 1 + 1, 1 \xD7 1 = 1\u3002
\u793A\u4F8B 2:

\u8F93\u5165: 10
\u8F93\u51FA: 36
\u89E3\u91CA: 10 = 3 + 3 + 4, 3 \xD7 3 \xD7 4 = 36\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u601D\u8DEF</strong></p><p>\u4E4D\u4E00\u770B\u8DDF\u4E0A\u9762\u7684\u96F6\u94B1\u5151\u6362\u975E\u5E38\u7684\u76F8\u4F3C\uFF0C\u6240\u4EE5\u601D\u8DEF\u4E5F\u662F\u4E00\u6837\u7684\u4ECE 1 \u5F00\u59CB\u8FED\u4EE3\u5F97\u5230\u6700\u4F18\u7684\u503C\uFF0C\u76F4\u5230 <code>n</code>\uFF1B<br> \u5BF9\u4E8E\u6BCF\u4E2A\u5F53\u524D\u6574\u6570 <code>n</code>\uFF0C\u518D\u4ECE <code>1\u5230n</code> \u8FDB\u884C\u62C6\u5206\uFF0C\u7136\u540E\u53D6\u4ED6\u4EEC\u4E4B\u4E2D\u7684\u6700\u5927\u503C</p><p>\u5982\u4F8B\u5B50 4 \uFF0C\u5982\u679C\u53EA\u662F\u62C6\u6210\u4E24\u4E2A\u6570\u65F6\uFF0C\u53EF\u62C6\u7684\u53EF\u80FD\u6027\u4E3A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- 1*3 = 3

- 2*2 = 4

- 3*1 = 3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\u9898\u76EE\u63CF\u8FF0\u7684\u662F\u81F3\u5C11\u62C6\u6210\u4E24\u4E2A\u4EE5\u4E0A\u7684\u6570\uFF0C\u6240\u4EE5\u5BF9\u4E8E\u4E0A\u9762 <code>1*3</code> \u8FD9\u79CD\u60C5\u51B5\uFF0C<code>1</code> \u662F\u4E0D\u53EF\u80FD\u518D\u62C6\u4E86\uFF0C\u4F46 <code>3</code> \u8FD8\u53EF\u4EE5\uFF0C\u6240\u4EE5\u8FD8\u9700\u8981\u8003\u8651\u5C06 <code>3</code> \u8FDB\u884C\u62C6\u540E\u7684\u60C5\u51B5\uFF0C\u4EE5\u6B64\u7C7B\u63A8\u6240\u4EE5\u7684\u53EF\u80FD\u62C6\u5206\u60C5\u51B5\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>- 1*3 = 3
  - 1*1*2 = 2
  - 1*1*1*1*1 = 1

- 2*2 = 4
  - 2*1*1 = 2

- 3*1 = 3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6240\u4EE5 <code>dp[4] = 4</code>. \u4E0A\u9762\u4F8B\u5B50\u53EF\u4EE5\u770B\u5230\u51FA\u73B0\u4E86\u5197\u4F59\uFF0C\u5148\u4E0D\u505A\u5904\u7406</p><p>\u7136\u540E\u5C06\u8FD9\u4E00\u5C0F\u6BB5\u8F6C\u6362\u6210\u4EE3\u7801\u4E3A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// i \u8868\u793A\u5F53\u524D\u8981\u62C6\u7684\u6574\u6570</span>
<span class="token comment">// \u8FD9\u6BB5\u4EE3\u7801\u53EA\u8003\u8651\u62C6\u6210\u4E24\u4E2A\u7684\u60C5\u51B5\u4E0B</span>
<span class="token keyword">let</span> max <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span>i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span> j<span class="token operator">*</span><span class="token punctuation">(</span>i<span class="token operator">-</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u62C6\u51FA\u6765\u7684\u6570\u7EE7\u7EED\u62C6\u7684\u60C5\u51B5</span>
<span class="token keyword">let</span> max <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span>i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span> j<span class="token operator">*</span><span class="token punctuation">(</span>i<span class="token operator">-</span>j<span class="token punctuation">)</span><span class="token punctuation">,</span> j<span class="token operator">*</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u7EE7\u7EED\u62C6\u540E\u7684\u503C\u53EF\u4EE5\u76F4\u63A5\u4ECE dp \u4E2D\u53D6</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">n</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">integerBreak</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> dp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">let</span> max <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span>i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
           max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span> j<span class="token operator">*</span><span class="token punctuation">(</span>i<span class="token operator">-</span>j<span class="token punctuation">)</span><span class="token punctuation">,</span> j<span class="token operator">*</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> max
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),P={id:"_1143-\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217",tabindex:"-1"},L=n("a",{class:"header-anchor",href:"#_1143-\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217","aria-hidden":"true"},"#",-1),z=s(),Q={href:"https://leetcode-cn.com/problems/longest-common-subsequence/",target:"_blank",rel:"noopener noreferrer"},W=s("1143. \u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217"),H=t(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u7ED9\u5B9A\u4E24\u4E2A\u5B57\u7B26\u4E32 text1 \u548C text2\uFF0C\u8FD4\u56DE\u8FD9\u4E24\u4E2A\u5B57\u7B26\u4E32\u7684\u6700\u957F \u516C\u5171\u5B50\u5E8F\u5217 \u7684\u957F\u5EA6\u3002\u5982\u679C\u4E0D\u5B58\u5728 \u516C\u5171\u5B50\u5E8F\u5217 \uFF0C\u8FD4\u56DE 0 \u3002

\u4E00\u4E2A\u5B57\u7B26\u4E32\u7684 \u5B50\u5E8F\u5217 \u662F\u6307\u8FD9\u6837\u4E00\u4E2A\u65B0\u7684\u5B57\u7B26\u4E32\uFF1A\u5B83\u662F\u7531\u539F\u5B57\u7B26\u4E32\u5728\u4E0D\u6539\u53D8\u5B57\u7B26\u7684\u76F8\u5BF9\u987A\u5E8F\u7684\u60C5\u51B5\u4E0B\u5220\u9664\u67D0\u4E9B\u5B57\u7B26\uFF08\u4E5F\u53EF\u4EE5\u4E0D\u5220\u9664\u4EFB\u4F55\u5B57\u7B26\uFF09\u540E\u7EC4\u6210\u7684\u65B0\u5B57\u7B26\u4E32\u3002

\u4F8B\u5982\uFF0C&quot;ace&quot; \u662F &quot;abcde&quot; \u7684\u5B50\u5E8F\u5217\uFF0C\u4F46 &quot;aec&quot; \u4E0D\u662F &quot;abcde&quot; \u7684\u5B50\u5E8F\u5217\u3002
\u4E24\u4E2A\u5B57\u7B26\u4E32\u7684 \u516C\u5171\u5B50\u5E8F\u5217 \u662F\u8FD9\u4E24\u4E2A\u5B57\u7B26\u4E32\u6240\u5171\u540C\u62E5\u6709\u7684\u5B50\u5E8F\u5217\u3002

\u793A\u4F8B 1\uFF1A

\u8F93\u5165\uFF1Atext1 = &quot;abcde&quot;, text2 = &quot;ace&quot; 
\u8F93\u51FA\uFF1A3  
\u89E3\u91CA\uFF1A\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u662F &quot;ace&quot; \uFF0C\u5B83\u7684\u957F\u5EA6\u4E3A 3 \u3002
\u793A\u4F8B 2\uFF1A

\u8F93\u5165\uFF1Atext1 = &quot;abc&quot;, text2 = &quot;abc&quot;
\u8F93\u51FA\uFF1A3
\u89E3\u91CA\uFF1A\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u662F &quot;abc&quot; \uFF0C\u5B83\u7684\u957F\u5EA6\u4E3A 3 \u3002
\u793A\u4F8B 3\uFF1A

\u8F93\u5165\uFF1Atext1 = &quot;abc&quot;, text2 = &quot;def&quot;
\u8F93\u51FA\uFF1A0
\u89E3\u91CA\uFF1A\u4E24\u4E2A\u5B57\u7B26\u4E32\u6CA1\u6709\u516C\u5171\u5B50\u5E8F\u5217\uFF0C\u8FD4\u56DE 0 \u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u601D\u8DEF</strong></p><p>\u7C9F\u5B50 <code>text1 = &quot;abcde&quot;, text2 = &quot;ace&quot;</code>\uFF0C\u5047\u8BBE <code>dp[i][j]</code> \u8868\u793A<code>text1[i]</code> \u5230 <code>text2[j]</code> \u4E4B\u95F4\u7684\u6700\u591A\u516C\u5171\u5B50\u5E8F\u5217\u4E2A\u6570</p><p>\u90A3\u4E48\u8BA1\u7B97 <code>dp[i][j]</code> \u7684\u6700\u957F\u5B50\u5E8F\u5217\u7684\u65B9\u5F0F\u6709\u51E0\u79CD\u60C5\u51B5\uFF1A</p><ol><li><p><code>s[i]===s[j]</code>\uFF0C\u90A3\u4E48 <code>dp[i][j] = dp[i-1][j-1]+1</code>\u3002 \u5982 <code>dp[2][1]</code> \u8868\u793A <code>abc</code> \u548C <code>ac</code> \u4E4B\u95F4\u6700\u957F\u516C\u5171\u4E2A\u6570\uFF0C\u6B64\u65F6 <code>text1[2] === text2[1]</code>\uFF0C\u6240\u4EE5\u8981\u5148\u77E5\u9053 <code>dp[1][0]</code> \u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\uFF0C\u518D\u6B64\u57FA\u672C\u4E0A <code>+1</code></p></li><li><p><code>s[i]!==s[j]</code>, \u5982 <code>dp[2][2]</code> \u8868\u793A <code>abc</code> \u548C <code>ace</code> \u4E4B\u95F4\u6700\u957F\u516C\u5171\u4E2A\u6570\uFF0C\u6B64\u65F6 <code>text1[2] !== text2[2]</code>\uFF0C\u8981\u4E48\u5B83\u7684\u6700\u957F\u516C\u5171\u5B50\u5E8F\u5217\u5C31\u7B49\u4E4B\u524D\u7684\u6700\u957F\u7684\u516C\u5171\u5B50\u5E8F\u5217\uFF0C\u63A5\u8FD1 <code>dp[2][2]</code> \u8303\u56F4\u7684\u533A\u95F4\u6709 <code>dp[2][1]</code> \u548C <code>dp[1][2]</code>\uFF0C\u53D6\u4ED6\u4EEC\u7684\u6700\u5927\u503C</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">text1</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">text2</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">longestCommonSubsequence</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">text1<span class="token punctuation">,</span> text2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>text1<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>text2<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>text1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span>text2<span class="token punctuation">.</span>length<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>text1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> text2<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span>  <span class="token punctuation">(</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">||</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">||</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span>       
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                 dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">||</span><span class="token number">0</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">||</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">||</span><span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span>text1<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>text2<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),J={id:"\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217",tabindex:"-1"},K=n("a",{class:"header-anchor",href:"#\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217","aria-hidden":"true"},"#",-1),T=s(),U={href:"https://leetcode-cn.com/problems/longest-increasing-subsequence/",target:"_blank",rel:"noopener noreferrer"},X=s("\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217"),Y=t(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u7ED9\u4F60\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 nums \uFF0C\u627E\u5230\u5176\u4E2D\u6700\u957F\u4E25\u683C\u9012\u589E\u5B50\u5E8F\u5217\u7684\u957F\u5EA6\u3002  
\u5B50\u5E8F\u5217\u662F\u7531\u6570\u7EC4\u6D3E\u751F\u800C\u6765\u7684\u5E8F\u5217\uFF0C\u5220\u9664\uFF08\u6216\u4E0D\u5220\u9664\uFF09\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u800C\u4E0D\u6539\u53D8\u5176\u4F59\u5143\u7D20\u7684\u987A\u5E8F\u3002

\u4F8B\u5982\uFF0C[3,6,2,7] \u662F\u6570\u7EC4 [0,3,1,6,2,2,7] \u7684\u5B50\u5E8F\u5217\u3002

\u793A\u4F8B 1\uFF1A
\u8F93\u5165\uFF1Anums = [10,9,2,5,3,7,101,18]
\u8F93\u51FA\uFF1A4
\u89E3\u91CA\uFF1A\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u662F [2,3,7,101]\uFF0C\u56E0\u6B64\u957F\u5EA6\u4E3A 4 \u3002

\u793A\u4F8B 2\uFF1A
\u8F93\u5165\uFF1Anums = [0,1,0,3,2,3]
\u8F93\u51FA\uFF1A4

\u793A\u4F8B 3\uFF1A
\u8F93\u5165\uFF1Anums = [7,7,7,7,7,7,7]
\u8F93\u51FA\uFF1A1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u601D\u8DEF\uFF1A</strong></p><ol><li><p>\u5B9A\u4E49 <code>dp</code> \u5B58\u50A8\u7EC4\u6570\u6BCF\u4E2A\u503C\u7684\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u7684\u4E2A\u6570</p></li><li><p>\u90A3\u4E48\u53EF\u4EE5\u5F97\u5230\u516C\u5F0F <code>dp[n] = dp[n] &gt; dp[n-m] ? dp[n-m] +1: dp[n-m] </code></p></li><li><p>\u5047\u8BBE\u5F53\u524D\u6570\u7EC4 <code>data</code> \u5DF2\u7ECF\u5F97\u5230 <code>dp = [1,2,4,2]</code>\uFF0C\u90A3\u4E48\u5982\u679C\u9700\u8981\u5F97\u5230 <code>dp[4]</code> \u7684\u6700\u4F18\u89E3\uFF0C\u5219\u9700\u8981\u5C06\u4E0B\u6807\u4E3A <code>data[4]</code> \u7684\u503C\u4E0E\u4E4B\u524D\u7684\u503C\u505A\u5BF9\u6BD4</p><ul><li><p><code>dp[4] = dp[4] &gt; dp[0] ? dp[0] +1: dp[0] </code></p></li><li><p><code>dp[4] = dp[4] &gt; dp[1] ? dp[1] +1: dp[1] </code></p></li><li><p><code>dp[4] = dp[4] &gt; dp[2] ? dp[2] +1: dp[2] </code></p></li><li><p><code>dp[4] = dp[4] &gt; dp[3] ? dp[2] +1: dp[3] </code></p></li><li><p>\u6700\u540E <code>dp[4]</code> \u53D6\u4E0A\u9762\u4E4B\u4E2D\u7684\u6700\u5927\u503C</p></li></ul></li><li><p>\u6240\u4EE5\u4ECD\u662F\u9700\u8981\u77E5\u9053\u4ECE\u6570\u7EC4\u7B2C 1 \u4E2A\u4F4D\u7F6E\u5230\u6700\u540E\u4E00\u4E2A\u4F4D\u7F6E\u7684\u6700\u4F18\u89E3\uFF0C\u5E76\u6BCF\u4E2A\u503C\u8FD8\u8981\u4E0E\u4E4B\u524D\u503C\u505A\u6BD4\u8F83\uFF0C\u6240\u4EE5\u9700\u8981\u4F7F\u7528\u5FAA\u73AF</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">lengthOfLIS</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">let</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span>i<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        result <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),Z={id:"\u6700\u957F\u56DE\u6587\u5B50\u5E8F\u5217",tabindex:"-1"},G=n("a",{class:"header-anchor",href:"#\u6700\u957F\u56DE\u6587\u5B50\u5E8F\u5217","aria-hidden":"true"},"#",-1),$=s(),nn={href:"https://leetcode-cn.com/problems/longest-palindromic-subsequence/",target:"_blank",rel:"noopener noreferrer"},sn=s("\u6700\u957F\u56DE\u6587\u5B50\u5E8F\u5217"),an=t(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u7ED9\u5B9A\u4E00\u4E2A\u5B57\u7B26\u4E32 s \uFF0C\u627E\u5230\u5176\u4E2D\u6700\u957F\u7684\u56DE\u6587\u5B50\u5E8F\u5217\uFF0C\u5E76\u8FD4\u56DE\u8BE5\u5E8F\u5217\u7684\u957F\u5EA6\u3002\u53EF\u4EE5\u5047\u8BBE s \u7684\u6700\u5927\u957F\u5EA6\u4E3A 1000 \u3002

\u793A\u4F8B 1:
\u8F93\u5165:&quot;bbbab&quot;
\u8F93\u51FA:4
\u4E00\u4E2A\u53EF\u80FD\u7684\u6700\u957F\u56DE\u6587\u5B50\u5E8F\u5217\u4E3A &quot;bbbb&quot;\u3002

\u793A\u4F8B 2:
\u8F93\u5165:&quot;cbbd&quot;
\u8F93\u51FA:2
\u4E00\u4E2A\u53EF\u80FD\u7684\u6700\u957F\u56DE\u6587\u5B50\u5E8F\u5217\u4E3A &quot;bb&quot;\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u89E3\u9898\u601D\u8DEF</strong></p><p>\u5BF9\u4E8E\u5B57\u7B26\u4E32 <code>s</code> \u5047\u8BBE <code>dp[i][j]</code> \u8868\u793A\u6570\u7EC4\u4E0B\u6807 <code>i-j</code> \u4E4B\u95F4\u6700\u957F\u56DE\u6587\u5B50\u5E8F\u5217</p><p>\u90A3\u4E48\u8BA1\u7B97 <code>dp[m][n]</code> \u7684\u6700\u957F\u5B50\u5E8F\u5217\u7684\u65B9\u5F0F\u6709\u51E0\u79CD\u60C5\u51B5\uFF1A</p><ol><li><p><code>s[m]===s[n]</code>\uFF0C\u90A3\u4E48 <code>dp[m][n] = dp[m+1][n-1]+2</code></p></li><li><p><code>s[m]!==s[n]</code>\uFF0C\u90A3\u4E48 <code>dp[m][n]</code> \u53D6\u73B0\u5728\u6709\u533A\u95F4\u7684\u6700\u957F\u56DE\u6587\u5B50\u5E8F\u5217\u7684\u6700\u5927\u503C\uFF0C<code>dp[m][n]</code> \u4E4B\u95F4\u7684\u6700\u5927\u533A\u95F4\u6709 <code>dp[m+][n]</code> \u548C <code>dp[m][n-1]</code>\uFF0C\u6240\u4EE5\u6B64\u65F6 <code>dp[m][n] = Math.max(dp[m+1][n], dp[m][n-1])</code></p></li><li><p>\u8981\u5F97\u5230<code>dp[m][n]</code>\uFF0C\u5F97\u4ECE<code>dp[0][0]</code> \u5F00\u59CB\u8BA1\u7B97\u5230 <code>dp[m][n]</code></p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">s</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">longestPalindromeSubseq</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u5B9A\u4E49 dp</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> n<span class="token operator">&lt;</span>s<span class="token punctuation">.</span>length<span class="token punctuation">;</span>n<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u4ECE\u5934\u5F00\u59CB\u904D\u5386</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> m <span class="token operator">=</span> n<span class="token punctuation">;</span>m<span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">;</span>m<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u5916\u5C42\u7684\u503C\u4F9D\u8D56\u5185\u5C42\u7684\u503C\uFF0C\u6240\u4EE5\u4ECE\u91CC\u5230\u5916\u904D\u5386</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>m<span class="token operator">===</span>n<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u5750\u6807\u76F8\u7B49\uFF0C\u8868\u793A\u540C\u4E00\u4E2A\u6570\uFF0Cdp[m][n] = 1</span>
                dp<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">===</span> s<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">// \u5B57\u7B26\u76F8\u7B49</span>
                dp<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>n<span class="token operator">-</span>m<span class="token operator">===</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">2</span><span class="token operator">:</span> dp<span class="token punctuation">[</span>m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">2</span> <span class="token comment">// \u5982\u679C\u662F\u76F8\u90BB\u7684\u5B57\u7B26 dp[m][n] = 2\uFF0C\u5426\u5219 [m][n] = dp[m+1][n-1]+2</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span><span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u53D6[m-n] \u533A\u57DF\u5185\u7684\u6700\u5927\u503C</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>s<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),pn={id:"_5-\u6700\u957F\u56DE\u6587\u5B50\u4E32",tabindex:"-1"},tn=n("a",{class:"header-anchor",href:"#_5-\u6700\u957F\u56DE\u6587\u5B50\u4E32","aria-hidden":"true"},"#",-1),en=s(),on={href:"https://leetcode-cn.com/problems/longest-palindromic-substring/",target:"_blank",rel:"noopener noreferrer"},cn=s("5. \u6700\u957F\u56DE\u6587\u5B50\u4E32"),ln=t(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u7ED9\u4F60\u4E00\u4E2A\u5B57\u7B26\u4E32 s\uFF0C\u627E\u5230 s \u4E2D\u6700\u957F\u7684\u56DE\u6587\u5B50\u4E32\u3002

\u793A\u4F8B 1\uFF1A

\u8F93\u5165\uFF1As = &quot;babad&quot;
\u8F93\u51FA\uFF1A&quot;bab&quot;
\u89E3\u91CA\uFF1A&quot;aba&quot; \u540C\u6837\u662F\u7B26\u5408\u9898\u610F\u7684\u7B54\u6848\u3002
\u793A\u4F8B 2\uFF1A

\u8F93\u5165\uFF1As = &quot;cbbd&quot;
\u8F93\u51FA\uFF1A&quot;bb&quot;
\u793A\u4F8B 3\uFF1A

\u8F93\u5165\uFF1As = &quot;a&quot;
\u8F93\u51FA\uFF1A&quot;a&quot;
\u793A\u4F8B 4\uFF1A

\u8F93\u5165\uFF1As = &quot;ac&quot;
\u8F93\u51FA\uFF1A&quot;a&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u89E3\u9898\u601D\u8DEF</strong></p><p>\u6B64\u9898\u601D\u8DEF\u8DDF [\u6700\u957F\u56DE\u6587\u5B50\u5E8F\u5217] \u4E00\u6837\uFF0C\u8981\u89E3\u5F97\u6700\u957F\u56DE\u6587\u5B57\u4E32\uFF0C\u90A3\u4E48\u5C31\u5F97\u77E5\u9053\u54EA\u4E9B\u662F\u56DE\u6587\u4E32\uFF0C\u6240\u4EE5\u5BF9\u4E8E\u5B57\u7B26\u4E32 <code>s</code> \u5B9A\u4E49 <code>dp[i][j]</code>\uFF0C\u8868\u793A\u6570\u7EC4\u4E0B\u6807 <code>i\u5230j</code> \u4E4B\u95F4\u662F\u5426\u662F\u56DE\u6587\u4E32</p><p>\u90A3\u4E48\u8BA1\u7B97 <code>dp[m][n]</code> \u662F\u5426\u662F\u56DE\u6587\u4E32\u7684\u60C5\u51B5\u6709\u6709\uFF1A</p><ol><li><p><code>s[m]===s[n] &amp;&amp; dp[m+1][n-1]</code></p></li><li><p><code>s[m]===s[n] &amp;&amp; (n-m&lt;2)</code>\uFF0C <code>n-m=0</code> \u8868\u793A <code>s[m]</code> \u548C <code>s[n]</code> \u662F\u540C\u4E00\u4E2A\u6570\uFF0C<code>n-m=1</code> \u8868\u793A <code>s[m]</code> \u548C <code>s[n]</code> \u662F\u4E24\u4E2A\u76F8\u90BB\u7684\u6570\uFF0C</p></li><li><p>\u8981\u5F97\u5230<code>dp[m][n]</code>\uFF0C\u5F97\u4ECE<code>dp[0][0]</code> \u5F00\u59CB\u8BA1\u7B97\u5230 <code>dp[m][n]</code></p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">s</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">longestPalindrome</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    <span class="token keyword">let</span> db <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>s<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j<span class="token operator">=</span>i<span class="token punctuation">;</span>j<span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>i<span class="token operator">-</span>j<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                db<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span>db<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                db<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>db<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>i<span class="token operator">-</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&gt;</span>res<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u662F\u56DE\u6587\u4E32\uFF0C\u53D6\u8FD9\u4E2A\u56DE\u6587\u4E32\u5982\u679C\u6BD4 res \u5927\u7684\u8BDD\uFF0C\u5C31\u8FDB\u884C\u4FDD\u5B58</span>
                res <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>    
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),un={id:"_647-\u56DE\u6587\u5B50\u4E32",tabindex:"-1"},rn=n("a",{class:"header-anchor",href:"#_647-\u56DE\u6587\u5B50\u4E32","aria-hidden":"true"},"#",-1),kn=s(),dn={href:"https://leetcode-cn.com/problems/palindromic-substrings/",target:"_blank",rel:"noopener noreferrer"},vn=s("647. \u56DE\u6587\u5B50\u4E32"),mn=t(`<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u7ED9\u5B9A\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u4F60\u7684\u4EFB\u52A1\u662F\u8BA1\u7B97\u8FD9\u4E2A\u5B57\u7B26\u4E32\u4E2D\u6709\u591A\u5C11\u4E2A\u56DE\u6587\u5B50\u4E32\u3002  
\u5177\u6709\u4E0D\u540C\u5F00\u59CB\u4F4D\u7F6E\u6216\u7ED3\u675F\u4F4D\u7F6E\u7684\u5B50\u4E32\uFF0C\u5373\u4F7F\u662F\u7531\u76F8\u540C\u7684\u5B57\u7B26\u7EC4\u6210\uFF0C\u4E5F\u4F1A\u88AB\u89C6\u4F5C\u4E0D\u540C\u7684\u5B50\u4E32\u3002

\u793A\u4F8B 1\uFF1A

\u8F93\u5165\uFF1A&quot;abc&quot;
\u8F93\u51FA\uFF1A3
\u89E3\u91CA\uFF1A\u4E09\u4E2A\u56DE\u6587\u5B50\u4E32: &quot;a&quot;, &quot;b&quot;, &quot;c&quot;
\u793A\u4F8B 2\uFF1A

\u8F93\u5165\uFF1A&quot;aaa&quot;
\u8F93\u51FA\uFF1A6
\u89E3\u91CA\uFF1A6\u4E2A\u56DE\u6587\u5B50\u4E32: &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;aa&quot;, &quot;aa&quot;, &quot;aaa&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u601D\u8DEF</strong></p><p>\u8981\u83B7\u53D6\u591A\u5C11\u56DE\u6587\u5B50\u4E32\uFF0C\u90A3\u4E48\u6211\u9700\u8981\u77E5\u9053\u4E24\u4E2A\u6761\u4EF6</p><ol><li><p>\u8FD9\u4E2A\u5B57\u7B26\u4E32\u53EF\u4EE5\u5206\u6210\u54EA\u4E9B\u5B50\u4E32</p></li><li><p>\u5B57\u7B26\u4E32\u4E24\u4E24\u4E4B\u95F4\u662F\u5426\u56DE\u6587\u4E32</p></li></ol><p>\u5BF9\u4E8E\u7B2C\u4E8C\u70B9\uFF0C\u5176\u5B9E\u5C31\u540C [5. \u6700\u957F\u56DE\u6587\u5B50\u4E32] \u9898\u76EE\u4E00\u6837\uFF0C\u5EFA\u7ACB <code>dp</code>\uFF0C\u8BA1\u7B97\u5F97\u5230\u6240\u6709\u7684 <code>dp[m][n]</code> \u662F\u5426\u662F\u56DE\u6587\u4E32</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5EFA\u7ACB dp \u7684\u4EE3\u7801</span>
<span class="token keyword">var</span> <span class="token function-variable function">countSubstrings</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>s<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j<span class="token operator">=</span>i<span class="token punctuation">;</span>j<span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>i<span class="token operator">-</span>j<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span>dp<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>    
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u5B50\u4E32\uFF0C\u5176\u5B9E\u5FAA\u73AF\u65F6\u5F97\u5230\u7684<code>dp[j][i]</code>\u65F6\uFF0C<code>[j][i]</code> \u5C31\u662F\u5B50\u4E32\u4E86\uFF0C\u6240\u4EE5\u8FD9\u9898\u5176\u5B9E\u8FD9\u9898\u8DDF [5. \u6700\u957F\u56DE\u6587\u5B50\u4E32] \u5C31\u662F\u4E00\u6837\u7684</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">s</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">countSubstrings</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">let</span> dp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>s<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j<span class="token operator">=</span>i<span class="token punctuation">;</span>j<span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>i<span class="token operator">-</span>j<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span>dp<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                count<span class="token operator">++</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>    
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> count
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),bn={id:"_131-\u5206\u5272\u56DE\u6587\u4E32",tabindex:"-1"},gn=n("a",{class:"header-anchor",href:"#_131-\u5206\u5272\u56DE\u6587\u4E32","aria-hidden":"true"},"#",-1),wn=s(),yn={href:"https://leetcode-cn.com/problems/palindrome-partitioning/",target:"_blank",rel:"noopener noreferrer"},hn=s("131. \u5206\u5272\u56DE\u6587\u4E32"),fn=t(`<p><strong>\u52A8\u6001\u89C4\u5219+\u56DE\u6EAF</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u7ED9\u4F60\u4E00\u4E2A\u5B57\u7B26\u4E32 s\uFF0C\u8BF7\u4F60\u5C06 s \u5206\u5272\u6210\u4E00\u4E9B\u5B50\u4E32\uFF0C\u4F7F\u6BCF\u4E2A\u5B50\u4E32\u90FD\u662F \u56DE\u6587\u4E32 \u3002\u8FD4\u56DE s \u6240\u6709\u53EF\u80FD\u7684\u5206\u5272\u65B9\u6848\u3002

\u56DE\u6587\u4E32 \u662F\u6B63\u7740\u8BFB\u548C\u53CD\u7740\u8BFB\u90FD\u4E00\u6837\u7684\u5B57\u7B26\u4E32\u3002

\u793A\u4F8B 1\uFF1A

\u8F93\u5165\uFF1As = &quot;aab&quot;
\u8F93\u51FA\uFF1A[[&quot;a&quot;,&quot;a&quot;,&quot;b&quot;],[&quot;aa&quot;,&quot;b&quot;]]
\u793A\u4F8B 2\uFF1A

\u8F93\u5165\uFF1As = &quot;a&quot;
\u8F93\u51FA\uFF1A[[&quot;a&quot;]]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u601D\u8DEF</strong></p><p>\u8DDF\u4E4B\u524D\u7684\u9898\u76EE\u7C7B\u4F3C\uFF0C\u5F97\u5148\u5B9A\u4E49 <code>dp</code> \u5F97\u5230\u6240\u6709\u4E24\u4E24\u5B57\u7B26\u662F\u5426\u662F\u56DE\u6587\u4E32</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">}</span></span> <span class="token parameter">s</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">partition</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> bp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> s<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span>j<span class="token operator">&lt;</span>s<span class="token punctuation">.</span>length<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">-</span>i<span class="token operator">&lt;</span><span class="token number">2</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">===</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                bp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>bp<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">===</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                bp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span><span class="token punctuation">{</span>
                bp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> tem <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">let</span> <span class="token function-variable function">walk</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">start</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>start <span class="token operator">===</span> s<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
            res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>tem<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span>start<span class="token punctuation">;</span> i<span class="token operator">&lt;</span>s<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>bp<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">continue</span>
            <span class="token punctuation">}</span>
            tem<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token function">walk</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
            tem<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token function">walk</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),_n={href:"https://mp.weixin.qq.com/s/1V3aHVonWBEXlNUvK3S28w",target:"_blank",rel:"noopener noreferrer"},jn=s("\u52A8\u6001\u89C4\u5212\u8BE6\u89E3"),xn={href:"https://mp.weixin.qq.com/s/Cw39C9MY9Wr2JlcvBQZMcA",target:"_blank",rel:"noopener noreferrer"},qn=s("\u52A8\u6001\u89C4\u5212\u8BE6\u89E3\uFF08\u4FEE\u8BA2\u7248\uFF09"),Mn={href:"https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzAxODQxMDM0Mw==&action=getalbum&album_id=1318881141113536512&scene=173&from_msgid=2247484731&from_itemidx=1&count=3&nolastread=1#wechat_redirect",target:"_blank",rel:"noopener noreferrer"},On=s("\u624B\u628A\u624B\u5237\u52A8\u6001\u89C4\u5212");function An(Nn,Fn){const a=l("ExternalLinkIcon");return o(),c("div",null,[u,r,k,d,v,n("h3",m,[b,g,n("a",w,[y,p(a)])]),h,n("h3",f,[_,j,n("a",x,[q,p(a)])]),M,n("h3",O,[A,N,n("a",F,[C,p(a)])]),I,n("h3",S,[B,R,n("a",V,[D,p(a)])]),E,n("h3",P,[L,z,n("a",Q,[W,p(a)])]),H,n("h3",J,[K,T,n("a",U,[X,p(a)])]),Y,n("h3",Z,[G,$,n("a",nn,[sn,p(a)])]),an,n("h3",pn,[tn,en,n("a",on,[cn,p(a)])]),ln,n("h3",un,[rn,kn,n("a",dn,[vn,p(a)])]),mn,n("h3",bn,[gn,wn,n("a",yn,[hn,p(a)])]),fn,n("p",null,[n("a",_n,[jn,p(a)])]),n("p",null,[n("a",xn,[qn,p(a)])]),n("p",null,[n("a",Mn,[On,p(a)])])])}var In=e(i,[["render",An],["__file","\u52A8\u6001\u89C4\u5212.html.vue"]]);export{In as default};
