import{_ as n,o as s,c as a,d as p}from"./app.8ae844c0.js";const t={},e=p(`<h1 id="\u7EC4\u4EF6\u66F4\u65B0\u673A\u5236-diff" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u4EF6\u66F4\u65B0\u673A\u5236-diff" aria-hidden="true">#</a> \u7EC4\u4EF6\u66F4\u65B0\u673A\u5236(diff)</h1><h2 id="virtual-dom" tabindex="-1"><a class="header-anchor" href="#virtual-dom" aria-hidden="true">#</a> Virtual DOM</h2><p>Vue \u4E2D\u4F7F\u7528 <code>Virtual Dom</code> \u7684\u6982\u5FF5\uFF0C\u5B83\u8868\u793A DOM \u8282\u70B9\u7684 JavaScript \u5BF9\u8C61\uFF0C\u4E00\u4E2A <code>Virtual Dom</code> \u8282\u70B9\u5305\u542B\u76F8\u5E94 DOM \u8282\u70B9\u7684 <code>\u6807\u7B7E</code>\uFF0C<code>\u5C5E\u6027</code>\uFF0C<code>\u5B50\u8282\u70B9</code>\uFF0C<code>\u4E8B\u4EF6</code> \u7B49\u7684\u5C5E\u6027\uFF0C\u5B83\u662F\u5BF9\u771F\u5B9E DOM \u8282\u70B9\u7684\u62BD\u8C61\u8868\u793A\u3002</p><p>Vue \u5728\u66F4\u65B0\u89C6\u56FE\u7684\u65F6\u5019\u5728\uFF0C\u5E76\u4E0D\u662F\u76F4\u63A5 DOM \u4E0A\u8FDB\u884C\u66F4\u65B0\uFF0C\u800C\u662F\u5148\u5728 <code>Virtual Dom</code> \u4E0A\u8FDB\u884C\u76F8\u5E94\u4ECE\u4E0A\u9762\u4EE3\u7801\u53EF\u4EE5\u770B\u5230\u5224\u65AD\u65B0\u65E7\u76F8\u540C\u7684\u89C4\u5219\u4E3A\u7684\u66F4\u65B0\u64CD\u4F5C\uFF0C\u6700\u540E\u518D\u6620\u5C04\u5230\u771F\u5B9E DOM \u4E2D</p><h3 id="virtual-dom\u7684\u4F18\u70B9" tabindex="-1"><a class="header-anchor" href="#virtual-dom\u7684\u4F18\u70B9" aria-hidden="true">#</a> Virtual DOM\u7684\u4F18\u70B9</h3><p><strong>\u8DE8\u5E73\u53F0\u6027</strong></p><p>\u7531\u4E8E <code>Virtual DOM</code> \u662F\u4EE5 JavaScript \u5BF9\u8C61\u4E3A\u57FA\u7840\u800C\u4E0D\u4F9D\u8D56\u771F\u5B9E\u5E73\u53F0\u73AF\u5883\uFF0C\u6240\u4EE5\u4F7F\u5B83\u5177\u6709\u4E86\u8DE8\u5E73\u53F0\u7684\u80FD\u529B\uFF0C\u6BD4\u5982\u8BF4 <code>\u6D4F\u89C8\u5668\u5E73\u53F0</code>\u3001<code>Weex</code>\u3001<code>Node</code> \u7B49</p><p><strong>\u63D0\u5347\u6E32\u67D3\u6027\u80FD</strong></p><p>\u5BF9\u4E8E\u9AD8\u9891\u7684 DOM \u66F4\u65B0\uFF0C<code>Virtual DOM</code> \u53EF\u4EE5\u63D0\u9AD8\u6027\u80FD\uFF0C\u56E0\u4E3A\u76F4\u63A5\u64CD\u4F5C\u64CD\u4F5C DOM \u6162\uFF0CJS\u8FD0\u884C\u6548\u7387\u66F4\u9AD8\u3002</p><p>\u56E0\u4E3A DOM \u64CD\u4F5C\u7684\u6267\u884C\u901F\u5EA6\u8FDC\u4E0D\u5982 Javascript \u7684\u8FD0\u7B97\u901F\u5EA6\u5FEB\uFF0C\u56E0\u6B64\uFF0C\u628A\u5927\u91CF\u7684 DOM \u64CD\u4F5C\u642C\u8FD0\u5230 Javascript \u4E2D\uFF0C\u8FD0\u7528 <code>patching</code> \u7B97\u6CD5\u6765\u8BA1\u7B97\u51FA\u771F\u6B63\u9700\u8981\u66F4\u65B0\u7684\u8282\u70B9\uFF0C\u6700\u5927\u9650\u5EA6\u5730\u51CF\u5C11 DOM \u64CD\u4F5C\uFF0C\u4ECE\u800C\u663E\u8457\u63D0\u9AD8\u6027\u80FD\u3002</p><p><strong><code>Virtual DOM</code> \u7684\u4F18\u52BF\u4E0D\u5728\u4E8E\u5355\u6B21\u7684\u64CD\u4F5C\uFF0C\u800C\u662F\u5728\u5927\u91CF\u3001\u9891\u7E41\u7684\u6570\u636E\u66F4\u65B0\u4E0B\uFF0C\u80FD\u591F\u5BF9\u89C6\u56FE\u8FDB\u884C\u5408\u7406\u3001\u9AD8\u6548\u7684\u66F4\u65B0\u3002</strong></p><h2 id="diff-\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#diff-\u7B97\u6CD5" aria-hidden="true">#</a> diff \u7B97\u6CD5</h2><p>\u4E3A\u4EC0\u4E48\u9700\u8981 <code>diff</code> \u7B97\u6CD5\uFF0C \u56E0\u4E3A\u5982\u679C\u76F4\u63A5\u4F7F\u7528\u865A\u62DF\u8282\u70B9\u8986\u76D6\u65E7\u8282\u70B9\u7684\u8BDD\uFF0C\u4F1A\u6709\u5F88\u591A\u4E0D\u5FC5\u8981\u7684 DOM \u64CD\u4F5C\u3002\u4F8B\u5982\uFF0C\u4E00\u4E2A <code>ul</code> \u6807\u7B7E\u4E0B\u5F88\u591A\u4E2A <code>li</code> \u6807\u7B7E\uFF0C\u5176\u4E2D\u53EA\u6709\u4E00\u4E2A <code>li</code> \u6709\u53D8\u5316\uFF0C\u8FD9\u79CD\u60C5\u51B5\u4E0B\u5982\u679C\u4F7F\u7528\u65B0\u7684 <code>ul</code> \u53BB\u66FF\u4EE3\u65E7\u7684 <code>ul</code> ,\u56E0\u4E3A\u8FD9\u4E9B\u4E0D\u5FC5\u8981\u7684 DOM \u64CD\u4F5C\u800C\u9020\u6210\u4E86\u6027\u80FD\u4E0A\u7684\u6D6A\u8D39</p><p>\u4E3A\u4E86\u907F\u514D\u4E0D\u5FC5\u8981\u7684 DOM \u64CD\u4F5C\uFF0C\u865A\u62DFDOM \u5728\u865A\u62DF\u8282\u70B9\u6620\u5C04\u5230\u89C6\u56FE\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u5C06\u865A\u62DF\u8282\u70B9\u4E0E\u4E0A\u4E00\u6B21\u6E32\u67D3\u89C6\u56FE\u6240\u4F7F\u7528\u7684\u65E7\u865A\u62DF\u8282\u70B9\uFF08oldVnode\uFF09\u505A\u5BF9\u6BD4\uFF0C\u627E\u51FA\u771F\u6B63\u9700\u8981\u66F4\u65B0\u7684\u8282\u70B9\u6765\u8FDB\u884C DOM \u64CD\u4F5C\uFF0C\u4ECE\u800C\u907F\u514D\u64CD\u4F5C\u5176\u4ED6\u65E0\u9700\u6539\u52A8\u7684 DOM\u3002</p><p>\u4EC5\u5728\u540C\u7EA7\u7684 <code>vnode</code> \u95F4\u505A <code>diff</code> \uFF0C\u9012\u5F52\u5730\u8FDB\u884C\u540C\u7EA7 <code>vnode</code> \u7684 <code>diff</code> \uFF0C\u6700\u7EC8\u5B9E\u73B0\u6574\u4E2A DOM \u6811\u7684\u66F4\u65B0\u3002\u56E0\u4E3A\u8DE8\u5C42\u7EA7\u7684\u64CD\u4F5C\u662F\u975E\u5E38\u5C11\u7684\uFF0C\u5FFD\u7565\u4E0D\u8BA1\uFF0C\u8FD9\u6837\u65F6\u95F4\u590D\u6742\u5EA6\u5C31\u4ECE <code>O(n3)</code> \u53D8\u6210 <code>O(n)</code> \u3002</p><p><strong>\u603B\u4E4B\u4E00\u53E5\u8BDD\uFF1A\u4F7F\u7528 <code>diff</code> \u7B97\u6CD5\u5C31\u662F\u4E3A\u4E86\u907F\u514D\u4E0D\u5FC5\u8981\u7684 DOM \u64CD\u4F5C</strong></p><h3 id="diff-\u7B97\u6CD5\u7279\u70B9" tabindex="-1"><a class="header-anchor" href="#diff-\u7B97\u6CD5\u7279\u70B9" aria-hidden="true">#</a> diff \u7B97\u6CD5\u7279\u70B9</h3><p><code>diff</code> \u7B97\u6CD5\u6709\u4E24\u4E2A\u6BD4\u8F83\u663E\u8457\u7684\u7279\u70B9</p><ul><li><p>\u6BD4\u8F83\u53EA\u4F1A\u5728\u540C\u5C42\u7EA7\u8FDB\u884C, \u4E0D\u4F1A\u8DE8\u5C42\u7EA7\u6BD4\u8F83</p></li><li><p>\u5728 <code>diff</code> \u6BD4\u8F83\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u5FAA\u73AF\u4ECE\u4E24\u8FB9\u5411\u4E2D\u95F4\u6536\u62E2</p></li></ul><h3 id="diff-\u7B97\u6CD5\u8FC7\u7A0B" tabindex="-1"><a class="header-anchor" href="#diff-\u7B97\u6CD5\u8FC7\u7A0B" aria-hidden="true">#</a> diff \u7B97\u6CD5\u8FC7\u7A0B</h3><p><code>diff</code> \u7684\u5B9E\u73B0\u4E3B\u8981\u901A\u8FC7\u4E24\u4E2A\u65B9\u6CD5\uFF0C<code>patchVnode</code> \u4E0E <code>updateChildren</code></p><p><code>patchVnode</code> \u4E3B\u8981\u6709\u4E24\u4E2A\u53C2\u6570:\u65E7\u8282\u70B9 <code>oldVnode</code> \u548C\u65B0\u8282\u70B9 <code>vnode</code>\uFF0C\u5E76\u8FDB\u884C\u4EE5\u4E0B\u60C5\u51B5\u7684\u5904\u7406\uFF1A</p><ul><li><p><code>if (oldVnode === vnode)</code>\uFF0C\u4ED6\u4EEC\u7684\u5F15\u7528\u4E00\u81F4\uFF0C\u53EF\u4EE5\u8BA4\u4E3A\u6CA1\u6709\u53D8\u5316</p></li><li><p>\u5982\u679C <code>vnode</code> \u4E0D\u662F\u6587\u672C\u8282\u70B9</p><ul><li><p>\u5982\u679C\u65B0\u65E7\u8282\u70B9\u90FD\u5B58\u5728\u5B50\u8282\u70B9\uFF0C\u4E14\u4E24\u8005\u4E0D\u76F8\u540C\u65F6\uFF0C\u8C03\u7528 <code>updateChildren</code> \u66F4\u65B0\u5B50\u8282\u70B9</p></li><li><p>\u4E24\u8005\u4E0D\u540C\u4E14 <code>vnode</code> \u662F\u5426\u6709\u5B50\u8282\u70B9\uFF0C\u5219\u76F4\u63A5\u4F7F\u7528\u8FD9\u4E9B\u5B50\u8282\u70B9</p></li><li><p>\u4E24\u8005\u4E0D\u540C\u4E14 <code>vnode</code> \u4E0D\u5B58\u5728\u5B50\u8282\u70B9\u4E14 <code>oldVnode</code> \u5B58\u5728\u5B50\u8282\u70B9\uFF0C\u5219\u5220\u9664\u8FD9\u4E9B\u5B50\u8282\u70B9</p></li><li><p>\u90FD\u4E0D\u5B58\u5728\u5B50\u8282\u70B9\uFF0C\u4E14 <code>oldVnode</code> \u662F\u6587\u672C\u8282\u70B9\uFF0C\u5219\u76F4\u63A5\u6E05\u7A7A\u8FD9\u4E9B\u6587\u672C\u8282\u70B9</p></li></ul></li><li><p>\u5982\u679C <code>vnode</code> \u662F\u6587\u672C\u8282\u70B9\uFF0C\u5219\u76F4\u63A5\u66F4\u65B0\u6210\u8FD9\u4E2A\u6587\u672C\u8282\u70B9</p></li></ul><p>*<em><code>updateChildren</code> \u662F\u5173\u952E\uFF0C\u8FD9\u4E2A\u8FC7\u7A0B\u53EF\u4EE5\u6982\u62EC\u5982\u4E0B:</em></p><p><code>oldCh</code> \u548C <code>newCh</code> \u5404\u6709\u4E24\u4E2A\u5934\u5C3E\u7684\u53D8\u91CF <code>StartIdx</code> \u548C <code>EndIdx</code> \uFF0C\u5B83\u4EEC\u76842\u4E2A\u53D8\u91CF\u76F8\u4E92\u6BD4\u8F83\uFF0C\u4E00\u5171\u67094\u79CD\u6BD4\u8F83\u65B9\u5F0F</p><ul><li><p><code>oldCh</code>\u7684\u5934\u90E8\u4E0E<code>newCh</code>\u7684\u5934\u90E8\u6BD4\u8F83</p></li><li><p><code>oldCh</code>\u7684\u5C3E\u90E8\u4E0E<code>newCh</code>\u7684\u5C3E\u90E8\u6BD4\u8F83</p></li><li><p><code>oldCh</code>\u7684\u5934\u90E8\u4E0E<code>newCh</code>\u7684\u5C3E\u90E8\u6BD4\u8F83</p></li><li><p><code>oldCh</code>\u7684\u5C3E\u90E8\u4E0E<code>newCh</code>\u7684\u5934\u90E8\u6BD4\u8F83</p></li></ul><p>\u5982\u679C 4 \u79CD\u6BD4\u8F83\u90FD\u6CA1\u5339\u914D\uFF0C\u5982\u679C\u8BBE\u7F6E\u4E86<code>key</code>\uFF0C\u5C31\u4F1A\u7528<code>key</code>\u8FDB\u884C\u6BD4\u8F83\uFF0C\u5728\u6BD4\u8F83\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u53D8\u91CF\u4F1A\u5F80\u4E2D\u95F4\u9760\uFF0C\u4E00\u65E6 <code>StartIdx &gt; EndIdx</code> \u8868\u660E <code>oldCh</code> \u548C <code>newCh</code> \u81F3\u5C11\u6709\u4E00\u4E2A\u5DF2\u7ECF\u904D\u5386\u5B8C\u4E86\uFF0C\u5C31\u4F1A\u7ED3\u675F\u6BD4\u8F83\u3002</p><h2 id="\u6E90\u7801\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u5206\u6790" aria-hidden="true">#</a> \u6E90\u7801\u5206\u6790</h2><p>\u5F53 Vue \u6570\u636E\u53D1\u751F\u53D8\u5316\u7684\u65F6\u5019\uFF0C\u4F1A\u89E6\u53D1\u6E32\u67D3 <code>watcher</code> \u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u7136\u540E\u6267\u884C\u7EC4\u4EF6\u7684\u66F4\u65B0\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function-variable function">updateComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  vm<span class="token punctuation">.</span><span class="token function">_update</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span><span class="token function">_render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> hydrating<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> updateComponent<span class="token punctuation">,</span> noop<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">before</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_isMounted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">callHook</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> <span class="token string">&#39;beforeUpdate&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token comment">/* isRenderWatcher */</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EC4\u4EF6\u7684\u66F4\u65B0\u8FD8\u662F\u8C03\u7528\u4E86 <code>vm._update</code> \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">_update</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vnode</span><span class="token operator">:</span> VNode<span class="token punctuation">,</span> hydrating<span class="token operator">?</span><span class="token operator">:</span> boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token literal-property property">vm</span><span class="token operator">:</span> Component <span class="token operator">=</span> <span class="token keyword">this</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">const</span> prevVnode <span class="token operator">=</span> vm<span class="token punctuation">.</span>_vnode
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>prevVnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// initial render</span>
    vm<span class="token punctuation">.</span>$el <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">__patch__</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$el<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> hydrating<span class="token punctuation">,</span> <span class="token boolean">false</span> <span class="token comment">/* removeOnly */</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// updates</span>
    vm<span class="token punctuation">.</span>$el <span class="token operator">=</span> vm<span class="token punctuation">.</span><span class="token function">__patch__</span><span class="token punctuation">(</span>prevVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>vm._update</code> \u65B9\u6CD5\u4E2D\u4F1A\u8C03\u7528 <code>__patch__</code> \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">patch</span> <span class="token punctuation">(</span><span class="token parameter">oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> hydrating<span class="token punctuation">,</span> removeOnly</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u65B0\u8282\u70B9\u4E3A\u7A7A</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u5B58\u5728\u65E7 oldVnode \u8C03\u7528\u65E7\u8282\u70B9\u7684 invokeDestroyHook \u751F\u547D\u5468\u671F</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">invokeDestroyHook</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> isInitialPatch <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> insertedVnodeQueue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token comment">// \u5982\u679C\u6CA1\u6709\u65E7\u8282\u70B9\uFF0C\u8D70\u7684\u903B\u8F91</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521B\u5EFA\u65B0\u7684\u6839\u5143\u7D20</span>
    isInitialPatch <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token function">createElm</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5224\u65AD oldVnode \u662F\u5426\u662F\u771F\u5B9E\u8282\u70B9\uFF0C\u6BD4\u5982\u6302\u8F7DDOM\u7684\u65F6\u5019\uFF0C\u65E7\u8282\u70B9\u662F \u8BBE\u7F6E\u7684\u6839\u8282\u70B9\uFF0C\u90A3\u4E48\u6B64\u65F6 isRealElement=true</span>
    <span class="token keyword">var</span> isRealElement <span class="token operator">=</span> <span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>nodeType<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4E0D\u662F\u771F\u5B9E\u8282\u70B9\u4E14\u65B0\u65E7\u8282\u70B9\u76F8\u540C\uFF0C\u76F8\u540C\u7684\u65F6\u5019\u624D\u6267\u884C patchVnode \u53BB diff \u4E24\u8005\u7684\u533A\u522B</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isRealElement <span class="token operator">&amp;&amp;</span> <span class="token function">sameVnode</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8FDB\u5165 diff</span>
      <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> removeOnly<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// vnode \u662F\u771F\u5B9E\u8282\u70B9</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isRealElement<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u670D\u52A1\u7AEF\u6E32\u67D3\u8D70\u7684\u903B\u8F91</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>nodeType <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> oldVnode<span class="token punctuation">.</span><span class="token function">hasAttribute</span><span class="token punctuation">(</span><span class="token constant">SSR_ATTR</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          oldVnode<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token constant">SSR_ATTR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          hydrating <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>hydrating<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hydrate</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">invokeInsertHook</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> oldVnode
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">warn</span><span class="token punctuation">(</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// either not server-rendered, or hydration failed.</span>
        <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u7A7A\u8282\u70B9\u5E76\u66FF\u6362\u5B83</span>
        oldVnode <span class="token operator">=</span> <span class="token function">emptyNodeAt</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// \u83B7\u53D6oldVnode\u7684dom</span>
      <span class="token keyword">var</span> oldElm <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>elm<span class="token punctuation">;</span>
      <span class="token keyword">var</span> parentElm <span class="token operator">=</span> nodeOps<span class="token punctuation">.</span><span class="token function">parentNode</span><span class="token punctuation">(</span>oldElm<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// create new node</span>
      <span class="token function">createElm</span><span class="token punctuation">(</span>
        vnode<span class="token punctuation">,</span>
        insertedVnodeQueue<span class="token punctuation">,</span>
        oldElm<span class="token punctuation">.</span>_leaveCb <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> parentElm<span class="token punctuation">,</span>
        nodeOps<span class="token punctuation">.</span><span class="token function">nextSibling</span><span class="token punctuation">(</span>oldElm<span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// update parent placeholder node element, recursively</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>parent<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> ancestor <span class="token operator">=</span> vnode<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
        <span class="token keyword">var</span> patchable <span class="token operator">=</span> <span class="token function">isPatchable</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>ancestor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cbs<span class="token punctuation">.</span>destroy<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            cbs<span class="token punctuation">.</span>destroy<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>ancestor<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          ancestor<span class="token punctuation">.</span>elm <span class="token operator">=</span> vnode<span class="token punctuation">.</span>elm<span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>patchable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i$1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i$1 <span class="token operator">&lt;</span> cbs<span class="token punctuation">.</span>create<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i$1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              cbs<span class="token punctuation">.</span>create<span class="token punctuation">[</span>i$1<span class="token punctuation">]</span><span class="token punctuation">(</span>emptyNode<span class="token punctuation">,</span> ancestor<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">var</span> insert <span class="token operator">=</span> ancestor<span class="token punctuation">.</span>data<span class="token punctuation">.</span>hook<span class="token punctuation">.</span>insert<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>insert<span class="token punctuation">.</span>merged<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token comment">// start at index 1 to avoid re-invoking hllComponent mounted hook</span>
              <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i$2 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i$2 <span class="token operator">&lt;</span> insert<span class="token punctuation">.</span>fns<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i$2<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                insert<span class="token punctuation">.</span>fns<span class="token punctuation">[</span>i$2<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">registerRef</span><span class="token punctuation">(</span>ancestor<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          ancestor <span class="token operator">=</span> ancestor<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// destroy old node</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">removeVnodes</span><span class="token punctuation">(</span><span class="token punctuation">[</span>oldVnode<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>tag<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">invokeDestroyHook</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">invokeInsertHook</span><span class="token punctuation">(</span>vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> isInitialPatch<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> vnode<span class="token punctuation">.</span>elm
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u5148\u4E0D\u7EC6\u54C1\u4E86\uFF0C\u5927\u81F3\u8FC7\u7A0B\u5982\u4E0B\uFF1A</p><ul><li><p>\u5982\u679C\u65B0\u8282\u70B9\u4E3A\u7A7A\uFF0C\u6B64\u65F6\u65E7\u8282\u70B9\u5B58\u5728\uFF08\u7EC4\u4EF6\u9500\u6BC1\u65F6\uFF09\uFF0C\u8C03\u7528\u65E7\u8282\u70B9 <code>destroy</code> \u751F\u547D\u5468\u671F\u51FD\u6570</p></li><li><p>\u5982\u679C\u65E7\u8282\u70B9\u4E3A\u7A7A\uFF0C\u6839\u636E\u65B0\u8282\u70B9\u521B\u5EFA DOM</p></li><li><p>\u5982\u679C\u65B0\u65E7\u8282\u70B9\u90FD\u5B58\u5728</p><ul><li><p>\u65E7\u8282\u70B9\u4E0D\u662F DOM (\u7EC4\u4EF6\u8282\u70B9)\uFF0C\u4E14\u65B0\u65E7\u8282\u70B9\u76F8\u540C, \u6267\u884C <code>patchVnode</code>\uFF08<code>diff</code> \u7684\u6838\u5FC3\uFF09</p></li><li><p>\u65E7\u8282\u70B9\u662F DOM \u5143\u7D20\u6216\u8005\u4E24\u4E2A\u8282\u70B9\u4E0D\u76F8\u540C, \u521B\u5EFA\u65B0\u8282\u70B9 DOM\uFF0C\u9500\u6BC1\u65E7\u8282\u70B9\u4EE5\u53CA DOM\u3002</p></li></ul></li></ul><p><code>patch</code> \u6700\u540E\u4F1A\u8FD4\u56DE <code>vnode</code>\uFF0C<code>vnode</code> \u548C\u8FDB\u5165 <code>patch</code> \u4E4B\u524D\u7684\u4E0D\u540C\u5728\u54EA\uFF1F</p><p>\u6CA1\u9519\uFF0C\u5C31\u662F<code>vnode.elm</code>\uFF0C\u552F\u4E00\u7684\u6539\u53D8\u5C31\u662F\u4E4B\u524D <code>vnode.el = null</code> , \u800C\u73B0\u5728\u5B83\u5F15\u7528\u7684\u662F\u5BF9\u5E94\u7684\u771F\u5B9Edom\u3002</p><h3 id="samevnode" tabindex="-1"><a class="header-anchor" href="#samevnode" aria-hidden="true">#</a> sameVnode</h3><p>\u5224\u65AD\u65B0\u65E7 VNode \u662F\u5426\u76F8\u540C\u662F\u901A\u8FC7 <code>sameVnode</code> \u65B9\u6CD5\u8FDB\u884C\u5224\u65AD\u7684\uFF0C\u6E90\u7801\u5B9A\u4E49:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">function</span> <span class="token function">sameVnode</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      a<span class="token punctuation">.</span>key <span class="token operator">===</span> b<span class="token punctuation">.</span>key <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>
        <span class="token punctuation">(</span>
          a<span class="token punctuation">.</span>tag <span class="token operator">===</span> b<span class="token punctuation">.</span>tag <span class="token operator">&amp;&amp;</span>
          a<span class="token punctuation">.</span>isComment <span class="token operator">===</span> b<span class="token punctuation">.</span>isComment <span class="token operator">&amp;&amp;</span>
          <span class="token function">isDef</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">isDef</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
          <span class="token function">sameInputType</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>
          <span class="token function">isTrue</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>isAsyncPlaceholder<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
          a<span class="token punctuation">.</span>asyncFactory <span class="token operator">===</span> b<span class="token punctuation">.</span>asyncFactory <span class="token operator">&amp;&amp;</span>
          <span class="token function">isUndef</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>asyncFactory<span class="token punctuation">.</span>error<span class="token punctuation">)</span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679C\u662F input \u5224\u65AD\u662F\u5426\u662F\u76F8\u540C\u7684 input \u5148\u4E0D\u7EC6\u54C1\u8FD9\u4E2A</span>
  <span class="token keyword">function</span> <span class="token function">sameInputType</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>tag <span class="token operator">!==</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
    <span class="token keyword">var</span> i<span class="token punctuation">;</span>
    <span class="token keyword">var</span> typeA <span class="token operator">=</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> a<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>attrs<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> i<span class="token punctuation">.</span>type<span class="token punctuation">;</span>
    <span class="token keyword">var</span> typeB <span class="token operator">=</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> b<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>attrs<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> i<span class="token punctuation">.</span>type<span class="token punctuation">;</span>
    <span class="token keyword">return</span> typeA <span class="token operator">===</span> typeB <span class="token operator">||</span> <span class="token function">isTextInputType</span><span class="token punctuation">(</span>typeA<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isTextInputType</span><span class="token punctuation">(</span>typeB<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u4EE3\u7801\u53EF\u4EE5\u770B\u5230\u5224\u65AD\u65B0\u65E7\u76F8\u540C\u7684\u89C4\u5219\u4E3A\uFF1A</p><ol><li><p>\u9996\u5148\u5224\u65AD <code>key</code> \u662F\u5426\u76F8\u540C\uFF0C\u5982\u679C\u90FD\u6CA1\u6709 <code>key</code> \uFF08\u90FD\u662F <code>undefined</code>\uFF09\uFF0C\u83B7\u53D6\u6709\u76F8\u540C\u7684 <code>key</code>\uFF0C\u5219\u7EE7\u7EED\u5F80\u4E0B\u5224\u65AD</p></li><li><p>\u5224\u65AD <code>tag</code>\u3001<code>isComment</code>\u3001<code>data</code>(\u662F\u5426\u90FD\u5B58\u5728)\u662F\u5426\u76F8\u540C\uFF0C\u5982\u679C\u662F <code>input</code> \u5143\u7D20\u5219\u8FD8\u5BF9\u901A\u8FC7 <code>sameInputType</code>, \u5224\u65AD\u662F\u5426\u662F\u76F8\u540C\u7684\u8868\u5355</p></li></ol><h3 id="patchvnode" tabindex="-1"><a class="header-anchor" href="#patchvnode" aria-hidden="true">#</a> patchVnode</h3><p>\u5982\u679C\u901A\u8FC7 <code>sameVnode()</code> \u65B9\u6CD5\u5224\u65AD\u5230\u65B0\u65E7 <code>vnode</code> \u662F\u76F8\u540C\u7684\u5219\u8FDB\u5165 <code>patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">patchVnode</span> <span class="token punctuation">(</span>
  <span class="token parameter">oldVnode<span class="token punctuation">,</span>
  vnode<span class="token punctuation">,</span>
  insertedVnodeQueue<span class="token punctuation">,</span>
  ownerArray<span class="token punctuation">,</span>
  index<span class="token punctuation">,</span>
  removeOnly</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u65B0\u65E7\u8282\u70B9\u76F8\u540C</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVnode <span class="token operator">===</span> vnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679Celm\u5B58\u5728\uFF0C\u4E14\u5B58\u5728\u5B50\u8282\u70B9</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>ownerArray<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u514B\u9686\u4E00\u4E2Avnode\u8282\u70B9\u3002</span>
    vnode <span class="token operator">=</span> ownerArray<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">cloneVNode</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// elm \u5C5E\u6027\u6307\u5411 vnode \u5BF9\u5E94\u7684 dom \u8282\u70B9\uFF0C\u8FD9\u91CC\u7684\u65B0vnode\u7684elm\u4E5F\u6307\u5411\u8FD9\u65E7vnode\u7684dem \u8282\u70B9</span>
  <span class="token keyword">var</span> elm <span class="token operator">=</span> vnode<span class="token punctuation">.</span>elm <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>elm<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>isAsyncPlaceholder<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>asyncFactory<span class="token punctuation">.</span>resolved<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">hydrate</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> vnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      vnode<span class="token punctuation">.</span>isAsyncPlaceholder <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// reuse element for static trees.</span>
  <span class="token comment">// note we only do this if the vnode is cloned -</span>
  <span class="token comment">// if the new node is not cloned it means the render functions have been</span>
  <span class="token comment">// reset by the hot-reload-api and we need to do a proper re-render.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>isStatic<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    <span class="token function">isTrue</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>isStatic<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    vnode<span class="token punctuation">.</span>key <span class="token operator">===</span> oldVnode<span class="token punctuation">.</span>key <span class="token operator">&amp;&amp;</span>
    <span class="token punctuation">(</span><span class="token function">isTrue</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>isCloned<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isTrue</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>isOnce<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    vnode<span class="token punctuation">.</span>componentInstance <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>componentInstance<span class="token punctuation">;</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> i<span class="token punctuation">;</span>
  <span class="token keyword">var</span> data <span class="token operator">=</span> vnode<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> data<span class="token punctuation">.</span>hook<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>prepatch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">i</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u83B7\u53D6\u65E7\u8282\u70B9\u7684\u5B50\u8282\u70B9</span>
  <span class="token keyword">var</span> oldCh <span class="token operator">=</span> oldVnode<span class="token punctuation">.</span>children<span class="token punctuation">;</span>
   <span class="token comment">// \u83B7\u53D6\u65B0\u8282\u70B9\u7684\u5B50\u8282\u70B9</span>
  <span class="token keyword">var</span> ch <span class="token operator">=</span> vnode<span class="token punctuation">.</span>children<span class="token punctuation">;</span>
  <span class="token comment">// \u7D27\u63A5\u7740\u5C31\u662F\u8C03\u7528\u5404\u79CD\u66F4\u65B0\u51FD\u6570\u3002</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isPatchable</span><span class="token punctuation">(</span>vnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cbs<span class="token punctuation">.</span>update<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span> cbs<span class="token punctuation">.</span>update<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> data<span class="token punctuation">.</span>hook<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>update<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">i</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679C\u6CA1\u6709\u6587\u672C\u8282\u70B9</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>vnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// \u5982\u679C\u65B0\u65E7\u8282\u70B9\u90FD\u5B58\u5728\u5B50\u8282\u70B9\uFF0C\u4E14\u4E24\u8005\u4E0D\u76F8\u540C\u65F6\uFF0C\u8C03\u7528 updateChildren \u66F4\u65B0\u5B50\u8282\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>oldCh <span class="token operator">!==</span> ch<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">updateChildren</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> oldCh<span class="token punctuation">,</span> ch<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> removeOnly<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token punctuation">{</span>
       <span class="token comment">// \u68C0\u67E5\u662F\u5426\u6709\u91CD\u590D\u7684key\uFF0C\u5982\u679C\u5B58\u5728\u91CD\u590D\u4F1A\u63D0\u793A\u2019warn\u2018</span>
        <span class="token function">checkDuplicateKeys</span><span class="token punctuation">(</span>ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u65B0\u7684vnode\u5B58\u5728\u5B50\u96C6\u7684\u60C5\u51B5\u4E0B\u5982\u679C\u65E7\u8282\u70B9\u5B58\u5728\u6587\u672C\u8282\u70B9\uFF0C\u90A3\u5C31\u628A\u2019Text\u2018\u6E05\u7A7A\u3002</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> nodeOps<span class="token punctuation">.</span><span class="token function">setTextContent</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
      <span class="token comment">// \u6DFB\u52A0\u65B0\u7684\u8282\u70B9</span>
      <span class="token function">addVnodes</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> ch<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> ch<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u65B0\u8282\u70B9\u4E0D\u5B58\u5728\u5B50\u8282\u70B9\u7684\u60C5\u51B5\u4E0B\uFF0C\u65E7\u8282\u70B9\u4E4B\u524D\u662F\u6709\u5B50\u8282\u70B9\u7684</span>
     <span class="token comment">// \u79FB\u9664\u5B50\u8282\u70B9</span>
      <span class="token function">removeVnodes</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> oldCh<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u65B0\u8282\u70B9\u4E0D\u5B58\u5728\u5B50\u8282\u70B9\u7684\u60C5\u51B5\u4E0B\uFF0C\u5982\u679C\u65E7\u8282\u70B9\u5B58\u5728\u6587\u672C\u8282\u70B9\uFF0C\u6E05\u9664\u6587\u672C\u8282\u70B9</span>
      nodeOps<span class="token punctuation">.</span><span class="token function">setTextContent</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>oldVnode<span class="token punctuation">.</span>text <span class="token operator">!==</span> vnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u65B0\u8282\u5360\u662F\u6587\u672C\u8282\u70B9\uFF0C\u66F4\u65B0\u6587\u672C\u8282\u70B9</span>
    nodeOps<span class="token punctuation">.</span><span class="token function">setTextContent</span><span class="token punctuation">(</span>elm<span class="token punctuation">,</span> vnode<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> data<span class="token punctuation">.</span>hook<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isDef</span><span class="token punctuation">(</span>i <span class="token operator">=</span> i<span class="token punctuation">.</span>postpatch<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">i</span><span class="token punctuation">(</span>oldVnode<span class="token punctuation">,</span> vnode<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5927\u81F4\u8FC7\u7A0B\uFF1A</p><p><code>const el = vnode.el = oldVnode.el</code> \u8FD9\u662F\u5F88\u91CD\u8981\u7684\u4E00\u6B65\uFF0C\u8BA9<code>vnode.el</code>\u5F15\u7528\u5230\u73B0\u5728\u7684\u771F\u5B9E<code>dom</code>\uFF0C\u5F53<code>el</code>\u4FEE\u6539\u65F6\uFF0C<code>vnode.el</code>\u4F1A\u540C\u6B65\u53D8\u5316\u3002</p><p>\u8282\u70B9\u7684\u6BD4\u8F83\u67095\u79CD\u60C5\u51B5</p><ul><li><p><code>if (oldVnode === vnode)</code>\uFF0C\u4ED6\u4EEC\u7684\u5F15\u7528\u4E00\u81F4\uFF0C\u53EF\u4EE5\u8BA4\u4E3A\u6CA1\u6709\u53D8\u5316</p></li><li><p><code>if(oldVnode.text !== null &amp;&amp; vnode.text !== null &amp;&amp; oldVnode.text !== vnode.text)</code>\uFF0C\u6587\u672C\u8282\u70B9\u7684\u6BD4\u8F83\uFF0C\u9700\u8981\u4FEE\u6539\uFF0C \u5219\u4F1A\u8C03\u7528<code>Node.textContent = vnode.text</code></p></li><li><p><code>if( oldCh &amp;&amp; ch &amp;&amp; oldCh !== ch )</code>, \u4E24\u4E2A\u8282\u70B9\u90FD\u6709\u5B50\u8282\u70B9\uFF0C\u800C\u4E14\u5B83\u4EEC\u4E0D\u4E00\u6837\uFF0C\u8FD9\u6837\u6211\u4EEC\u4F1A\u8C03\u7528<code>updateChildren</code>\u51FD\u6570\u6BD4\u8F83\u5B50\u8282\u70B9\uFF0C\u8FD9\u662F<code>diff</code>\u7684\u6838\u5FC3\uFF0C\u540E\u8FB9\u4F1A\u8BB2\u5230</p></li><li><p><code>else if (ch)</code>\uFF0C\u53EA\u6709\u65B0\u7684\u8282\u70B9\u6709\u5B50\u8282\u70B9\uFF0C\u8C03\u7528<code>createEle(vnode)</code>\uFF0C<code>vnode.el</code>\u5DF2\u7ECF\u5F15\u7528\u4E86\u8001\u7684<code>dom</code>\u8282\u70B9\uFF0C<code>createEle</code>\u51FD\u6570\u4F1A\u5728\u8001dom\u8282\u70B9\u4E0A\u6DFB\u52A0\u5B50\u8282\u70B9</p></li><li><p><code>else if (oldCh)</code>\uFF0C\u65B0\u8282\u70B9\u6CA1\u6709\u5B50\u8282\u70B9\uFF0C\u8001\u8282\u70B9\u6709\u5B50\u8282\u70B9\uFF0C\u76F4\u63A5\u5220\u9664\u8001\u8282\u70B9</p></li></ul><h3 id="updatechildren" tabindex="-1"><a class="header-anchor" href="#updatechildren" aria-hidden="true">#</a> updateChildren</h3><p>\u90FD\u65B0\u65E7 vnode \u90FD\u6709\u5B50\u8282\u70B9\u4E14\u4E0D\u76F8\u540C\u65F6\uFF0C\u5219\u4F1A\u6267\u884C <code>updateChildren</code> \u5BF9\u5B50\u5143\u7D20\u8FDB\u884C <code>diff</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">updateChildren</span> <span class="token punctuation">(</span><span class="token parameter">parentElm<span class="token punctuation">,</span> oldCh<span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> removeOnly</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> oldStartIdx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u8BB0\u5F55\u65E7\u8282\u70B9\u7684\u5F00\u59CB\u6807\u8BB0\u4F4D</span>
  <span class="token keyword">var</span> newStartIdx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u8BB0\u5F55\u65B0\u8282\u70B9\u7684\u5F00\u59CB\u6807\u8BB0\u4F4D</span>
  <span class="token keyword">var</span> oldEndIdx <span class="token operator">=</span> oldCh<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u8BB0\u5F55\u65E7\u8282\u70B9\u7684\u672B\u5C3E\u6807\u8BB0\u4F4D</span>
  <span class="token keyword">var</span> oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u8BB0\u5F55\u65E7\u8282\u70B9\u5F00\u59CB\u5B50\u8282\u70B9</span>
  <span class="token keyword">var</span> oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span>oldEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// \u8BB0\u5F55\u65E7\u8282\u70B9\u7684\u672B\u5C3E\u5B50\u8282\u70B9</span>
  <span class="token keyword">var</span> newEndIdx <span class="token operator">=</span> newCh<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">// \u8BB0\u5F55\u65B0\u8282\u70B9\u7684\u672B\u5C3E\u6807\u8BB0\u4F4D</span>
  <span class="token keyword">var</span> newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u8BB0\u5F55\u65B0\u8282\u70B9\u5F00\u59CB\u5B50\u8282\u70B9</span>
  <span class="token keyword">var</span> newEndVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span>newEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u8BB0\u5F55\u65B0\u8282\u70B9\u7684\u672B\u5C3E\u5B50\u8282\u70B9</span>
  <span class="token keyword">var</span> oldKeyToIdx<span class="token punctuation">,</span> idxInOld<span class="token punctuation">,</span> vnodeToMove<span class="token punctuation">,</span> refElm<span class="token punctuation">;</span>

  <span class="token comment">// removeOnly is a special flag used only by &lt;transition-group&gt;</span>
  <span class="token comment">// to ensure removed elements stay in correct relative positions</span>
  <span class="token comment">// during leaving transitions</span>
  <span class="token keyword">var</span> canMove <span class="token operator">=</span> <span class="token operator">!</span>removeOnly<span class="token punctuation">;</span>

  <span class="token punctuation">{</span>
    <span class="token function">checkDuplicateKeys</span><span class="token punctuation">(</span>newCh<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u65B0\u65E7\u8282\u70B9\u7684\u6807\u8BB0\u4ECE\u4E24\u4FA7\u5F80\u4E2D\u95F4\u9760\u62E2\uFF0C\u76F4\u5230\u6709\u4E00\u65B9\u5230\u8FBE\u4E2D\u95F4\u7ED3\u675F</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>oldStartIdx <span class="token operator">&lt;=</span> oldEndIdx <span class="token operator">&amp;&amp;</span> newStartIdx <span class="token operator">&lt;=</span> newEndIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u5982\u679C\u6CA1 oldStartVnode \u5219\u53D6\u4E0B\u4E00\u4E2A vnode</span>
      oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Vnode has been moved left</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u5982\u679C\u6CA1 oldEndVnode \u5219\u5012\u7740\u53D6\u524D\u4E00\u4E2A vnode</span>
      oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u5982\u679C\u5F53\u524D\u4E24\u4E2A\u65B0\u65E7\u5B50\u8282\u70B9\u7684\u9996\u90E8\u8282\u70B9\u90FD\u76F8\u540C</span>
    <span class="token comment">// \u7EE7\u7EED\u8C03\u7528 patchVnode \u8FDB\u884C diff \u5224\u65AD</span>
      <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> newStartIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// oldStartIdx newStartIdx \u5F80\u53F3\u79FB\u4E00\u4F4D</span>
      oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
      newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u5F53\u524D\u4E24\u4E2A\u65B0\u65E7\u5B50\u8282\u70B9\u7684\u5C3E\u90E8\u8282\u70B9\u90FD\u76F8\u540C</span>
    <span class="token comment">// \u662F\u7EE7\u7EED\u8C03\u7528 patchVnode \u8FDB\u884C diff \u5224\u65AD</span>
      <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> newEndIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// oldEndVnode newEndVnode \u5F80\u5DE6\u79FB\u4E00\u4F4D</span>
      oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
      newEndVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">--</span>newEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u5F53\u524D\u65E7\u8282\u70B9\u7684\u9996\u90E8\u4E0E\u65B0\u8282\u70B9\u7684\u5C3E\u90E8\u76F8\u540C</span>
    <span class="token comment">// \u662F\u7EE7\u7EED\u8C03\u7528 patchVnode \u8FDB\u884C diff \u5224\u65AD</span>
      <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> newEndIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u8BF4\u660E\u53EA\u662FoldStartVnode\u8282\u70B9\u7684\u4F4D\u7F6E\u53D1\u751F\u4E86\u53D8\u5316\uFF0C\u5C06oldStartVnode\u8282\u70B9\u63D2\u5165\u5230oldEndVnode\u540E\u4E00\u4E2A\u8282\u70B9\u4E4B\u524D</span>
      canMove <span class="token operator">&amp;&amp;</span> nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> nodeOps<span class="token punctuation">.</span><span class="token function">nextSibling</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// oldStartIdx \u5411\u53F3\u79FB\u4E00\u4F4D   newEndIdx \u5411\u5DE6\u79FB\u4E00\u4F4D</span>
      oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
      newEndVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">--</span>newEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// Vnode moved left</span>
     <span class="token comment">// \u5982\u679C\u5F53\u524D\u65E7\u8282\u70B9\u7684\u5C3E\u90E8\u4E0E\u65B0\u8282\u70B9\u7684\u9996\u90E8\u90FD\u76F8\u540C\uFF0C\u662F\u7EE7\u7EED\u8C03\u7528 patchVnode \u8FDB\u884C diff \u5224\u65AD</span>
      <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> newStartIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token comment">// \u8BF4\u660E\u53EA\u662FoldEndVnode\u8282\u70B9\u7684\u4F4D\u7F6E\u53D1\u751F\u4E86\u53D8\u5316\uFF0C\u5C06oldEndVnode\u63D2\u5165\u5230oldStartVnode\u524D</span>
      canMove <span class="token operator">&amp;&amp;</span> nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> oldEndVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// newStartVnode \u5411\u53F3\u79FB\u4E00\u4F4D   oldEndVnode \u5411\u5DE6\u79FB\u4E00\u4F4D</span>
      oldEndVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">--</span>oldEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
      newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// oldKeyToIdx \u8868\u793A\u5F53\u524D\u5217\u8868\u7684 [key] map [\u5143\u7D20] \u7684\u6620\u5C04\uFF0C\u5982\u679C\u6CA1\u6709\u5219\u6267\u884C createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx) \u904D\u5386\u4E00\u6B21\u5217\u8868\u751F\u6210 oldKeyToIdx</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>oldKeyToIdx<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> oldKeyToIdx <span class="token operator">=</span> <span class="token function">createKeyToOldIdx</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">,</span> oldStartIdx<span class="token punctuation">,</span> oldEndIdx<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
      <span class="token comment">// \u5982\u679C\u5F53\u524D\u5B58\u5728 key \u5219\u4ECEoldKeyToIdx \u627E\u51FA\u65E7\u8282\u70B9\u5BF9\u5E94\u7684key\u7684\u5143\u7D20\u7684\u7D22\u5F15\u503C</span>
      idxInOld <span class="token operator">=</span> <span class="token function">isDef</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">.</span>key<span class="token punctuation">)</span>
        <span class="token operator">?</span> oldKeyToIdx<span class="token punctuation">[</span>newStartVnode<span class="token punctuation">.</span>key<span class="token punctuation">]</span>
        <span class="token operator">:</span> <span class="token function">findIdxInOld</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">,</span> oldCh<span class="token punctuation">,</span> oldStartIdx<span class="token punctuation">,</span> oldEndIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>idxInOld<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u4F7F\u7528key \u5339\u914D\u4E0D\u5230\u5BF9\u5E94\u7684\u5143\u7D20\u65F6</span>
        <span class="token comment">// \u5982\u679C\u6709\u65B0\u589E\u7684\u8282\u70B9\uFF0C\u5219\u4F1A\u6267\u884C\u8FD9\u91CC\u8FDB\u884Cdom\u5143\u7D20\u6DFB\u52A0</span>
        <span class="token comment">// \u5982\u679C\u5220\u9664\u8282\u70B9\uFF0C\u5219\u4F1A\u6267\u884C\u8FD9\u91CC\u5728\u8981\u5F00\u59CB\u5220\u9664\u7684\u5143\u7D20\u524D\u9762\u6DFB\u52A0\u6CE8\u91CA\u8282\u70B9</span>
        <span class="token function">createElm</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> parentElm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> newStartIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        vnodeToMove <span class="token operator">=</span> oldCh<span class="token punctuation">[</span>idxInOld<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u627E\u51FA\u5BF9\u5E94key\u7684\u65E7\u5143\u7D20</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>vnodeToMove<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u4E24\u4E2A\u5143\u7D20\u76F8\u7B49</span>
        <span class="token comment">// diff \u5B50\u8282\u70B9</span>
          <span class="token function">patchVnode</span><span class="token punctuation">(</span>vnodeToMove<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> newStartIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
          oldCh<span class="token punctuation">[</span>idxInOld<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
          <span class="token comment">// \u66F4\u65B0\u4F4D\u7F6E </span>
          canMove <span class="token operator">&amp;&amp;</span> nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> vnodeToMove<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u540C\u6837\u7684key\u4F46\u4E0D\u540C\u7684\u5143\u7D20\u3002\u4F5C\u4E3A\u65B0\u5143\u7D20\u5904\u7406</span>
          <span class="token function">createElm</span><span class="token punctuation">(</span>newStartVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> parentElm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> newStartIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>oldStartIdx <span class="token operator">&gt;</span> oldEndIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    refElm <span class="token operator">=</span> <span class="token function">isUndef</span><span class="token punctuation">(</span>newCh<span class="token punctuation">[</span>newEndIdx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> newCh<span class="token punctuation">[</span>newEndIdx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>elm<span class="token punctuation">;</span>
    <span class="token function">addVnodes</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> refElm<span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> newStartIdx<span class="token punctuation">,</span> newEndIdx<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>newStartIdx <span class="token operator">&gt;</span> newEndIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u662F\u5220\u9664\u8282\u70B9\u5219\u5728\u8FD9\u91CC\u8FDB\u884C\u771F\u6B63\u7684\u8282\u70B9\u5220\u9664</span>
    <span class="token function">removeVnodes</span><span class="token punctuation">(</span>oldCh<span class="token punctuation">,</span> oldStartIdx<span class="token punctuation">,</span> oldEndIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6817\u5B50" tabindex="-1"><a class="header-anchor" href="#\u6817\u5B50" aria-hidden="true">#</a> \u6817\u5B50</h3><p>\u5047\u8BBE\u73B0\u6709\u65E7\u8282\u70B9 A\u3001B\u3001C\u3001D\u3001E\u3001F\uFF0C\u65B0\u8282\u70B9 A\u3001E\u3001C\u3001D\u3001B\u3001F</p><p>\u65B0\u65E7\u8282\u70B9\u7684\u53D8\u5316\u5C31\u662F\u5C06 B \u4E0E E \u66F4\u6362\u4E86\u4F4D\u7F6E</p><p>(\u2192): \u8868\u793A <code>startIdx</code> \u6240\u5728\u4F4D\u7F6E (\u2190): \u8868\u793A <code>endIdx</code> \u6240\u5728\u4F4D\u7F6E</p><p>VNode \u65E7: (\u2192)A\u3001B\u3001C\u3001D\u3001E\u3001(\u2190)F \u65B0: (\u2192)A\u3001E\u3001C\u3001D\u3001B\u3001(\u2190)F</p><p>\u5BF9\u5E94DOM : A\u3001B\u3001C\u3001D\u3001E\u3001F</p><p>\u7B2C\u4E00\u8F6E\u5224\u65AD</p><ul><li><code>if(sameVnode(oldStartVnode, newStartVnode))</code> \u4E3A <code>true</code>,\u6240\u4EE5\u79FB\u52A8 <code>oldStartIdx</code> \u548C <code>newStartIdx</code> \u7684\u6307\u9488: <code>++oldStartIdx</code>\u3001<code>++newStartIdx</code></li></ul><p>VNode \u65E7: A\u3001(\u2192)B\u3001C\u3001D\u3001E\u3001(\u2190)F \u65B0: A\u3001(\u2192)E\u3001C\u3001D\u3001B\u3001(\u2190)F</p><p>\u5BF9\u5E94DOM : A\u3001B\u3001C\u3001D\u3001E\u3001F</p><p>\u7B2C\u4E8C\u8F6E\u5224\u65AD</p><ul><li><p><code>if(sameVnode(oldStartVnode, newStartVnode))</code> : <code>false</code></p></li><li><p><code>if (sameVnode(oldEndVnode, newEndVnode))</code> : <code>true</code>\uFF0C\u6240\u4EE5\u79FB\u52A8 <code>oldEndVnode</code> \u548C <code>newEndVnode</code> \u7684\u6307\u9488: <code>--oldEndIdx</code>\u3001 <code>--oldEndIdx</code></p></li></ul><p>VNode \u65E7: A\u3001(\u2192)B\u3001C\u3001D\u3001(\u2190)E\u3001F \u65B0: A\u3001(\u2192)E\u3001C\u3001D\u3001(\u2190)B\u3001F</p><p>\u5BF9\u5E94DOM : A\u3001B\u3001C\u3001D\u3001E\u3001F</p><p>\u7B2C\u4E09\u8F6E\u5224\u65AD</p><ul><li><p><code>if(sameVnode(oldStartVnode, newStartVnode))</code> : <code>false</code></p></li><li><p><code>if(sameVnode(oldEndVnode, newEndVnode))</code> : <code>false</code></p></li><li><p><code>if(sameVnode(oldStartVnode, newEndVnode))</code>\uFF1A<code>true</code>, \u8BF4\u660E <code>oldStartVnode</code> \u79FB\u5230\u540E\u9762\u53BB</p><p>\u5177\u4F53\u79FB\u52A8\u8282\u70B9\u7684\u65B9\u6CD5\u662F <code>nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm))</code>, <code>oldStartVnode.elm</code> \u8868\u793ADOM \u5143\u7D20 <code>B</code>; <code>nodeOps.nextSibling(oldEndVnode.elm))</code> \u8868\u793A <code>oldEndVnode.elm</code> \u7684\u4E0B\u4E00\u4E2A\u8282\u70B9\uFF08E\u540E\u9762\u7684F\uFF09\uFF0C\u6240\u4EE5\u8FD9\u4E2A\u65B9\u6CD5\u8868\u793A\u5C06 <code>B</code> \u63D2\u5165\u5230 <code>F</code> \u4E4B\u524D</p><p>\u7136\u540E\u79FB\u52A8 <code>oldStartIdx</code> \u548C <code>newEndIdx</code> \u7684\u6307\u9488\uFF1A<code>++oldStartIdx</code>, <code>--newEndIdx</code></p></li></ul><p>VNode \u65E7: A\u3001B\u3001(\u2192)C\u3001D\u3001(\u2190)E\u3001F \u65B0: A\u3001(\u2192)E\u3001C\u3001(\u2190)D\u3001B\u3001F</p><p>\u5BF9\u5E94DOM : A\u3001C\u3001D\u3001E\u3001B\u3001F</p><p>\u7B2C\u56DB\u8F6E\u5224\u65AD</p><ul><li><p><code>if(sameVnode(oldStartVnode, newStartVnode))</code> : <code>false</code></p></li><li><p><code>if(sameVnode(oldEndVnode, newEndVnode))</code> : <code>false</code></p></li><li><p><code>if(sameVnode(oldStartVnode, newEndVnode))</code>\uFF1A<code>false</code></p></li><li><p><code>if(sameVnode(oldEndVnode, newStartVnode))</code>\uFF1A<code>true</code>, \u8BF4\u660E <code>oldEndVnode</code> \u79FB\u5230\u540E\u9762\u53BB</p></li></ul><p>\u5177\u4F53\u79FB\u52A8\u8282\u70B9\u7684\u65B9\u6CD5\u662F <code>nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm)</code>, <code>oldEndVnode.elm</code> \u8868\u793ADOM \u5143\u7D20 <code>E</code>; <code>oldStartVnode.elm</code> \u8868\u793A DOM \u5143\u7D20 <code>C</code>\uFF0C\u6240\u4EE5\u8FD9\u4E2A\u65B9\u6CD5\u8868\u793A\u5C06 <code>E</code> \u63D2\u5165\u5230 <code>C</code> \u4E4B\u524D</p><p>\u7136\u540E\u79FB\u52A8 <code>oldStartIdx</code> \u548C <code>newEndIdx</code> \u7684\u6307\u9488\uFF1A<code>--oldEndIdx</code>, <code>++newStartIdx</code></p><p>VNode \u65E7: A\u3001B\u3001(\u2192)C\u3001(\u2190)D\u3001E\u3001F \u65B0: A\u3001E\u3001(\u2192)C\u3001(\u2190)D\u3001B\u3001F</p><p>\u5BF9\u5E94DOM : A\u3001E\u3001C\u3001D\u3001B\u3001F</p><p>\u7B2C\u4E94\u8F6E\u5224\u65AD</p><ul><li><code>if(sameVnode(oldStartVnode, newStartVnode))</code> \u4E3A <code>true</code>,\u6240\u4EE5\u79FB\u52A8 <code>oldStartIdx</code> \u548C <code>newStartIdx</code> \u7684\u6307\u9488: <code>++oldStartIdx</code>\u3001<code>++newStartIdx</code></li></ul><p>VNode \u65E7: A\u3001B\u3001C\u3001(\u2192 \u2190)D\u3001E\u3001F \u65B0: A\u3001E\u3001C\u3001(\u2192 \u2190)D\u3001B\u3001F</p><p>\u5BF9\u5E94DOM : A\u3001E\u3001C\u3001D\u3001B\u3001F</p><p>\u7B2C\u516D\u8F6E\u5224\u65AD</p><ul><li><code>if(sameVnode(oldStartVnode, newStartVnode))</code> \u4E3A <code>true</code>,\u6240\u4EE5\u79FB\u52A8 <code>oldStartIdx</code> \u548C <code>newStartIdx</code> \u7684\u6307\u9488: <code>++oldStartIdx</code>\u3001<code>++newStartIdx</code></li></ul><p>VNode \u65E7: A\u3001B\u3001C\u3001(\u2190)D\u3001(\u2192)E\u3001F \u65B0: A\u3001E\u3001C\u3001(\u2190)D\u3001(\u2192)B\u3001F</p><p>\u5BF9\u5E94DOM : A\u3001E\u3001C\u3001D\u3001B\u3001F</p><p>\u4E4B\u4F1A\u8DF3\u51FA <code>while</code> \u5FAA\u73AF</p><h3 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h3><p>\u8FC7\u7A0B\u53EF\u4EE5\u6982\u62EC\u4E3A\uFF1A<code>oldCh</code> \u548C <code>newCh</code> \u5404\u6709\u4E24\u4E2A\u5934\u5C3E\u7684\u53D8\u91CF <code>StartIdx</code> \u548C <code>EndIdx</code> \uFF0C\u5728\u4E00\u6B21\u904D\u5386\u4E2D\uFF0C\u4F1A\u4F7F\u7528\u4ED6\u4EEC\u505A4\u79CD\u6BD4\u8F83\u65B9\u5F0F\u3002</p><ol><li><p>\u65B0\u8282\u70B9\u7684\u9996\u90E8\u8282\u70B9\u4E0E\u65E7\u8282\u70B9\u7684\u9996\u90E8\u8282\u70B9\u662F\u5426\u76F8\u540C</p></li><li><p>\u65B0\u8282\u70B9\u7684\u5C3E\u90E8\u8282\u70B9\u4E0E\u65E7\u8282\u70B9\u7684\u5C3E\u90E8\u8282\u70B9\u662F\u5426\u76F8\u540C</p></li><li><p>\u65B0\u8282\u70B9\u7684\u5934\u90E8\u8282\u70B9\u4E0E\u65E7\u8282\u70B9\u7684\u5C3E\u90E8\u8282\u70B9\u662F\u5426\u76F8\u540C\uFF1A \u5143\u7D20\u5185\u90E8\u53D1\u751F\u4E86\u4F4D\u7F6E\u53D8\u5316\uFF0C\u6709\u4E2A\u5143\u7D20\u8DD1\u524D\u9762\u6765\u4E86</p></li><li><p>\u65B0\u8282\u70B9\u7684\u5C3E\u90E8\u8282\u70B9\u4E0E\u65E7\u8282\u70B9\u7684\u7740\u90E8\u8282\u70B9\u662F\u5426\u76F8\u540C\uFF1A \u5143\u7D20\u5185\u90E8\u53D1\u751F\u4E86\u4F4D\u7F6E\u53D8\u5316\uFF0C\u6709\u4E2A\u5143\u7D20\u8DD1\u540E\u9762\u53BB\u4E86</p></li><li><p>\u5982\u679C4\u79CD\u6BD4\u8F83\u90FD\u6CA1\u5339\u914D\uFF0C\u5219\u5C1D\u8BD5\u901A\u8FC7 <code>key</code> \u67E5\u627E\uFF0C\u8FD9\u91CC\u5206\u4E24\u79CD\u60C5\u51B5</p></li></ol><ul><li><p>\u5982\u679C\u65B0\u8282\u70B9\u6709 <code>key</code>, \u4E14\u80FD\u5339\u914D\u5230\u65E7\u8282\u70B9\uFF0C\u5219\u5F53\u505A\u6DFB\u52A0\u65B0\u8282\u70B9\u5904\u7406</p></li><li><p>\u5982\u679C\u65B0\u8282\u70B9\u6709 <code>key</code>, \u4E14\u80FD\u5339\u914D\u5230\u65E7\u8282\u70B9\uFF0C\u5219\u5148\u901A\u8FC7 <code>sameVnode</code> \u65B9\u6CD5\u5224\u65AD\u8FD9\u4E24\u4E2A\u65B0\u65E7\u8282\u70B9\u662F\u5426\u76F8\u540C\uFF0C\u60C5\u51B5\u4E5F\u5206\u4E24\u79CD</p><ul><li><p>\u5982\u679C\u76F8\u540C\uFF0C\u5219 <code>patchVnode</code> \u7EE7\u7EED\u5BF9\u65B0\u65E7\u8282\u70B9\u505A <code>diff</code> \u5904\u7406\uFF0C\u5E76\u4E14\u4EA4\u6362\u4F4D\u7F6E</p></li><li><p>\u5982\u679C\u4E0D\u76F8\u540C\uFF0C\u5219\u5F53\u505A\u65B0\u8282\u70B9\u505A\u5904\u7406</p></li></ul></li></ul><p><strong>\u6240\u4EE5\u4E3A\u8282\u70B9\u8BBE\u7F6E<code>key</code>\u53EF\u4EE5\u66F4\u9AD8\u6548\u7684\u5229\u7528<code>dom</code></strong></p><p>\u5728\u6BD4\u8F83\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u53D8\u91CF\u4F1A\u5F80\u4E2D\u95F4\u9760\uFF0C\u4E00\u65E6 <code>StartIdx&gt;EndIdx</code> \u8868\u660E <code>oldCh</code> \u548C <code>newCh</code> \u81F3\u5C11\u6709\u4E00\u4E2A\u5DF2\u7ECF\u904D\u5386\u5B8C\u4E86\uFF0C\u5C31\u4F1A\u7ED3\u675F\u6BD4\u8F83\u3002</p><p>\u5728\u7ED3\u675F\u65F6\uFF0C\u5206\u4E3A\u4E24\u79CD\u60C5\u51B5\uFF1A</p><ul><li><p><code>oldStartIdx &gt; oldEndIdx</code>,\u8BF4\u660E\u65E7\u7684\u8282\u70B9\u90FD\u904D\u5386\u5B8C\u4E86\uFF0C\u5982\u679C\u8FD8\u6709\u65B0\u8282\u70B9\u6CA1\u904D\u5386\u5B8C\uFF0C\u5219\u90FD\u662F\u65B0\u52A0\u7684\u8282\u70B9\uFF0C\u6267\u884C<code>addVnodes</code>\u51FD\u6570\u63D2\u5165\u8FD9\u4E9B\u8282\u70B9</p></li><li><p><code>newStartIdx &gt; newEndIdx</code>, \u53EF\u4EE5\u8BA4\u4E3A<code>newCh</code>\u5148\u904D\u5386\u5B8C\u3002\u6B64\u65F6<code>oldStartIdx</code>\u548C<code>oldEndIdx</code>\u4E4B\u95F4\u7684<code>vnode</code>\u5728\u65B0\u7684\u5B50\u8282\u70B9\u91CC\u5DF2\u7ECF\u4E0D\u5B58\u5728\u4E86\uFF0C \u8C03\u7528<code>removeVnodes</code>\u5C06\u5B83\u4EEC\u4ECEdom\u91CC\u5220\u9664\u3002</p></li></ul><h2 id="q-a" tabindex="-1"><a class="header-anchor" href="#q-a" aria-hidden="true">#</a> Q&amp;A</h2><p><strong>\u4E3A\u4EC0\u4E48\u4E0D\u63A8\u8350\u4F7F\u7528index\u4F5C\u4E3Akey\uFF1F</strong></p><p>\u56E0\u4E3A\u4F7F\u7528 <code>index</code> \u4F5C\u4E3A <code>key</code>\uFF0C\u4F1A\u5BFC\u81F4 diff \u65F6\u4E0D\u80FD\u627E\u5230<strong>\u6B63\u786E</strong>\u7684\u8282\u70B9\u505A\u590D\u7528\u3002\u6CE8\u610F\u8FD9\u91CC\u7684<strong>\u6B63\u786E</strong>\u4E00\u8BCD</p><p>\u5047\u8BBE\u6709\u4EE5\u4E0B\u5217\u8868 <code>[1, 2, 3, 4]</code>\uFF0C\u5E76\u7528 <code>index</code> \u505A\u4E3A <code>key</code>\uFF0C\u6B64\u65F6\u5217\u8868\u5BF9\u5E94\u539F <code>key</code> \u4E3A <code>[0, 1, 2, 3]</code> \u4E4B\u540E\u6211\u4EEC\u5C06\u5217\u8868\u6539\u6210 <code>[2, 3, 4, 1]</code>,\u6B64\u65F6\u5BF9\u5E94\u7684 <code>key</code> \u8FD8\u662F <code>[0, 1, 2\uFF0C 3]</code></p><p>\u56DE\u987E\u4E0B\u8FDB\u884C <code>diff</code> \u65F6\u6267\u884C\u7684 <code>updateChildren</code> \u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">while</span> <span class="token punctuation">(</span>oldStartIdx <span class="token operator">&lt;=</span> oldEndIdx <span class="token operator">&amp;&amp;</span> newStartIdx <span class="token operator">&lt;=</span> newEndIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> newStartIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
          oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
          newStartVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">++</span>newStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// todo</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// Vnode moved right</span>
          <span class="token function">patchVnode</span><span class="token punctuation">(</span>oldStartVnode<span class="token punctuation">,</span> newEndVnode<span class="token punctuation">,</span> insertedVnodeQueue<span class="token punctuation">,</span> newCh<span class="token punctuation">,</span> newEndIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
          canMove <span class="token operator">&amp;&amp;</span> nodeOps<span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>parentElm<span class="token punctuation">,</span> oldStartVnode<span class="token punctuation">.</span>elm<span class="token punctuation">,</span> nodeOps<span class="token punctuation">.</span><span class="token function">nextSibling</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">.</span>elm<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          oldStartVnode <span class="token operator">=</span> oldCh<span class="token punctuation">[</span><span class="token operator">++</span>oldStartIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
          newEndVnode <span class="token operator">=</span> newCh<span class="token punctuation">[</span><span class="token operator">--</span>newEndIdx<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sameVnode</span><span class="token punctuation">(</span>oldEndVnode<span class="token punctuation">,</span> newStartVnode<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// Vnode moved left</span>
          <span class="token comment">// todo</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token comment">// todo</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5047\u8BBE\u5F53\u524D\u8FDB\u884C\u5BF9\u6BD4\u90FD\u662F\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF0C\u5728\u6267\u884C\u5230\u7B2C\u4E00\u4E2A\u5224\u65AD\u8BED\u53E5 <code>sameVnode(oldStartVnode, newStartVnode)</code> \u65F6\uFF0C\u6B64\u65F6\u65B0\u65E7\u8282\u70B9\u7684<code>tag</code>, <code>key</code> \u90FD\u662F\u76F8\u540C\u7684\u6B64\u65F6\u5C31\u5BF9\u8FD9\u4E24\u4E2A\u8282\u70B9\u505A\u8FDB\u4E00\u6B65\u7684 <code>diff</code> \u5224\u65AD\uFF0C\u4E4B\u540E\u5224\u65AD\u5230\u6587\u672C\u5185\u5BB9\u662F\u4E0D\u4E00\u6837\u7684\uFF0C\u5C31\u4F1A\u5C06\u65B0\u7684\u6587\u672C\u66FF\u6362\u65E7\u7684\u6587\u672C\uFF0C\u8FD9\u6837\u5C31\u5BFC\u81F4\u5B50\u8282\u70B9\u6CA1\u529E\u6CD5\u5F97\u5230\u590D\u7528\u4E86\u3002\u4EE5\u6B64\u7C7B\u63A8\uFF0C\u5176\u5B83\u7684\u6240\u8282\u70B9\u90FD\u4F1A\u6709\u8FD9\u4E2A\u95EE\u9898</p><p>\u4F46\u662F\u5982\u679C\u5F53\u524D\u4F7F\u7528\u7684\u662F\u552F\u4E00 <code>id</code> \u4F5C\u4E3A <code>key</code>\uFF0C\u5728\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u5728\u5BF9\u6BD4\u7B2C\u4E00\u4E2A\u5143\u7D20\uFF0C\u5C06\u6267\u884C\u7B2C\u4E09\u4E2A\u5224\u65AD\u4E3B\u53E5 <code>sameVnode(oldStartVnode, newEndVnode)</code> \uFF0C\u5B9E\u9645\u4E0A\u4ED6\u4EEC\u7684\u5B50\u8282\u70B9\u4E5F\u662F\u76F8\u540C\uFF0C\u56E0\u6B64\u518D\u8FDB\u4E00\u6B65 <code>diff</code> \u65F6\u4E5F\u662F\u8BA4\u4E3A\u662F\u76F8\u540C\u7684\uFF0C\u4E4B\u540E\u5C06\u6267\u884C <code>canMove &amp;&amp; nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));</code>\u8BED\u53E5\uFF0C \u76F4\u63A5\u4EE5\u76F8\u6362\u4F4D\u7F6E\u7684\u65B9\u5F0F\u590D\u7528\u65E7\u8282\u70B9\uFF0C\u4EE5\u6B64\u62FF\u5230\u63D0\u9AD8\u6027\u80FD\u7684\u76EE\u7684</p><p>\u6240\u4EE5\u5982\u679C\u4F7F\u7528 <code>index</code> \u4F5C\u4E3A <code>key</code>\u5C06\u4E0D\u5229\u4E8E\u8282\u70B9\u7684\u590D\u7528</p><p><strong>Virtual DOM \u6BD4\u771F\u5B9E DOM \u5FEB\u561B</strong></p><p><code>Virtual DOM</code> \u5E76\u4E0D\u662F\u6BD4\u771F\u5B9E DOM \u5FEB\uFF0C\u800C\u662F\u4E0D\u7BA1\u6570\u636E\u600E\u4E48\u53D8\u5316\uFF0C\u90FD\u53EF\u4EE5\u7528\u6700\u5C0F\u7684\u4EE3\u7801\u8FDB\u884C\u66F4\u65B0 DOM</p><p>\u867D\u7136\u8BF4 <code>diff</code> \u7B97\u6CD5\u53F7\u79F0\u7B97\u6CD5\u590D\u6742\u5EA6 <code>O(n)</code> \u53EF\u4EE5\u5F97\u5230\u6700\u5C0F\u64CD\u4F5C\u7ED3\u679C\uFF0C\u4F46\u5B9E\u9645\u4E0A DOM \u6811\u5F88\u5927\u7684\u65F6\u5019\uFF0C\u904D\u5386\u4E24\u68F5\u6811\u8FDB\u884C\u5404\u79CD\u5BF9\u6BD4\u8FD8\u662F\u6709\u6027\u80FD\u635F\u8017\u7684\uFF0C \u7279\u522B\u662F\u6211\u5728\u9876\u5C42\u66F4\u65B0\u4E00\u4E2A\u7B80\u5355\u7684\u6570\u636E\uFF0C\u4F60\u5C31\u8981\u6574\u68F5\u6811 <code>walk</code> \u4E00\u904D\uFF0C\u800C\u771F\u5B9E\u4E2D\u6211\u53EF\u4EE5\u4E00\u53E5 <code>jQuery</code> \u5C31\u641E\u5B9A</p><p>\u6846\u67B6\u7684\u610F\u4E49\u5728\u4E8E\u4E3A\u4F60\u63A9\u76D6\u5E95\u5C42\u7684 DOM \u64CD\u4F5C\uFF0C\u8BA9\u4F60\u7528\u66F4\u58F0\u660E\u5F0F\u7684\u65B9\u5F0F\u6765\u63CF\u8FF0\u4F60\u7684\u76EE\u7684\uFF0C\u4ECE\u800C\u8BA9\u4F60\u7684\u4EE3\u7801\u66F4\u5BB9\u6613\u7EF4\u62A4\u3002\u6CA1\u6709\u4EFB\u4F55\u6846\u67B6\u53EF\u4EE5\u6BD4\u7EAF\u624B\u52A8\u7684\u4F18\u5316 DOM \u64CD\u4F5C\u66F4\u5FEB</p><p>\u6846\u67B6\u7ED9\u4F60\u7684\u4FDD\u8BC1\u662F\uFF0C\u4F60\u5728\u4E0D\u9700\u8981\u624B\u52A8\u4F18\u5316\u7684\u60C5\u51B5\u4E0B\uFF0C\u6211\u4F9D\u7136\u53EF\u4EE5\u7ED9\u4F60\u63D0\u4F9B\u8FC7\u5F97\u53BB\u7684\u6027\u80FD</p><p><strong>vue\u548Creact\u66F4\u65B0\u673A\u5236\u7684\u533A\u522B</strong></p><p>vue\u4F1A\u8DDF\u8E2A\u6BCF\u4E00\u4E2A\u7EC4\u4EF6\u7684\u4F9D\u8D56\u5173\u7CFB,\u4E0D\u9700\u8981\u91CD\u65B0\u6E32\u67D3\u6574\u4E2A\u7EC4\u4EF6\u6811\u3002</p><p>\u800C\u5BF9\u4E8EReact\u800C\u8A00\uFF0C\u6BCF\u5F53\u5E94\u7528\u7684\u72B6\u6001\u88AB\u6539\u53D8\u65F6\uFF0C\u5168\u90E8\u7EC4\u4EF6\u90FD\u4F1A\u91CD\u65B0\u6E32\u67D3\uFF0C\u6240\u4EE5 react \u4E2D\u4F1A\u9700\u8981 <code>shouldComponentUpdate</code> \u8FD9\u4E2A\u751F\u547D\u5468\u671F\u51FD\u6570\u65B9\u6CD5\u6765\u8FDB\u884C\u63A7\u5236</p>`,111),o=[e];function c(l,i){return s(),a("div",null,o)}var d=n(t,[["render",c],["__file","PatchNode.html.vue"]]);export{d as default};
