import{_ as e,o,c,b as n,a,d as t,e as p,r as l}from"./app.35d123d0.js";const i={},u=t(`<h1 id="qiankun\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#qiankun\u539F\u7406" aria-hidden="true">#</a> qiankun\u539F\u7406</h1><p>\u4E4B\u524D\u5927\u81F4\u4E86\u73A9\u4E86\u4E0B qiankun \u6846\u67B6\u7684\u4F7F\u7528\uFF0C\u73B0\u5728\u5F00\u59CB\u4E86\u89E3\u4E00\u4E0B\u5B83\u7684\u5B9E\u73B0\u539F\u7406\uFF0C\u4F46\u662F\u7A0D\u5FAE\u770B\u4E86\u4E0B\u6E90\u7801\u540E\uFF0C\u53D1\u73B0\u6E90\u7801\u592A\u591A\u56DE\u8C03\u4E86\u770B\u5F97\u5B9E\u73B0\u662F\u6655\uFF0C\u6240\u4EE5\u4E0D\u7EC6\u8BFB\u6E90\u7801\u4E86\uFF0C\u76F4\u63A5\u5E26\u4E9B\u95EE\u9898\u53BB\u627E\u4E0B\u5BF9\u5E94\u7684\u5B9E\u73B0\u539F\u7406</p><h2 id="\u5B50\u5E94\u7528\u52A0\u8F7D\u8FC7\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u5B50\u5E94\u7528\u52A0\u8F7D\u8FC7\u7A0B" aria-hidden="true">#</a> \u5B50\u5E94\u7528\u52A0\u8F7D\u8FC7\u7A0B</h2><p>\u5B50\u5E94\u7528\u8DEF\u7531\u6FC0\u6D3B\u65F6\uFF0C\u5C06\u6267\u884C <code>loadApp</code> \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> loadApp<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">ObjectType</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  <span class="token literal-property property">app</span><span class="token operator">:</span> LoadableApp<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">configuration</span><span class="token operator">:</span> FrameworkConfiguration <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  lifeCycles<span class="token operator">?</span><span class="token operator">:</span> FrameworkLifeCycles<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>ParcelConfigObjectGetter<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// entry \u5B50\u5E94\u7528\u94FE\u63A5; name:app\u540D\u5B57</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> entry<span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> appName <span class="token punctuation">}</span> <span class="token operator">=</span> app<span class="token punctuation">;</span>
  <span class="token keyword">const</span> appInstanceId <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>appName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> markName <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[qiankun] App </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>appInstanceId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> Loading</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> singular <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span> sandbox <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> excludeAssetFilter<span class="token punctuation">,</span> <span class="token operator">...</span>importEntryOpts <span class="token punctuation">}</span> <span class="token operator">=</span> configuration<span class="token punctuation">;</span>
  <span class="token comment">// \u901A\u8FC7 importEntry \u83B7\u53D6\u5B50\u5E94\u7528\u5185\u5BB9</span>
  <span class="token comment">// template \u5185\u5BB9+\u6837\u5F0F; execScripts \u8981\u6267\u884C\u7684js; assetPublicPath \u5B50\u5E94\u7528host</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> template<span class="token punctuation">,</span> execScripts<span class="token punctuation">,</span> assetPublicPath <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">importEntry</span><span class="token punctuation">(</span>entry<span class="token punctuation">,</span> importEntryOpts<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5224\u65AD\u662F\u5426\u5355\u4F8B\u5E94\u7528</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">validateSingularMode</span><span class="token punctuation">(</span>singular<span class="token punctuation">,</span> app<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
  	<span class="token comment">// \u662F\u7684\u8BDD\u7B49\u4E4B\u6709\u5E94\u7528\u5378\u8F7D\u540E\u518D\u52A0\u8F7D\u5F53\u524D\u5E94\u7528</span>
    <span class="token keyword">await</span> <span class="token punctuation">(</span>prevAppUnmountedDeferred <span class="token operator">&amp;&amp;</span> prevAppUnmountedDeferred<span class="token punctuation">.</span>promise<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6DFB\u52A0\u4E00\u4E2Adiv\u5143\u7D20\u5305\u88C5 \u5B50\u5E94\u7528\u5185\u5BB9 </span>
  <span class="token keyword">const</span> appContent <span class="token operator">=</span> <span class="token function">getDefaultTplWrapper</span><span class="token punctuation">(</span>appInstanceId<span class="token punctuation">,</span> appName<span class="token punctuation">)</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> strictStyleIsolation <span class="token operator">=</span> <span class="token keyword">typeof</span> sandbox <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token operator">!</span>sandbox<span class="token punctuation">.</span>strictStyleIsolation<span class="token punctuation">;</span>
  <span class="token keyword">const</span> scopedCSS <span class="token operator">=</span> <span class="token function">isEnableScopedCSS</span><span class="token punctuation">(</span>sandbox<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u6839\u636E\u6837\u5F0F\u9694\u79BB\u914D\u7F6E\uFF0C\u5BF9\u5B50\u5E94\u7528\u7684\u6837\u5F0F\u505A\u4E0B\u5904\u7406</span>
  <span class="token keyword">let</span> <span class="token literal-property property">initialAppWrapperElement</span><span class="token operator">:</span> HTMLElement <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token function">createElement</span><span class="token punctuation">(</span>
    appContent<span class="token punctuation">,</span>
    strictStyleIsolation<span class="token punctuation">,</span>
    scopedCSS<span class="token punctuation">,</span>
    appName<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> initialContainer <span class="token operator">=</span> <span class="token string">&#39;container&#39;</span> <span class="token keyword">in</span> app <span class="token operator">?</span> app<span class="token punctuation">.</span>container <span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> legacyRender <span class="token operator">=</span> <span class="token string">&#39;render&#39;</span> <span class="token keyword">in</span> app <span class="token operator">?</span> app<span class="token punctuation">.</span>render <span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5F00\u59CB\u5C06\u5B50\u5E94\u7528\u5185\u5BB9\u6DFB\u52A0\u5230 DOM\u4E2D</span>
  <span class="token keyword">const</span> render <span class="token operator">=</span> <span class="token function">getRender</span><span class="token punctuation">(</span>appName<span class="token punctuation">,</span> appContent<span class="token punctuation">,</span> legacyRender<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u7B2C\u4E00\u6B21\u52A0\u8F7D\u8BBE\u7F6E\u5E94\u7528\u53EF\u89C1\u533A\u57DF dom \u7ED3\u6784</span>
  <span class="token comment">// \u786E\u4FDD\u6BCF\u6B21\u5E94\u7528\u52A0\u8F7D\u524D\u5BB9\u5668 dom \u7ED3\u6784\u5DF2\u7ECF\u8BBE\u7F6E\u5B8C\u6BD5</span>
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">element</span><span class="token operator">:</span> initialAppWrapperElement<span class="token punctuation">,</span> <span class="token literal-property property">loading</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">container</span><span class="token operator">:</span> initialContainer <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;loading&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> initialAppWrapperGetter <span class="token operator">=</span> <span class="token function">getAppWrapperGetter</span><span class="token punctuation">(</span>
    appName<span class="token punctuation">,</span>
    appInstanceId<span class="token punctuation">,</span>
    <span class="token operator">!</span><span class="token operator">!</span>legacyRender<span class="token punctuation">,</span>
    strictStyleIsolation<span class="token punctuation">,</span>
    scopedCSS<span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> initialAppWrapperElement<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> global <span class="token operator">=</span> window<span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token function-variable function">mountSandbox</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token function-variable function">unmountSandbox</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> useLooseSandbox <span class="token operator">=</span> <span class="token keyword">typeof</span> sandbox <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token operator">!</span>sandbox<span class="token punctuation">.</span>loose<span class="token punctuation">;</span>
  <span class="token keyword">let</span> sandboxContainer<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>sandbox<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521B\u5EFAJS\u8FD0\u884C\u73AF\u5883\u6C99\u7BB1</span>
    sandboxContainer <span class="token operator">=</span> <span class="token function">createSandboxContainer</span><span class="token punctuation">(</span>
      appName<span class="token punctuation">,</span>
      <span class="token comment">// FIXME should use a strict sandbox logic while remount, see https://github.com/umijs/qiankun/issues/518</span>
      initialAppWrapperGetter<span class="token punctuation">,</span>
      scopedCSS<span class="token punctuation">,</span>
      useLooseSandbox<span class="token punctuation">,</span>
      excludeAssetFilter<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7528\u6C99\u7BB1\u7684\u4EE3\u7406\u5BF9\u8C61\u4F5C\u4E3A\u63A5\u4E0B\u6765\u4F7F\u7528\u7684\u5168\u5C40\u5BF9\u8C61</span>
    global <span class="token operator">=</span> sandboxContainer<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>proxy <span class="token keyword">as</span> <span class="token keyword">typeof</span> window<span class="token punctuation">;</span>
    mountSandbox <span class="token operator">=</span> sandboxContainer<span class="token punctuation">.</span>mount<span class="token punctuation">;</span>
    unmountSandbox <span class="token operator">=</span> sandboxContainer<span class="token punctuation">.</span>unmount<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u83B7\u53D6\u94A9\u5B50</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> beforeUnmount <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> afterUnmount <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> afterMount <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> beforeMount <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> beforeLoad <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">mergeWith</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">getAddOns</span><span class="token punctuation">(</span>global<span class="token punctuation">,</span> assetPublicPath<span class="token punctuation">)</span><span class="token punctuation">,</span>
    lifeCycles<span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token parameter">v1<span class="token punctuation">,</span> v2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">concat</span><span class="token punctuation">(</span>v1 <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> v2 <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u6267\u884C beforeLoad \u94A9\u5B50</span>
  <span class="token keyword">await</span> <span class="token function">execHooksChain</span><span class="token punctuation">(</span><span class="token function">toArray</span><span class="token punctuation">(</span>beforeLoad<span class="token punctuation">)</span><span class="token punctuation">,</span> app<span class="token punctuation">,</span> global<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// get the lifecycle hooks from module exports</span>
  <span class="token comment">// \u6267\u884C\u5B50\u5E94\u7528JS\u4EE3\u7801</span>
  <span class="token keyword">const</span> <span class="token literal-property property">scriptExports</span><span class="token operator">:</span> any <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">execScripts</span><span class="token punctuation">(</span>global<span class="token punctuation">,</span> <span class="token operator">!</span>useLooseSandbox<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u83B7\u53D6\u94A9\u5B50</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> bootstrap<span class="token punctuation">,</span> mount<span class="token punctuation">,</span> unmount<span class="token punctuation">,</span> update <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">getLifecyclesFromExports</span><span class="token punctuation">(</span>
    scriptExports<span class="token punctuation">,</span>
    appName<span class="token punctuation">,</span>
    global<span class="token punctuation">,</span>
    sandboxContainer<span class="token operator">?.</span>instance<span class="token operator">?.</span>latestSetProp<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u901A\u4FE1\u914D\u7F6E</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span>
    onGlobalStateChange<span class="token punctuation">,</span>
    setGlobalState<span class="token punctuation">,</span>
    offGlobalStateChange<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> CallableFunction<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token function">getMicroAppStateActions</span><span class="token punctuation">(</span>appInstanceId<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// FIXME temporary way</span>
  <span class="token keyword">const</span> <span class="token function-variable function">syncAppWrapperElement2Sandbox</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">element</span><span class="token operator">:</span> HTMLElement <span class="token operator">|</span> <span class="token keyword">null</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>initialAppWrapperElement <span class="token operator">=</span> element<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token literal-property property">parcelConfigGetter</span><span class="token operator">:</span> <span class="token function-variable function">ParcelConfigObjectGetter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">remountContainer <span class="token operator">=</span> initialContainer</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token literal-property property">appWrapperElement</span><span class="token operator">:</span> HTMLElement <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> initialAppWrapperElement<span class="token punctuation">;</span>
    <span class="token keyword">const</span> appWrapperGetter <span class="token operator">=</span> <span class="token function">getAppWrapperGetter</span><span class="token punctuation">(</span>
      appName<span class="token punctuation">,</span>
      appInstanceId<span class="token punctuation">,</span>
      <span class="token operator">!</span><span class="token operator">!</span>legacyRender<span class="token punctuation">,</span>
      strictStyleIsolation<span class="token punctuation">,</span>
      scopedCSS<span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> appWrapperElement<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token literal-property property">parcelConfig</span><span class="token operator">:</span> ParcelConfigObject <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> appInstanceId<span class="token punctuation">,</span>
      bootstrap<span class="token punctuation">,</span>
      <span class="token literal-property property">mount</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">unmount</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> update <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      parcelConfig<span class="token punctuation">.</span>update <span class="token operator">=</span> update<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> parcelConfig<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> parcelConfigGetter<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u76F4\u63A5\u6311\u51E0\u4E2A\u91CD\u70B9\u90E8\u5206\u770B\u4E00\u4E0B</p><p><strong>\u52A0\u8F7D\u5B50\u5E94\u7528\u5185\u5BB9</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">const</span> <span class="token punctuation">{</span> template<span class="token punctuation">,</span> execScripts<span class="token punctuation">,</span> assetPublicPath <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">importEntry</span><span class="token punctuation">(</span>entry<span class="token punctuation">,</span> importEntryOpts<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u901A\u8FC7 <code>importEntry</code> \u662F <code>import-html-entry</code> \u5E93\u63D0\u4F9B\u7684\u65B9\u6CD5\uFF0C\u7528\u4E8E\u52A0\u8F7D\u5B50\u5E94\u7528\u7684\u8D44\u6E90\uFF0C\u5173\u4E8E <code>import-html-entry</code> \u4F1A\u6709\u5355\u72EC\u7684\u4E00\u5355\u6765\u8BB2\u89E3\uFF0C\u8FD9\u91CC\u5148\u5927\u81F4\u4ECB\u7ECD\u4E0B <code>importEntry</code> \u8FD4\u56DE\u7684\u4E09\u4E2A\u5C5E\u6027\u7684\u610F\u601D\uFF1A</p><ul><li><p><code>embedHTML</code>\uFF1A html \u5185\u5BB9\uFF0C\u5982\u679C\u5305\u542B <code>link</code> \u6837\u5F0F\u8D44\u6E90\u7684\u6807\u7B7E\uFF0C\u5C06\u4F1A\u628A\u8FD9\u4E9B\u6837\u5F0F\u8F6C\u6362\u6210\u5185\u8054\u6837\u5F0F\u76F4\u63A5\u5305\u542B\u5728 html \u5185\u5BB9\u4E2D</p></li><li><p><code>assetPublicPath</code>: \u5B50\u5E94\u7528\u52A0\u8F7D\u57DF\u540D</p></li><li><p><code>execScripts</code>: \u6267\u884CJS\u4EE3\u7801\u7684\u65B9\u6CD5\uFF0C\u5982\u679C\u6267\u884C\u7684JS\u662F\u5165\u53E3\u6587\u4EF6\u7684\u8BDD\uFF0C\u8FD4\u56DE\u6700\u540E\u4E00\u4E2A\u8BBE\u7F6E\u7684\u5168\u5C40\u53D8\u91CF\uFF0C\u8FD9\u4E2A\u6240\u8C13\u7684\u6700\u540E\u4E00\u4E2A\u8BBE\u7F6E\u7684\u5168\u5C40\u53D8\u91CF\u5728\u8FD9\u91CC\u6307\u7684\u5C31\u662F\u6211\u4EEC\u5728\u5B50\u5E94\u7528\u5BFC\u51FA\u7684 <code>bootstrap</code>\u3001 <code>mount</code> \u3001 <code>unmount</code> \u4E09\u4E2A\u65B9\u6CD5</p></li></ul><p><strong>go on</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token function">validateSingularMode</span><span class="token punctuation">(</span>singular<span class="token punctuation">,</span> app<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">await</span> <span class="token punctuation">(</span>prevAppUnmountedDeferred <span class="token operator">&amp;&amp;</span> prevAppUnmountedDeferred<span class="token punctuation">.</span>promise<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5224\u65AD\u662F\u5426\u662F\u5355\u4F8B\u5E94\u7528\uFF0C\u662F\u5355\u4F8B\u5E94\u7528\u7684\u8BDD\u5219\u7B49\u5230\u4E4B\u524D\u7684\u5E94\u7528\u5378\u8F7D\u5B8C\u6210\u540E\u518D\u7EE7\u7EED\u5F80\u4E0B\u8D70</p><p><strong>\u5305\u88C5\u5B50\u5E94\u7528\u5185\u5BB9</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> appContent <span class="token operator">=</span> <span class="token function">getDefaultTplWrapper</span><span class="token punctuation">(</span>appInstanceId<span class="token punctuation">,</span> appName<span class="token punctuation">)</span><span class="token punctuation">(</span>template<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// getDefaultTplWrapper</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getDefaultTplWrapper</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">id</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">tpl</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div id=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">getWrapperId</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; data-name=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>tpl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 <code>getDefaultTplWrapper</code> \u7ED9 <code>importEntry</code> \u8FD4\u56DE\u7684 <code>template</code> \u5185\u5BB9\u5305\u4E00\u5C42 <code>div</code>\uFF0C\u8FD9\u4E2A <code>div</code> \u5305\u542B\u4E00\u4E9B <code>qiankun</code> \u5B9A\u4E49\u7684\u6807\u5FD7\u5C5E\u6027</p><p><strong>\u6837\u5F0F\u9694\u79BB</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">const</span> strictStyleIsolation <span class="token operator">=</span> <span class="token keyword">typeof</span> sandbox <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token operator">!</span>sandbox<span class="token punctuation">.</span>strictStyleIsolation<span class="token punctuation">;</span>
  <span class="token keyword">const</span> scopedCSS <span class="token operator">=</span> <span class="token function">isEnableScopedCSS</span><span class="token punctuation">(</span>sandbox<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token literal-property property">initialAppWrapperElement</span><span class="token operator">:</span> HTMLElement <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token function">createElement</span><span class="token punctuation">(</span>
    appContent<span class="token punctuation">,</span>
    strictStyleIsolation<span class="token punctuation">,</span>
    scopedCSS<span class="token punctuation">,</span>
    appName<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5148\u662F\u83B7\u53D6\u6837\u5F0F\u9694\u79BB\u89C4\u5219\uFF0C\u8C03\u7528 <code>createElement</code> \u65B9\u6CD5\u6839\u636E\u89C4\u5219\u5904\u7406\u5F53\u524D\u9875\u9762\u5185\u5BB9\uFF0C\u6837\u5F0F\u9694\u79BB\u7684\u5B9E\u73B0\u5927\u4F53\u5206\u4E24\u79CD <code>strictStyleIsolation</code> \u548C <code>scopedCSS</code></p><ul><li><p>strictStyleIsolation\uFF1A\u6BCF\u4E2A\u5FAE\u5E94\u7528\u7684\u5BB9\u5668\u5305\u88F9\u4E0A\u4E00\u4E2A shadow dom \u8282\u70B9</p></li><li><p>scopedCSS\uFF1Aqiankun \u4F1A\u6539\u5199\u5B50\u5E94\u7528\u6240\u6DFB\u52A0\u7684\u6837\u5F0F\u4E3A\u6240\u6709\u6837\u5F0F\u89C4\u5219\u589E\u52A0\u4E00\u4E2A\u7279\u6B8A\u7684\u9009\u62E9\u5668\u89C4\u5219\u6765\u9650\u5B9A\u5176\u5F71\u54CD\u8303\u56F4</p></li></ul><p><strong>\u6302\u8F7D\u5B50\u5E94\u7528\u5185\u5BB9</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> initialContainer <span class="token operator">=</span> <span class="token string">&#39;container&#39;</span> <span class="token keyword">in</span> app <span class="token operator">?</span> app<span class="token punctuation">.</span>container <span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> legacyRender <span class="token operator">=</span> <span class="token string">&#39;render&#39;</span> <span class="token keyword">in</span> app <span class="token operator">?</span> app<span class="token punctuation">.</span>render <span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> render <span class="token operator">=</span> <span class="token function">getRender</span><span class="token punctuation">(</span>appName<span class="token punctuation">,</span> appContent<span class="token punctuation">,</span> legacyRender<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">element</span><span class="token operator">:</span> initialAppWrapperElement<span class="token punctuation">,</span> <span class="token literal-property property">loading</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">container</span><span class="token operator">:</span> initialContainer <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;loading&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// getRender</span>
<span class="token keyword">function</span> <span class="token function">getRender</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">appName</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">appContent</span><span class="token operator">:</span> string<span class="token punctuation">,</span> legacyRender<span class="token operator">?</span><span class="token operator">:</span> HTMLContentRender</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token literal-property property">render</span><span class="token operator">:</span> <span class="token function-variable function">ElementRender</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> element<span class="token punctuation">,</span> loading<span class="token punctuation">,</span> container <span class="token punctuation">}</span><span class="token punctuation">,</span> phase</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>legacyRender<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">legacyRender</span><span class="token punctuation">(</span><span class="token punctuation">{</span> loading<span class="token punctuation">,</span> <span class="token literal-property property">appContent</span><span class="token operator">:</span> element <span class="token operator">?</span> appContent <span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> containerElement <span class="token operator">=</span> <span class="token function">getContainer</span><span class="token punctuation">(</span>container<span class="token operator">!</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>phase <span class="token operator">!==</span> <span class="token string">&#39;unmounted&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> errorMsg <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>phase<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">case</span> <span class="token string">&#39;loading&#39;</span><span class="token operator">:</span>
          <span class="token keyword">case</span> <span class="token string">&#39;mounting&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[qiankun] Target container with </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>container<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> not existed while </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>appName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>phase<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
          <span class="token keyword">case</span> <span class="token string">&#39;mounted&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[qiankun] Target container with </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>container<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> not existed after </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>appName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>phase<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

          <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[qiankun] Target container with </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>container<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> not existed while </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>appName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> rendering!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">assertElementExist</span><span class="token punctuation">(</span>containerElement<span class="token punctuation">,</span> errorMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>containerElement <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>containerElement<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// clear the container</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>containerElement<span class="token operator">!</span><span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">rawRemoveChild</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>containerElement<span class="token punctuation">,</span> containerElement<span class="token operator">!</span><span class="token punctuation">.</span>firstChild<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// append the element to container if it exist</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">rawAppendChild</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>containerElement<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> render<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8C03\u7528 <code>getRender</code> \u83B7\u53D6 <code>render</code> \u65B9\u6CD5\u5E76\u6267\u884C</p><p><code> getContainer(container)</code> \u83B7\u53D6\u5B50\u5E94\u7528\u8981\u6302\u8F7D\u7684 DOM \u5143\u7D20\uFF0C\u5982\u679C\u6302\u8F7D DOM \u5143\u7D20\u6709\u5185\u5BB9\u5219\u6E05\u7A7A\u5185\u5BB9\uFF0C\u4E4B\u540E\u5C31\u662F\u5C06\u6211\u4EEC\u7684\u5B50\u5E94\u7528\u6DFB\u52A0\u5230\u6302\u8F7D DOM \u4E2D\u53BB\uFF0C\u8FD9\u4E00\u6B65\u6B63\u5E38\u7684\u8BDD\u5BB9\u5668\u4E2D\u5C06\u51FA\u73B0\u6211\u4EEC\u5B50\u5E94\u7528\u5185\u5BB9\u4E86\uFF0C\u4F46\u8FD8\u6CA1\u6709\u8FD0\u884C\u5B50\u5E94\u7528\u4E2D\u7684JS\u4EE3\u7801</p><p><strong>\u521B\u5EFA\u5B50\u5E94\u7528\u8FD0\u884C\u73AF\u5883\u6C99\u7BB1</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">let</span> global <span class="token operator">=</span> window<span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token function-variable function">mountSandbox</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token function-variable function">unmountSandbox</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> useLooseSandbox <span class="token operator">=</span> <span class="token keyword">typeof</span> sandbox <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token operator">!</span>sandbox<span class="token punctuation">.</span>loose<span class="token punctuation">;</span>
  <span class="token keyword">let</span> sandboxContainer<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>sandbox<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sandboxContainer <span class="token operator">=</span> <span class="token function">createSandboxContainer</span><span class="token punctuation">(</span>
      appName<span class="token punctuation">,</span>
      <span class="token comment">// FIXME should use a strict sandbox logic while remount, see https://github.com/umijs/qiankun/issues/518</span>
      initialAppWrapperGetter<span class="token punctuation">,</span>
      scopedCSS<span class="token punctuation">,</span>
      useLooseSandbox<span class="token punctuation">,</span>
      excludeAssetFilter<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7528\u6C99\u7BB1\u7684\u4EE3\u7406\u5BF9\u8C61\u4F5C\u4E3A\u63A5\u4E0B\u6765\u4F7F\u7528\u7684\u5168\u5C40\u5BF9\u8C61</span>
    global <span class="token operator">=</span> sandboxContainer<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>proxy <span class="token keyword">as</span> <span class="token keyword">typeof</span> window<span class="token punctuation">;</span>
    mountSandbox <span class="token operator">=</span> sandboxContainer<span class="token punctuation">.</span>mount<span class="token punctuation">;</span>
    unmountSandbox <span class="token operator">=</span> sandboxContainer<span class="token punctuation">.</span>unmount<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6C99\u7BB1\u7684\u4F5C\u7528\u5C31\u662F\u4FDD\u8BC1\u5B50\u5E94\u7528\u4E4B\u95F4\u72B6\u6001\u80FD\u72EC\u7ACB\u8FD0\u884C\uFF0C\u4E0D\u4F1A\u9020\u6210\u5168\u5C40\u6C61\u67D3\u548C\u76F8\u4E92\u5F71\u54CD\uFF0C\u4E0A\u9762\u4EE3\u7801\u901A\u8FC7 <code>createSandboxContainer</code> \u65B9\u6CD5\u521B\u5EFA\u4E00\u4E2A\u6C99\u7BB1\uFF0C\u8FD9\u91CC\u8FD4\u56DE\u7684 <code>sandboxContainer</code> \u5BF9\u8C61\u5C06\u5305\u542B\u4E00\u4E2A <code>proxy</code> \u7684\u5C5E\u6027\uFF0C\u8FD9\u4E2A <code>sandboxContainer.instance.proxy</code> \u5C06\u662F\u5B50\u5E94\u7528\u7684\u5168\u5C40\u8FD0\u884C\u7684\u73AF\u5883\uFF0C\u4E5F\u5C31\u662F\u5B50\u5E94\u7528\u7684\u5BF9\u4E8E\u5168\u5C40\u73AF\u5883 <code>window</code> \u7684\u4EFB\u4F55\u64CD\u4F5C\uFF0C\u4E5F\u88AB\u4EE3\u7406\u5230\u8FD9\u4E2A <code>proxy</code> \u5BF9\u8C61\u4E0A\uFF0C\u4EE5\u6B64\u6765\u8FBE\u5230\u73AF\u5883\u9694\u79BB\u7684\u4F5C\u7528\u3002\u5177\u4F53\u6C99\u7BB1\u7684\u5B9E\u73B0\u65B9\u5F0F\u4E0B\u6587\u518D\u7EC6\u8BB2\uFF0C\u8FD9\u91CC\u5148\u7EE7\u7EED\u5F80\u4E0B\u8D70</p><p>\u9664\u4E86\u4EE3\u7406\u5168\u5C40\u5BF9\u8C61\u5916 <code>sandboxContainer</code> \u8FD8\u66B4\u9732\u51FA\u6765 <code>mount</code>\uFF0C<code>unmount</code> \u65B9\u6CD5\uFF0C\u7B49\u6267\u884C\u5230\u8FD9\u91CC\u518D\u770B\u4ED6\u4EEC\u7684\u4F5C\u7528</p><p><strong>\u6267\u884CbeforeLoad\u94A9\u5B50\u51FD\u6570</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">const</span> <span class="token punctuation">{</span> beforeUnmount <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> afterUnmount <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> afterMount <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> beforeMount <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> beforeLoad <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">mergeWith</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">getAddOns</span><span class="token punctuation">(</span>global<span class="token punctuation">,</span> assetPublicPath<span class="token punctuation">)</span><span class="token punctuation">,</span>
    lifeCycles<span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token parameter">v1<span class="token punctuation">,</span> v2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">concat</span><span class="token punctuation">(</span>v1 <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> v2 <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> <span class="token function">execHooksChain</span><span class="token punctuation">(</span><span class="token function">toArray</span><span class="token punctuation">(</span>beforeLoad<span class="token punctuation">)</span><span class="token punctuation">,</span> app<span class="token punctuation">,</span> global<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53D6\u51FA\u8981\u6267\u884C\u7684 <code>beforeLoad</code> \u94A9\u5B50\u65B9\u6CD5\uFF0C\u4EE5\u4E0B\u627E\u5230\u7684\u8981\u6267\u884C\u7684\u94A9\u5B50\u7684\u5B9A\u4E49\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// addons/engineFlag</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">getAddOn</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">global</span><span class="token operator">:</span> Window</span><span class="token punctuation">)</span><span class="token operator">:</span> FrameworkLifeCycles<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token keyword">async</span> <span class="token function">beforeLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      global<span class="token punctuation">.</span>__POWERED_BY_QIANKUN__ <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">async</span> <span class="token function">beforeMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      global<span class="token punctuation">.</span>__POWERED_BY_QIANKUN__ <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">async</span> <span class="token function">beforeUnmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">delete</span> global<span class="token punctuation">.</span>__POWERED_BY_QIANKUN__<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">getAddOn</span><span class="token punctuation">(</span>global<span class="token operator">:</span> Window<span class="token punctuation">,</span> publicPath <span class="token operator">=</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token operator">:</span> FrameworkLifeCycles<span class="token operator">&lt;</span>any<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> hasMountedOnce <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token keyword">async</span> <span class="token function">beforeLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      global<span class="token punctuation">.</span>__INJECTED_PUBLIC_PATH_BY_QIANKUN__ <span class="token operator">=</span> publicPath<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">async</span> <span class="token function">beforeMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>hasMountedOnce<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        global<span class="token punctuation">.</span>__INJECTED_PUBLIC_PATH_BY_QIANKUN__ <span class="token operator">=</span> publicPath<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">async</span> <span class="token function">beforeUnmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>rawPublicPath <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">delete</span> global<span class="token punctuation">.</span>__INJECTED_PUBLIC_PATH_BY_QIANKUN__<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        global<span class="token punctuation">.</span>__INJECTED_PUBLIC_PATH_BY_QIANKUN__ <span class="token operator">=</span> rawPublicPath<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      hasMountedOnce <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6700\u540E\u662F\u6211\u4EEC\u4F7F\u7528 registerMicroApps \u5B9A\u4E49\u7684\u94A9\u5B50 </span>
<span class="token function">registerMicroApps</span><span class="token punctuation">(</span>apps<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">beforeLoad</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">app</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;before load&quot;</span><span class="token punctuation">,</span> app<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5148\u6267\u884C <code>beforeLoad</code> \u94A9\u5B50, \u4ECE\u4E0A\u9762\u8D34\u51FA\u7684\u4EE3\u7801\u53EF\u4EE5\u770B\u5230\u5185\u7F6E <code>beforeLoad</code> \u94A9\u5B50\u4F5C\u7528\u5C31\u662F\u8BBE\u7F6E\u51E0\u4E2A\u5168\u5C40\u53D8\u91CF\uFF1A</p><ul><li><p><code>global.__POWERED_BY_QIANKUN__ = true</code>\uFF0C\u7ED9\u5B50\u5E94\u7528\u5168\u5C40\u73AF\u5883\u8BBE\u7F6E\u5F53\u524D\u662F\u5FAE\u5E94\u7528\u542F\u52A8\u7684\u6807\u8BC6</p></li><li><p><code>global.__INJECTED_PUBLIC_PATH_BY_QIANKUN__ = publicPath</code>\uFF0C\u6807\u8BC6\u5F53\u524D\u5B50\u5E94\u7528\u542F\u52A8\u7684\u6839\u8DEF\u5F84</p></li></ul><p>\u6700\u540E\u5C06\u6267\u884C\u6211\u4EEC\u8BBE\u7F6E\u7684\u94A9\u5B50</p><p><strong>\u6267\u884C\u5B50\u5E94\u7528\u4E2D\u7684JS</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token literal-property property">scriptExports</span><span class="token operator">:</span> any <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">execScripts</span><span class="token punctuation">(</span>global<span class="token punctuation">,</span> <span class="token operator">!</span>useLooseSandbox<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// get the lifecycle hooks from module exports</span>
<span class="token keyword">const</span> <span class="token literal-property property">scriptExports</span><span class="token operator">:</span> any <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">execScripts</span><span class="token punctuation">(</span>global<span class="token punctuation">,</span> <span class="token operator">!</span>useLooseSandbox<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> bootstrap<span class="token punctuation">,</span> mount<span class="token punctuation">,</span> unmount<span class="token punctuation">,</span> update <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">getLifecyclesFromExports</span><span class="token punctuation">(</span>
  scriptExports<span class="token punctuation">,</span>
  appName<span class="token punctuation">,</span>
  global<span class="token punctuation">,</span>
  sandboxContainer<span class="token operator">?.</span>instance<span class="token operator">?.</span>latestSetProp<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u6587\u6709\u4ECB\u7ECD\u5230 <code>execScripts</code> \u662F\u6267\u884C\u5B50\u5E94\u7528JS\u4EE3\u7801\u7684\u65B9\u6CD5\uFF0C\u5B83\u63A5\u6536\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u5C31\u662F <code>global</code>\uFF0C\u4F20\u5165\u8FD9\u4E2A <code>global</code> \u540E\uFF0C\u5B50\u5E94\u7528\u7684\u8FD0\u884C\u5C06\u4EE5 <code>global</code> \u4F5C\u4E3A\u5168\u5C40\u53D8\u91CF\uFF0C\u8FD9\u4E00\u6B65\u7684\u5B9E\u73B0\u5C31\u662F\u7C7B\u4F3C\u4E0B\u9762\u7684\u8FD9\u6BB5Demo</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">window</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
<span class="token comment">// \u5B50\u5E94\u7528\u7684\u8FD0\u884C\u6C34\u7BB1</span>
<span class="token comment">// \u8FD9\u91CC\u5BF9\u5168\u5C40window \u7684\u64CD\u4F5C\u5C06\u88AB\u9694\u79BB\uFF0C\u4E0D\u4F1A\u5F71\u54CD\u5230\u5916\u90E8\u7684\u5168\u5C40 window</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>proxy<span class="token punctuation">)</span>
<span class="token comment">// window \u5C06\u7528\u4F20\u5165\u7684 proxy \u4EE3\u66FF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C\u5B8C <code>execScripts</code> \u540E\u5C06\u8FD4\u56DE\u7684 <code>bootstrap</code>, <code>mount</code>, <code>unmount</code>, <code>update</code> \u8FD9\u4E2A\u5BFC\u51FA\u7684\u65B9\u6CD5</p><p><strong>\u83B7\u53D6\u5FAE\u5E94\u7528\u4E2D\u5168\u5C40\u72B6\u6001\u76F8\u5173\u7684\u8BBE\u7F6E</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">const</span> <span class="token punctuation">{</span>
    onGlobalStateChange<span class="token punctuation">,</span>
    setGlobalState<span class="token punctuation">,</span>
    offGlobalStateChange<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> CallableFunction<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token function">getMicroAppStateActions</span><span class="token punctuation">(</span>appInstanceId<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u540E\u5C31\u662F\u6267\u884C\u6302\u8F7D\u540E\u7684\u94A9\u5B50\u4E86</p><p>\u5230\u6B64\u5927\u81F4\u68B3\u7406\u4E86\u4E00\u4E0B\u52A0\u8F7D\u5B50\u5E94\u7528\u7684\u6267\u884C\u8FC7\u7A0B\uFF0C\u63A5\u4E0B\u6765\u9488\u5BF9\u4E00\u4E9B\u4E2A\u522B\u5730\u65B9\u518D\u6DF1\u5165\u4E86\u89E3\u4E00\u4E0B</p><h2 id="\u5B50\u5E94\u7528\u6C99\u7BB1" tabindex="-1"><a class="header-anchor" href="#\u5B50\u5E94\u7528\u6C99\u7BB1" aria-hidden="true">#</a> \u5B50\u5E94\u7528\u6C99\u7BB1</h2><p>\u63A5\u4E0B\u6765\u770B\u770B qiankun \u6C99\u7BB1\u7684\u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u751F\u6210\u5E94\u7528\u8FD0\u884C\u65F6\u6C99\u7BB1
 *
 * \u6C99\u7BB1\u5206\u4E24\u4E2A\u7C7B\u578B\uFF1A
 * 1. app \u73AF\u5883\u6C99\u7BB1
 *  app \u73AF\u5883\u6C99\u7BB1\u662F\u6307\u5E94\u7528\u521D\u59CB\u5316\u8FC7\u4E4B\u540E\uFF0C\u5E94\u7528\u4F1A\u5728\u4EC0\u4E48\u6837\u7684\u4E0A\u4E0B\u6587\u73AF\u5883\u8FD0\u884C\u3002\u6BCF\u4E2A\u5E94\u7528\u7684\u73AF\u5883\u6C99\u7BB1\u53EA\u4F1A\u521D\u59CB\u5316\u4E00\u6B21\uFF0C\u56E0\u4E3A\u5B50\u5E94\u7528\u53EA\u4F1A\u89E6\u53D1\u4E00\u6B21 bootstrap \u3002
 *  \u5B50\u5E94\u7528\u5728\u5207\u6362\u65F6\uFF0C\u5B9E\u9645\u4E0A\u5207\u6362\u7684\u662F app \u73AF\u5883\u6C99\u7BB1\u3002
 * 2. render \u6C99\u7BB1
 *  \u5B50\u5E94\u7528\u5728 app mount \u5F00\u59CB\u524D\u751F\u6210\u597D\u7684\u7684\u6C99\u7BB1\u3002\u6BCF\u6B21\u5B50\u5E94\u7528\u5207\u6362\u8FC7\u540E\uFF0Crender \u6C99\u7BB1\u90FD\u4F1A\u91CD\u73B0\u521D\u59CB\u5316\u3002
 *
 * \u8FD9\u4E48\u8BBE\u8BA1\u7684\u76EE\u7684\u662F\u4E3A\u4E86\u4FDD\u8BC1\u6BCF\u4E2A\u5B50\u5E94\u7528\u5207\u6362\u56DE\u6765\u4E4B\u540E\uFF0C\u8FD8\u80FD\u8FD0\u884C\u5728\u5E94\u7528 bootstrap \u4E4B\u540E\u7684\u73AF\u5883\u4E0B\u3002
 *
 * <span class="token keyword">@param</span> <span class="token parameter">appName</span>
 * <span class="token keyword">@param</span> <span class="token parameter">elementGetter</span>
 * <span class="token keyword">@param</span> <span class="token parameter">scopedCSS</span>
 * <span class="token keyword">@param</span> <span class="token parameter">useLooseSandbox</span>
 * <span class="token keyword">@param</span> <span class="token parameter">excludeAssetFilter</span>
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createSandboxContainer</span><span class="token punctuation">(</span>
  <span class="token literal-property property">appName</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token function-variable function">elementGetter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> HTMLElement <span class="token operator">|</span> ShadowRoot<span class="token punctuation">,</span>
  <span class="token literal-property property">scopedCSS</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span>
  useLooseSandbox<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span>
  excludeAssetFilter<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">url</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> boolean<span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token literal-property property">sandbox</span><span class="token operator">:</span> SandBox<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>Proxy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sandbox <span class="token operator">=</span> useLooseSandbox <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">LegacySandbox</span><span class="token punctuation">(</span>appName<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ProxySandbox</span><span class="token punctuation">(</span>appName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    sandbox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SnapshotSandbox</span><span class="token punctuation">(</span>appName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> bootstrappingFreers <span class="token operator">=</span> <span class="token function">patchAtBootstrapping</span><span class="token punctuation">(</span>appName<span class="token punctuation">,</span> elementGetter<span class="token punctuation">,</span> sandbox<span class="token punctuation">,</span> scopedCSS<span class="token punctuation">,</span> excludeAssetFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token literal-property property">mountingFreers</span><span class="token operator">:</span> Freer<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token literal-property property">sideEffectsRebuilders</span><span class="token operator">:</span> Rebuilder<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">instance</span><span class="token operator">:</span> sandbox<span class="token punctuation">,</span>
    <span class="token doc-comment comment">/**
     * \u6C99\u7BB1\u88AB mount
     * \u53EF\u80FD\u662F\u4ECE bootstrap \u72B6\u6001\u8FDB\u5165\u7684 mount
     * \u4E5F\u53EF\u80FD\u662F\u4ECE unmount \u4E4B\u540E\u518D\u6B21\u5524\u9192\u8FDB\u5165 mount
     */</span>
    <span class="token keyword">async</span> <span class="token function">mount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">/* ------------------------------------------ \u56E0\u4E3A\u6709\u4E0A\u4E0B\u6587\u4F9D\u8D56\uFF08window\uFF09\uFF0C\u4EE5\u4E0B\u4EE3\u7801\u6267\u884C\u987A\u5E8F\u4E0D\u80FD\u53D8 ------------------------------------------ */</span>

      <span class="token comment">/* ------------------------------------------ 1. \u542F\u52A8/\u6062\u590D \u6C99\u7BB1------------------------------------------ */</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/**
     * \u6062\u590D global \u72B6\u6001\uFF0C\u4F7F\u5176\u80FD\u56DE\u5230\u5E94\u7528\u52A0\u8F7D\u4E4B\u524D\u7684\u72B6\u6001
     */</span>
    <span class="token keyword">async</span> <span class="token function">unmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6839\u636E\u60C5\u51B5\u4E0A\u9762\u6709\u4E09\u4E2A\u521B\u5EFA\u6C99\u7BB1\u7684\u65B9\u5F0F\uFF1A<code>ProxySandbox</code>\u3001 <code>LegacySandbox</code>\u3001 <code>SnapshotSandbox</code></p><h3 id="proxysandbox" tabindex="-1"><a class="header-anchor" href="#proxysandbox" aria-hidden="true">#</a> ProxySandbox</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u57FA\u4E8E Proxy \u5B9E\u73B0\u7684\u6C99\u7BB1
 */</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">ProxySandbox</span> <span class="token keyword">implements</span> <span class="token class-name">SandBox</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/** window \u503C\u53D8\u66F4\u8BB0\u5F55 */</span>
  <span class="token keyword">private</span> updatedValueSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token operator">&lt;</span>PropertyKey<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">;</span> <span class="token comment">// \u6C99\u7BB1\u7684\u540D\u5B57</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> SandBoxType<span class="token punctuation">;</span> <span class="token comment">// \u6C99\u7BB1\u7684\u7C7B\u578B</span>
  <span class="token literal-property property">proxy</span><span class="token operator">:</span> WindowProxy<span class="token punctuation">;</span> <span class="token comment">// \u6C99\u7BB1\u5BFC\u51FA\u7684\u4EE3\u7406\u5B9E\u4F53</span>
  sandboxRunning <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// \u6C99\u7BB1\u662F\u5426\u5728\u8FD0\u884C\u4E2D</span>
  <span class="token literal-property property">latestSetProp</span><span class="token operator">:</span> PropertyKey <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token function">active</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u542F\u52A8\u6C99\u7BB1</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>sandboxRunning<span class="token punctuation">)</span> activeSandboxCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>sandboxRunning <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">inactive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5173\u95ED\u6C99\u7BB1</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[qiankun:sandbox] </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> modified global properties restore...</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
        <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>updatedValueSet<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">--</span>activeSandboxCount <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      variableWhiteList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">p</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>proxy<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// @ts-ignore</span>
          <span class="token keyword">delete</span> window<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>sandboxRunning <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">name</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> SandBoxType<span class="token punctuation">.</span>Proxy<span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> updatedValueSet <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> rawWindow <span class="token operator">=</span> window<span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> fakeWindow<span class="token punctuation">,</span> propertiesWithGetter <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">createFakeWindow</span><span class="token punctuation">(</span>rawWindow<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> descriptorTargetMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token operator">&lt;</span>PropertyKey<span class="token punctuation">,</span> SymbolTarget<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">hasOwnProperty</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">key</span><span class="token operator">:</span> PropertyKey</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> fakeWindow<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">||</span> rawWindow<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>fakeWindow<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token comment">// prosy \u914D\u7F6E</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>proxy <span class="token operator">=</span> proxy<span class="token punctuation">;</span>
    activeSandboxCount<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6E90\u7801\u4E2D\u8BF4\u660E\u4E86 <code>ProxySandbox</code> \u7C7B\u4E2D\u51E0\u4E2A\u5C5E\u6027\u7684\u610F\u601D\uFF1A</p><ul><li><p><code>name</code>\uFF1A\u6C99\u7BB1\u7684\u540D\u5B57</p></li><li><p><code>type</code>\uFF1A\u6C99\u7BB1\u7684\u7C7B\u578B</p></li><li><p><code>proxy</code>\uFF1A\u6C99\u7BB1\u5BFC\u51FA\u7684\u4EE3\u7406\u5B9E\u4F53</p></li><li><p><code>sandboxRunning</code>\uFF1A\u6C99\u7BB1\u662F\u5426\u5728\u8FD0\u884C\u4E2D</p></li><li><p><code>latestSetProp</code>\uFF1A latest set property</p></li><li><p><code>active</code>\uFF1A\u542F\u52A8\u6C99\u7BB1</p></li><li><p><code>inactive</code>\uFF1A\u5173\u95ED\u6C99\u7BB1</p></li></ul><p>\u4ECE <code>constructor</code> \u4E2D\u7684\u4EE3\u7801\u53EF\u4EE5\u770B\u5230\u6838\u5FC3\u5C31\u662F\u4F7F\u7528 <code>proxy</code> \u7ED9 <code>fakeWindow</code> \u8BBE\u7F6E\u4E86\u4EE3\u7406\uFF0C<code>fakeWindow</code> \u662F\u901A\u8FC7 <code>createFakeWindow(rawWindow)</code> \u65B9\u6CD5\u521B\u5EFA\u7684</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createFakeWindow</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">global</span><span class="token operator">:</span> Window</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> propertiesWithGetter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token operator">&lt;</span>PropertyKey<span class="token punctuation">,</span> boolean<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> fakeWindow <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">as</span> FakeWindow<span class="token punctuation">;</span>
  Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>global<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">p</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> descriptor <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>global<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token operator">!</span>descriptor<span class="token operator">?.</span>configurable<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">p</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> descriptor <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>global<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>descriptor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> hasGetter <span class="token operator">=</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>descriptor<span class="token punctuation">,</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>
          p <span class="token operator">===</span> <span class="token string">&#39;top&#39;</span> <span class="token operator">||</span>
          p <span class="token operator">===</span> <span class="token string">&#39;parent&#39;</span> <span class="token operator">||</span>
          p <span class="token operator">===</span> <span class="token string">&#39;self&#39;</span> <span class="token operator">||</span>
          p <span class="token operator">===</span> <span class="token string">&#39;window&#39;</span> <span class="token operator">||</span>
          <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;test&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>p <span class="token operator">===</span> <span class="token string">&#39;mockTop&#39;</span> <span class="token operator">||</span> p <span class="token operator">===</span> <span class="token string">&#39;mockSafariTop&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span> <span class="token punctuation">{</span>
          descriptor<span class="token punctuation">.</span>configurable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasGetter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            descriptor<span class="token punctuation">.</span>writable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>hasGetter<span class="token punctuation">)</span> propertiesWithGetter<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5229\u7528 Object.definedProperty \u4EE3\u7406 window\u5C5E\u6027\u5230fakeWindow\u5BF9\u8C61\u4E2D</span>
        <span class="token function">rawObjectDefineProperty</span><span class="token punctuation">(</span>fakeWindow<span class="token punctuation">,</span> p<span class="token punctuation">,</span> Object<span class="token punctuation">.</span><span class="token function">freeze</span><span class="token punctuation">(</span>descriptor<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    fakeWindow<span class="token punctuation">,</span>
    propertiesWithGetter<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u89E3\u91CA <code>createFakeWindow</code> \u7684\u4EE3\u7801\u524D\uFF0C\u5148\u7B80\u5355\u56DE\u987E\u4E00\u4E0B\u5BF9\u8C61\u7684\u5C5E\u6027\u63CF\u8FF0\u7B26</p><p><strong>\u5BF9\u8C61\u5C5E\u6027\u63CF\u8FF0\u7B26</strong></p><p>\u5BF9\u8C61\u76EE\u524D\u5B58\u5728\u4E24\u79CD\u4E3B\u8981\u5F62\u5F0F\u7684\u5C5E\u6027\u63CF\u8FF0\u7B26\uFF1A\u6570\u636E\u63CF\u8FF0\u7B26\u548C\u5B58\u53D6\u63CF\u8FF0\u7B26</p><ul><li><p>\u6570\u636E\u63CF\u8FF0\u7B26\u53EF\u9009\u7684\u952E\u503C\u4E3A\uFF1A</p><ul><li><p>value\uFF1A \u8BE5\u5C5E\u6027\u5BF9\u5E94\u7684\u503C\u3002\u53EF\u4EE5\u662F\u4EFB\u4F55\u6709\u6548\u7684 JavaScript \u503C\uFF08\u6570\u503C\uFF0C\u5BF9\u8C61\uFF0C\u51FD\u6570\u7B49\uFF09</p></li><li><p>writable\uFF1A\u5F53\u4E14\u4EC5\u5F53\u8BE5\u5C5E\u6027\u7684 <code>writable</code> \u952E\u503C\u4E3A <code>true</code> \u65F6\uFF0C\u5C5E\u6027\u7684\u503C\uFF0C\u4E5F\u5C31\u662F\u4E0A\u9762\u7684 <code>value</code>\uFF0C\u624D\u80FD\u88AB\u8D4B\u503C\u8FD0\u7B97\u7B26\u6539\u53D8</p></li></ul></li><li><p>\u5B58\u53D6\u63CF\u8FF0\u7B26\u53EF\u9009\u7684\u952E\u503C\u4E3A\uFF1A</p><ul><li><p>get\uFF1A\u5F53\u8BBF\u95EE\u8BE5\u5C5E\u6027\u65F6\uFF0C\u4F1A\u8C03\u7528\u6B64\u51FD\u6570</p></li><li><p>set\uFF1A\u5F53\u5C5E\u6027\u503C\u88AB\u4FEE\u6539\u65F6\uFF0C\u4F1A\u8C03\u7528\u6B64\u51FD\u6570</p></li></ul></li><li><p>\u6570\u636E\u63CF\u8FF0\u7B26\u5B58\u53D6\u63CF\u8FF0\u7B26\u90FD\u6709\u7684\u952E\u503C\u4E3A\uFF1A</p><ul><li><p>configurable\uFF1A\u5F53\u4E14\u4EC5\u5F53\u8BE5\u5C5E\u6027\u7684 <code>configurable</code> \u952E\u503C\u4E3A <code>true</code> \u65F6\uFF0C\u8BE5\u5C5E\u6027\u7684\u63CF\u8FF0\u7B26\u624D\u80FD\u591F\u88AB\u6539\u53D8\uFF0C\u540C\u65F6\u8BE5\u5C5E\u6027\u4E5F\u80FD\u4ECE\u5BF9\u5E94\u7684\u5BF9\u8C61\u4E0A\u88AB\u5220\u9664</p></li><li><p>enumerable: \u5F53\u4E14\u4EC5\u5F53\u8BE5\u5C5E\u6027\u7684 <code>enumerable</code> \u952E\u503C\u4E3A <code>true</code> \u65F6\uFF0C\u8BE5\u5C5E\u6027\u624D\u4F1A\u51FA\u73B0\u5728\u5BF9\u8C61\u7684\u679A\u4E3E\u5C5E\u6027\u4E2D</p></li></ul></li></ul><p>\u56DE\u5230 <code>createFakeWindow</code> \u4E2D\uFF0C\u5B83\u7684\u4F5C\u7528\u5C31\u662F\u904D\u5386 <code>window</code> \u6240\u6709\u81EA\u8EAB\u5C5E\u6027\uFF0C\u627E\u51FA\u5177\u6709\u63CF\u8FF0\u7B26\u7684\u5C5E\u6027\uFF0C\u5BF9\u4E8E\u8FD9\u4E9B\u5C5E\u6027\u8FDB\u884C\u4EE5\u4E0B\u64CD\u4F5C\uFF1A</p><ol><li><p>\u4F7F\u7528 <code>Object.defineProperty</code> \u5C06\u8FD9\u4E9B\u5C5E\u6027\u4EE3\u7406\u5230 <code>fakeWindow</code> \u5BF9\u8C61\u4E0A</p></li><li><p>\u5982\u679C\u662F\u5177\u6709\u5B58\u53D6\u63CF\u8FF0\u7B26\uFF08get\u65B9\u6CD5\uFF09\uFF0C\u5C06\u8FD9\u4E2A\u5C5E\u6027\u4FDD\u5B58\u5230 <code>propertiesWithGetter</code> \u4E2D</p></li></ol><p>\u6700\u540E\u8FD4\u56DE <code>fakeWindow</code> \u548C <code>propertiesWithGetter</code>\uFF0C\u603B\u7ED3\u4E00\u4E0B\u8FD9\u4E24\u4E2A\u503C\uFF1A</p><ul><li><p>fakeWindow\uFF1A \u4EE3\u7406\u4E86 <code>window</code> \u540E\u7684\u503C</p></li><li><p>propertiesWithGetter: \u4FDD\u5B58 <code>window</code> \u4E0A\u5177\u6709\u5B58\u53D6\u63CF\u8FF0\u7B26\u7684\u4E00\u4E9B\u5C5E\u6027</p></li></ul><p>\u56DE\u5230 <code>ProxySandbox</code> \u6784\u5EFA\u51FD\u4E2D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>fakeWindow<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>proxy</code> \u4EE3\u7406\u4E86 <code>fakeWindow</code> \u5BF9\u8C61\uFF0C\u6CE8\u610F <code>fakeWindow</code> \u8868\u793A\u771F\u6B63\u7684\u5168\u5C40\u73AF\u5883 <code>window</code>\uFF0C<code>proxy</code> \u5219\u662F\u5F53\u524D\u5B50\u5E94\u7528\u7684\u5168\u5C40\u73AF\u5883</p><p>\u63A5\u7740\u91CD\u70B9\u770B<code>Proxy</code>\u4E2D <code>set</code> \u548C <code>get</code> \u65B9\u6CD5\u7684\u5B9E\u73B0</p><p><strong>set</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token literal-property property">set</span><span class="token operator">:</span> <span class="token punctuation">(</span>target<span class="token operator">:</span> FakeWindow<span class="token punctuation">,</span> <span class="token literal-property property">p</span><span class="token operator">:</span> PropertyKey<span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter">boolean</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sandboxRunning<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// We must kept its description while the property existed in rawWindow before</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>target<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> rawWindow<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> descriptor <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>rawWindow<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> writable<span class="token punctuation">,</span> configurable<span class="token punctuation">,</span> enumerable <span class="token punctuation">}</span> <span class="token operator">=</span> descriptor<span class="token operator">!</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>writable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> p<span class="token punctuation">,</span> <span class="token punctuation">{</span>
            configurable<span class="token punctuation">,</span>
            enumerable<span class="token punctuation">,</span>
            writable<span class="token punctuation">,</span>
            value<span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// @ts-ignore</span>
        target<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>variableWhiteList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// @ts-ignore</span>
        rawWindow<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      updatedValueSet<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>latestSetProp <span class="token operator">=</span> p<span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[qiankun] Set window.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>p<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> while sandbox destroyed or inactive in </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5728 strict-mode \u4E0B\uFF0CProxy \u7684 handler.set \u8FD4\u56DE false \u4F1A\u629B\u51FA TypeError\uFF0C\u5728\u6C99\u7BB1\u5378\u8F7D\u7684\u60C5\u51B5\u4E0B\u5E94\u8BE5\u5FFD\u7565\u9519\u8BEF</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u51FA\u73B0\u7684 <code>target</code>\uFF0C\u8868\u793A\u5F53\u524D\u5B50\u5E94\u7528\u8FD0\u884C\u5168\u5C40\u73AF\u5883<code>proxy</code>\uFF1B<code>rawWindow</code> \u8868\u793A\u771F\u6B63\u7684\u5168\u5C40\u73AF\u5883 <code>window</code>\u3002\u68B3\u7406\u4E00\u4E0B <code>set</code> \u7684\u5B9E\u73B0\u903B\u8F91\uFF1A</p><ul><li><p>\u5982\u679C\u5F53\u524D\u8FD9\u4E2A\u5C5E\u6027\u4E0D\u5B58\u5728\u5F53\u524D\u7684 <code>proxy</code> \u4F46\u53C8\u5B58\u5728\u4E8E <code>rawWindow</code> \u4E2D\uFF0C\u5219\u901A\u8FC7 <code>Object.defineProperty</code> \u7ED9\u5F53\u524D\u8FD9\u4E2A <code>proxy</code> \u6DFB\u52A0\u4E00\u4E2A\u4EE3\u7406</p></li><li><p>\u5982\u679C\u5F53\u524D\u5C5E\u6027\u5DF2\u7ECF\u5B58\u4E8E <code>prosy</code> \u4E2D\uFF0C\u5219\u76F4\u63A5\u6DFB\u52A0\u4FEE\u6539\u8FD9\u4E2A\u503C</p></li><li><p><code>variableWhiteList</code> \u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u4FDD\u5B58\u7740\u53EF\u4EE5\u5BF9 <code>rawWindow</code> \u8FDB\u884C\u4FEE\u6539\u7684\u5C5E\u6027\uFF0C\u5982\u679C\u5F53\u524D\u4FEE\u6539\u7684\u5C5E\u6027\u7B26\u5408\u6761\u4EF6\uFF0C\u90A3\u4E48\u4E5F\u5BF9 <code>rawWindow</code> \u4E2D\u7684\u5C5E\u6027\u8FDB\u884C\u4FEE\u6539</p><p>\u6E90\u7801 <code>variableWhiteList</code> \u4E2D\u7684\u5C5E\u6027\u4E0D\u591A\uFF1A <code>[&#39;System&#39;, &#39;__cjsWrapper&#39;, &#39;&#39;__REACT_ERROR_OVERLAY_GLOBAL_HOOK__&#39;&#39;]</code></p></li><li><p><code>updatedValueSet</code> \u662F\u4E00\u4E2A <code>Set</code> \u7ED3\u6784\uFF0C\u4F5C\u7528\u662F\u4FDD\u5B58\u53D8\u66F4\u8BB0\u5F55\uFF0C\u4E5F\u5C31\u662F\u8BF4\u5BF9\u5F53\u524D <code>proxy</code> \u8FDB\u884C\u4E86\u4FEE\u6539\u7684\u5C5E\u6027\u90FD\u4F1A\u4FDD\u5B58\u5230 <code>updatedValueSet</code> \u4E2D</p></li><li><p><code>this.latestSetProp = p</code>\uFF0C\u8BB0\u5F55\u6700\u540E\u4E00\u4E2A\u4FEE\u6539\u7684\u5C5E\u6027</p></li></ul><p><strong>get</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token operator">:</span> FakeWindow<span class="token punctuation">,</span> <span class="token literal-property property">p</span><span class="token operator">:</span> PropertyKey<span class="token punctuation">)</span><span class="token operator">:</span> any <span class="token punctuation">{</span>
    <span class="token comment">// mark the symbol to document while accessing as document.createElement could know is invoked by which sandbox for dynamic append patcher</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>p <span class="token operator">===</span> <span class="token string">&#39;document&#39;</span> <span class="token operator">||</span> p <span class="token operator">===</span> <span class="token string">&#39;eval&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setCurrentRunningSandboxProxy</span><span class="token punctuation">(</span>proxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// FIXME if you have any other good ideas</span>
      <span class="token comment">// remove the mark in next tick, thus we can identify whether it in micro app or not</span>
      <span class="token comment">// this approach is just a workaround, it could not cover all complex cases, such as the micro app runs in the same task context with master in some case</span>
      <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCurrentRunningSandboxProxy</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">switch</span> <span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;document&#39;</span><span class="token operator">:</span>
          <span class="token keyword">return</span> document<span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token string">&#39;eval&#39;</span><span class="token operator">:</span>
          <span class="token comment">// eslint-disable-next-line no-eval</span>
          <span class="token keyword">return</span> eval<span class="token punctuation">;</span>
        <span class="token comment">// no default</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// eslint-disable-next-line no-nested-ternary</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> propertiesWithGetter<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
      <span class="token operator">?</span> <span class="token punctuation">(</span>rawWindow <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">[</span>p<span class="token punctuation">]</span>
      <span class="token operator">:</span> p <span class="token keyword">in</span> target
      <span class="token operator">?</span> <span class="token punctuation">(</span>target <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">[</span>p<span class="token punctuation">]</span>
      <span class="token operator">:</span> <span class="token punctuation">(</span>rawWindow <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">getTargetValue</span><span class="token punctuation">(</span>rawWindow<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>get</code> \u7684\u5B9E\u73B0\u6709\u4E00\u4E2A\u5224\u65AD\u5206\u652F <code>if (p === &#39;document&#39; || p === &#39;eval&#39;)</code>\uFF0C\u5927\u6982\u610F\u601D\u662F\u5982\u679C\u5728\u5F53\u524D\u73AF\u5883\u6267\u884C\u4E86 <code>document</code> \u548C <code>eval</code>\uFF0C\u5219\u5C06\u5F53\u524D <code>proxy</code> \u4FDD\u5B58\u5230\u4E00\u4E2A\u4E34\u65F6\u53D8\u91CF\u4E2D\uFF0C\u5728\u4E0B\u4E00\u6B21\u4E8B\u4EF6\u5FAA\u73AF\u540E\u518D\u5C06\u8FD9\u4E2A\u4E34\u65F6\u53D8\u91CF\u8BBE\u4E3A <code>null</code>\uFF0C\u81F3\u4E8E\u8FD9\u4E2A\u4E34\u65F6\u4EC0\u4E48\u65F6\u5019\u7528\u8FD9\u6668\u6682\u4E0D\u6DF1\u7A76\uFF0C\u603B\u4E4B\u8FD9\u4E2A\u4E34\u65F6\u5B58\u50A8\u7684 <code>prosy</code> \u4EC5\u5728\u5F53\u524D\u4E8B\u4EF6\u5FAA\u73AF\u4E2D\u4F1A\u88AB\u7528\u5230</p><p>\u8FD9\u91CC\u91CD\u70B9\u770B\u5230\u6700\u540E\u4E00\u6BB5\u53D6\u503C\u903B\u8F91\uFF0C\u7528\u4E86\u51E0\u4E2A\u4E09\u76EE\u8FD0\u7B97\u7B26\uFF0C\u603B\u7ED3\u6765\u8BF4\u662F\u5C31\u662F\u4F18\u5148\u4ECE\u5F53\u524D\u5168\u5C40\u73AF\u5883 <code>proxy</code> \u627E\u503C\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u518D\u4ECE <code>rawWindow</code> \u4E2D\u53D6\u503C</p><p>\u6700\u540E <code>getTargetValue(rawWindow, value)</code> \u4F5C\u7528\u662F\u5224\u65AD\u8FD9\u4E2A\u5C5E\u6027\u662F\u5426\u662F\u4E00\u4E9B\u7279\u6B8A\u7684\u5C5E\u6027\uFF0C\u662F\u7684\u8BDD\u518D\u989D\u5916\u505A\u4E0B\u5904\u7406\uFF0C\u4E2A\u522B\u60C5\u51B5\u8FD9\u91CC\u4E5F\u4E0D\u53BB\u5173\u5FC3\u4E86\uFF0C\u603B\u4E4B\u6700\u7EC8\u7684\u53D6\u503C\u903B\u8F91\u5C31\u662F\uFF1A<code>prost[properrty]||rawWindow[properrty]</code></p><p>\u770B\u5230\u8FD9\u91CC\u5176\u5B9E\u5C31\u5DEE\u4E0D\u591A\u63ED\u5F00\u4E86 qiankun \u5B9E\u73B0\u8FD0\u884C\u73AF\u5883\u6C99\u7BB1\u7684\u795E\u79D8\u9762\u7EB1\uFF0C\u4E0A\u6587\u7684 <code>proxy</code> \u5C06\u7528\u4E8E\u5B50\u5E94\u7528\u8FD0\u884C\u65F6\u5145\u5F53\u5168\u5C40 <code>window</code> \u7684\u89D2\u8272\uFF0C\u4E3A\u4E86\u65B9\u4FBF\u7406\u89E3\uFF0C\u5199\u4E86\u4E00\u4E2A\u7B80\u5355\u7684Demo:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">let</span> fakeWindow <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">let</span> rawWindow <span class="token operator">=</span> window
	<span class="token keyword">function</span> <span class="token function">createFakeWindow</span><span class="token punctuation">(</span><span class="token parameter">global<span class="token operator">=</span>window</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>global<span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">p</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				<span class="token keyword">const</span> descriptor <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>global<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">return</span> descriptor<span class="token punctuation">.</span>configurable<span class="token punctuation">;</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">p</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				<span class="token keyword">const</span> descriptor <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>global<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>descriptor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>fakeWindow<span class="token punctuation">,</span> p<span class="token punctuation">,</span> Object<span class="token punctuation">.</span><span class="token function">freeze</span><span class="token punctuation">(</span>descriptor<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">return</span> fakeWindow<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token function">createFakeWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
		<span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> p<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>target<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> rawWindow<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> descriptor <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>rawWindow<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">const</span> <span class="token punctuation">{</span> writable<span class="token punctuation">,</span> configurable<span class="token punctuation">,</span> enumerable <span class="token punctuation">}</span> <span class="token operator">=</span> descriptor
                <span class="token keyword">if</span> <span class="token punctuation">(</span>writable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> p<span class="token punctuation">,</span> <span class="token punctuation">{</span>
                        configurable<span class="token punctuation">,</span>
                        enumerable<span class="token punctuation">,</span>
                        writable<span class="token punctuation">,</span>
                        value<span class="token punctuation">,</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                target<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> target<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token operator">||</span>rawWindow<span class="token punctuation">[</span>p<span class="token punctuation">]</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>youName<span class="token punctuation">)</span> <span class="token comment">// undefined</span>
    proxy<span class="token punctuation">.</span>youName <span class="token operator">=</span> <span class="token string">&#39;lanjz&#39;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>youName<span class="token punctuation">)</span> <span class="token comment">// undefined</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>proxy<span class="token punctuation">.</span>youName<span class="token punctuation">)</span> <span class="token comment">// lanjz</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>proxy<span class="token punctuation">.</span>document<span class="token punctuation">)</span> <span class="token comment">// #document</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u52A0\u5916\u4E24\u4E2A\u6C99\u6761\u5B9E\u73B0\u539F\u7406\u6682\u65F6\u5148\u4E0D\u770B\u4E86 <code>LegacySandbox</code>\u3001 <code>SnapshotSandbox</code></p><h2 id="\u5173\u4E8E\u52A8\u6001\u521B\u5EFA\u7684\u6837\u5F0F\u548C\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#\u5173\u4E8E\u52A8\u6001\u521B\u5EFA\u7684\u6837\u5F0F\u548C\u811A\u672C" aria-hidden="true">#</a> \u5173\u4E8E\u52A8\u6001\u521B\u5EFA\u7684\u6837\u5F0F\u548C\u811A\u672C</h2><p>\u5BF9\u4E8E\u52A8\u6001\u521B\u5EFA\u7684\u6837\u5F0F\u548C\u811A\u672C\uFF0Cqiankun \u4E5F\u505A\u4E86\u5904\u7406\uFF0C\u8FD9\u90E8\u5206\u7684\u5904\u7406\u903B\u8F91\u5728\u521B\u5EFA\u6C99\u7BB1\u65F6\u5B9A\u4E49\u7684\uFF0C\u5206\u522B <code>mount</code> \u548C <code>unmount</code> \u4E24\u4E2A\u5C5E\u6027\u65B9\u6CD5\u4E2D\uFF0C\u5148\u770B\u4E0B <code>mount</code> \u7684\u5B9A\u4E49</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token doc-comment comment">/**
     * \u6C99\u7BB1\u88AB mount
     * \u53EF\u80FD\u662F\u4ECE bootstrap \u72B6\u6001\u8FDB\u5165\u7684 mount
     * \u4E5F\u53EF\u80FD\u662F\u4ECE unmount \u4E4B\u540E\u518D\u6B21\u5524\u9192\u8FDB\u5165 mount
     */</span>
    <span class="token keyword">async</span> <span class="token function">mount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">/* ------------------------------------------ 1. \u542F\u52A8/\u6062\u590D \u6C99\u7BB1------------------------------------------ */</span>
      sandbox<span class="token punctuation">.</span><span class="token function">active</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> sideEffectsRebuildersAtBootstrapping <span class="token operator">=</span> sideEffectsRebuilders<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> bootstrappingFreers<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> sideEffectsRebuildersAtMounting <span class="token operator">=</span> sideEffectsRebuilders<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>bootstrappingFreers<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>sideEffectsRebuildersAtBootstrapping<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sideEffectsRebuildersAtBootstrapping<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">rebuild</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">rebuild</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">/* ------------------------------------------ 2. \u5F00\u542F\u5168\u5C40\u53D8\u91CF\u8865\u4E01 ------------------------------------------*/</span>
      <span class="token comment">// render \u6C99\u7BB1\u542F\u52A8\u65F6\u5F00\u59CB\u52AB\u6301\u5404\u7C7B\u5168\u5C40\u76D1\u542C\uFF0C\u5C3D\u91CF\u4E0D\u8981\u5728\u5E94\u7528\u521D\u59CB\u5316\u9636\u6BB5\u6709 \u4E8B\u4EF6\u76D1\u542C/\u5B9A\u65F6\u5668 \u7B49\u526F\u4F5C\u7528</span>
      mountingFreers <span class="token operator">=</span> <span class="token function">patchAtMounting</span><span class="token punctuation">(</span>appName<span class="token punctuation">,</span> elementGetter<span class="token punctuation">,</span> sandbox<span class="token punctuation">,</span> scopedCSS<span class="token punctuation">,</span> excludeAssetFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">/* ------------------------------------------ 3. \u91CD\u7F6E\u4E00\u4E9B\u521D\u59CB\u5316\u65F6\u7684\u526F\u4F5C\u7528 ------------------------------------------*/</span>
      <span class="token comment">// \u5B58\u5728 rebuilder \u5219\u8868\u660E\u6709\u4E9B\u526F\u4F5C\u7528\u9700\u8981\u91CD\u5EFA</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>sideEffectsRebuildersAtMounting<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sideEffectsRebuildersAtMounting<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">rebuild</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">rebuild</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// clean up rebuilders</span>
      sideEffectsRebuilders <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6839\u636E\u6CE8\u91CA\uFF0C\u5927\u81F4\u53EF\u4EE5\u7406\u89E3\u8FD9\u6BB5\u4EE3\u7801\u7684\u4F5C\u7528\u5C31\u662F\u4ECE <code>sideEffectsRebuilders</code> \u4E2D\u53D6\u51FA\u4E8B\u4EF6\u7136\u540E\u6267\u884C\u8FD9\u4E9B\u4E8B\u4EF6\u7684\u8FC7\u7A0B\uFF0C\u6240\u4EE5\u5148\u8981\u641E\u61C2 <code>sideEffectsRebuilders</code> \u548C <code>bootstrappingFreers</code> \u8FD9\u4E24\u4E2A\u662F\u4EC0\u4E48\u4E1C\u897F</p><p><strong>sideEffectsRebuilders</strong></p><p><code>sideEffectsRebuilders</code> \u51FA\u73B0\u7684\u5730\u65B9\u5C31\u4E09\u5904\uFF1A</p><ol><li><p>\u5B9A\u4E49\u65F6\uFF1A<code>let sideEffectsRebuilders: Rebuilder[] = []</code></p></li><li><p>\u5728 <code>mount</code> \u6267\u884C\u65F6\u4F1A\u53D6\u51FA <code>sideEffectsRebuilders</code>\uFF0C\u5E76\u6267\u884C\uFF0C\u6700\u540E\u6E05\u7A7A\u64CD\u4F5C\uFF1A<code>sideEffectsRebuilders = []</code></p></li><li><p>\u5728 <code>unmount</code> \u9636\u6BB5\u4E5F\u4F1A\u53D6\u51FA <code>sideEffectsRebuilders</code>\uFF0C\u5E76\u6267\u884C</p></li></ol><p>\u603B\u4E4B\u8FD9\u4E9B\u4E8B\u4EF6\u662F <code>sideEffectsRebuilders</code> \u548C <code>mountingFreers</code> \u7EC4\u6210\u7684\uFF0C\u770B\u4E0B\u4ED6\u4EEC\u7684\u5B9A\u4E49</p><p><strong>sideEffectsRebuilders</strong></p><p>\u8FD9\u4E2A\u53D8\u91CF\u7684\u5B9A\u4E49\u662F\u5728\u5F53\u524D\u6C99\u7BB1\u7684\u6784\u9020\u51FD\u6570\u4E2D\u5B9A\u4E49\u7684\uFF1A<code>const bootstrappingFreers = patchAtBootstrapping(appName, elementGetter, sandbox, scopedCSS, excludeAssetFilter)</code></p><p><code>patchAtBootstrapping</code> \u6839\u636E\u5F53\u524D\u7684\u5168\u5C40\u73AF\u5883\u4EE3\u7406\u65B9\u5F0F\u7684\u4E0D\u540C\u8FD4\u56DE\u4E0D\u540C\u51FD\u6570\uFF0C\u8FD9\u91CC\u6211\u4EEC\u770B <code>patchStrictSandbox(appName, elementGetter, sandbox.proxy, false, scopedCSS, excludeAssetFilter)</code>\uFF0C\u4E5F\u662F\u610F\u5473\u7740 <code>bootstrappingFreers</code> \u662F <code>patchStrictSandbox</code> \u65B9\u6CD5\u8FD4\u56DE\u7684\uFF0C\u770B\u4E0B\u5B83\u7684\u5B9A\u4E49\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> bootstrappingPatchCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> mountingPatchCount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">patchStrictSandbox</span><span class="token punctuation">(</span>
  <span class="token literal-property property">appName</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token function-variable function">appWrapperGetter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> HTMLElement <span class="token operator">|</span> ShadowRoot<span class="token punctuation">,</span>
  <span class="token literal-property property">proxy</span><span class="token operator">:</span> Window<span class="token punctuation">,</span>
  mounting <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  scopedCSS <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  excludeAssetFilter<span class="token operator">?</span><span class="token operator">:</span> CallableFunction<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> Freer <span class="token punctuation">{</span>
  <span class="token keyword">let</span> containerConfig <span class="token operator">=</span> proxyAttachContainerConfigMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>proxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>containerConfig<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    containerConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
      appName<span class="token punctuation">,</span>
      proxy<span class="token punctuation">,</span>
      appWrapperGetter<span class="token punctuation">,</span>
      <span class="token literal-property property">dynamicStyleSheetElements</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">strictGlobal</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      excludeAssetFilter<span class="token punctuation">,</span>
      scopedCSS<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6BCF\u4E2A\u4EE3\u7406\u73AF\u5883\u90FD\u6620\u5C04\u4E00\u4E2A containerConfig</span>
    proxyAttachContainerConfigMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>proxy<span class="token punctuation">,</span> containerConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6240\u4EE5\u6709\u52A8\u6001\u6837\u5F0F\u8868\u90FD\u4FDD\u5B58\u5728 dynamicStyleSheetElements</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> dynamicStyleSheetElements <span class="token punctuation">}</span> <span class="token operator">=</span> containerConfig<span class="token punctuation">;</span>
  <span class="token comment">// \u52AB\u6301 document.createElements\u65B9\u6CD5</span>
  <span class="token keyword">const</span> unpatchDocumentCreate <span class="token operator">=</span> <span class="token function">patchDocumentCreateElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u52AB\u6301appdentChild\u548CremoveChild\u65B9\u6CD5</span>
  <span class="token keyword">const</span> unpatchDynamicAppendPrototypeFunctions <span class="token operator">=</span> <span class="token function">patchHTMLDynamicAppendPrototypeFunctions</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> elementAttachContainerConfigMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> elementAttachContainerConfigMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mounting<span class="token punctuation">)</span> bootstrappingPatchCount<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>mounting<span class="token punctuation">)</span> mountingPatchCount<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">free</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// bootstrap patch just called once but its freer will be called multiple times</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mounting <span class="token operator">&amp;&amp;</span> bootstrappingPatchCount <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> bootstrappingPatchCount<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mounting<span class="token punctuation">)</span> mountingPatchCount<span class="token operator">--</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> allMicroAppUnmounted <span class="token operator">=</span> mountingPatchCount <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> bootstrappingPatchCount <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// release the overwrite prototype after all the micro apps unmounted</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>allMicroAppUnmounted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">unpatchDynamicAppendPrototypeFunctions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">unpatchDocumentCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8BB0\u5F55\u6837\u5F0F\u8868</span>
    <span class="token function">recordStyledComponentsCSSRules</span><span class="token punctuation">(</span>dynamicStyleSheetElements<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">rebuild</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">rebuildCSSRules</span><span class="token punctuation">(</span>dynamicStyleSheetElements<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">stylesheetElement</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> appWrapper <span class="token operator">=</span> <span class="token function">appWrapperGetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u53D6\u51FA\u6837\u5F0F\u8868\u6267\u884C</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>appWrapper<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>stylesheetElement<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">rawHeadAppendChild</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>appWrapper<span class="token punctuation">,</span> stylesheetElement<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u6BCF\u4E2A\u4EE3\u7406 <code>proxy</code> \u90FD\u5BF9\u5E94\u4E86\u4E00\u4E2A <code>containerConfig</code> \u5BF9\u8C61\uFF0C\u6839\u636E\u6CE8\u91CA\u53EF\u4EE5\u77E5\u9053\u52A8\u6001\u6837\u5F0F\u7684\u521B\u5EFA\u4F1A\u4FDD\u5B58\u5230 <code>dynamicStyleSheetElements</code> \u5C5E\u6027\u4E2D</p><p>\u7136\u540E\u6267\u884C <code>const unpatchDocumentCreate = patchDocumentCreateElement()</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// patchers/dynamicAppend/patchAtBootstrapping</span>
<span class="token keyword">const</span> rawDocumentCreateElement <span class="token operator">=</span> <span class="token class-name">Document</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>createElement<span class="token punctuation">;</span>
<span class="token keyword">const</span> proxyAttachContainerConfigMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token operator">&lt;</span>WindowProxy<span class="token punctuation">,</span> ContainerConfig<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> elementAttachContainerConfigMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token operator">&lt;</span>HTMLElement<span class="token punctuation">,</span> ContainerConfig<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">patchDocumentCreateElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Document</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>createElement <span class="token operator">===</span> rawDocumentCreateElement<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Document</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">createElement</span> <span class="token operator">=</span> <span class="token keyword">function</span> createElement<span class="token operator">&lt;</span><span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token class-name">keyof</span> HTMLElementTagNameMap<span class="token operator">&gt;</span><span class="token punctuation">(</span>
      <span class="token keyword">this</span><span class="token operator">:</span> Document<span class="token punctuation">,</span>
      <span class="token literal-property property">tagName</span><span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span>
      options<span class="token operator">?</span><span class="token operator">:</span> ElementCreationOptions<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token operator">:</span> HTMLElement <span class="token punctuation">{</span>
      <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token function">rawDocumentCreateElement</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> tagName<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isHijackingTag</span><span class="token punctuation">(</span>tagName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> currentRunningSandboxProxy <span class="token operator">=</span> <span class="token function">getCurrentRunningSandboxProxy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>currentRunningSandboxProxy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> proxyContainerConfig <span class="token operator">=</span> proxyAttachContainerConfigMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>currentRunningSandboxProxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>proxyContainerConfig<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            elementAttachContainerConfigMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> proxyContainerConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> element<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">unpatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Document</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>createElement <span class="token operator">=</span> rawDocumentCreateElement<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>patchDocumentCreateElement</code> \u7684\u4F5C\u7528\u5176\u5B9E\u5C31\u662F\u52AB\u6301\u4E86\u539F\u751F\u7684 <code>Document.prototype.createElement</code> \u65B9\u6CD5\u3002\u5177\u4F53\u6D41\u7A0B\u4E3A\uFF1A</p><ol><li><p>\u5F53\u89E6\u53D1\u4E86 <code>Document.prototype.createElement</code> \u540E\u5148\u8C03\u7528\u539F\u751F\u7684<code>createElement</code> \u65B9\u6CD5\u83B7\u53D6\u7ED3\u679C <code>element</code></p></li><li><p>\u901A\u8FC7 <code>if (isHijackingTag(tagName)) </code> \u8BED\u53E5\u6765\u5224\u65AD\u662F\u5426\u505A\u8FDB\u4E00\u6B65\u5904\u7406\uFF0C<code>isHijackingTag(tagName)</code> \u8868\u793A\u5F53\u524D\u52A8\u6001\u521B\u5EFA\u5143\u7D20\u662F\u5426\u662F <code>SCRIPT</code>\u3001<code>LINK</code>\u3001<code>STYLE</code> \u4E2D\u7684\u4E00\u79CD\uFF0C\u5982\u679C\u662F\u7684\u8BDD\u4EE5<code>key-value</code> \u5F62\u5F0F\u4FDD\u5B58\u5230 <code>elementAttachContainerConfigMap</code>\u4E2D</p><ul><li><p>key\uFF1A\u5F53\u524D\u52A8\u6001\u521B\u5EFA\u5143\u7D20</p></li><li><p>value: \u5F53\u524D <code>\u4EE3\u7406\u73AF\u5883proxy</code> \u5BF9\u5E94\u7684 <code>containerConfig</code></p></li></ul></li></ol><p>\u8FD9\u91CC\u6211\u6682\u65F6\u7406\u89E3\u4E3A\u52A8\u6001\u521B\u5EFA\u7684\u5143\u7D20\u4E0E\u5F53\u524D <code>\u4EE3\u7406\u73AF\u5883proxy</code> \u505A\u4E86\u6620\u5C04\u5173\u7CFB\uFF0C\u5E94\u8BE5\u662F\u4E3A\u4E86\u65B9\u4FBF\u4E4B\u540E\u6839\u636E <code>\u52A8\u6001\u5143\u7D20</code> \u627E\u5230\u5F53\u524D\u7684\u6240\u5C5E\u7684 <code>\u4EE3\u7406\u73AF\u5883proxy</code></p><p>\u56DE\u5230 <code>patchStrictSandbox</code> \u65B9\u6CD5\u4E2D\uFF0C\u7EE7\u7EED\u5F80\u4E0B\u8D70\u6267\u884C\u4EE5\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">const</span> unpatchDynamicAppendPrototypeFunctions <span class="token operator">=</span> <span class="token function">patchHTMLDynamicAppendPrototypeFunctions</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> elementAttachContainerConfigMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> elementAttachContainerConfigMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// patchers/dynamicAppend/common.ts</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">patchHTMLDynamicAppendPrototypeFunctions</span><span class="token punctuation">(</span>
  <span class="token function-variable function">isInvokedByMicroApp</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">element</span><span class="token operator">:</span> HTMLElement</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> boolean<span class="token punctuation">,</span>
  <span class="token function-variable function">containerConfigGetter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">element</span><span class="token operator">:</span> HTMLElement</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ContainerConfig<span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Just overwrite it while it have not been overwrite</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    <span class="token class-name">HTMLHeadElement</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>appendChild <span class="token operator">===</span> rawHeadAppendChild <span class="token operator">&amp;&amp;</span>
    <span class="token class-name">HTMLBodyElement</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>appendChild <span class="token operator">===</span> rawBodyAppendChild <span class="token operator">&amp;&amp;</span>
    <span class="token class-name">HTMLHeadElement</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>insertBefore <span class="token operator">===</span> rawHeadInsertBefore
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">HTMLHeadElement</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>appendChild <span class="token operator">=</span> <span class="token function">getOverwrittenAppendChildOrInsertBefore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">rawDOMAppendOrInsertBefore</span><span class="token operator">:</span> rawHeadAppendChild<span class="token punctuation">,</span>
      containerConfigGetter<span class="token punctuation">,</span>
      isInvokedByMicroApp<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">typeof</span> rawHeadAppendChild<span class="token punctuation">;</span>
    <span class="token class-name">HTMLBodyElement</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>appendChild <span class="token operator">=</span> <span class="token function">getOverwrittenAppendChildOrInsertBefore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">rawDOMAppendOrInsertBefore</span><span class="token operator">:</span> rawBodyAppendChild<span class="token punctuation">,</span>
      containerConfigGetter<span class="token punctuation">,</span>
      isInvokedByMicroApp<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">typeof</span> rawBodyAppendChild<span class="token punctuation">;</span>

    <span class="token class-name">HTMLHeadElement</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>insertBefore <span class="token operator">=</span> <span class="token function">getOverwrittenAppendChildOrInsertBefore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">rawDOMAppendOrInsertBefore</span><span class="token operator">:</span> rawHeadInsertBefore <span class="token keyword">as</span> any<span class="token punctuation">,</span>
      containerConfigGetter<span class="token punctuation">,</span>
      isInvokedByMicroApp<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">typeof</span> rawHeadInsertBefore<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Just overwrite it while it have not been overwrite</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    <span class="token class-name">HTMLHeadElement</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>removeChild <span class="token operator">===</span> rawHeadRemoveChild <span class="token operator">&amp;&amp;</span>
    <span class="token class-name">HTMLBodyElement</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>removeChild <span class="token operator">===</span> rawBodyRemoveChild
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">HTMLHeadElement</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>removeChild <span class="token operator">=</span> <span class="token function">getNewRemoveChild</span><span class="token punctuation">(</span>
      rawHeadRemoveChild<span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">containerConfigGetter</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">.</span>appWrapperGetter<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">HTMLBodyElement</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>removeChild <span class="token operator">=</span> <span class="token function">getNewRemoveChild</span><span class="token punctuation">(</span>
      rawBodyRemoveChild<span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">containerConfigGetter</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">.</span>appWrapperGetter<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">unpatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">HTMLHeadElement</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>appendChild <span class="token operator">=</span> rawHeadAppendChild<span class="token punctuation">;</span>
    <span class="token class-name">HTMLHeadElement</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>removeChild <span class="token operator">=</span> rawHeadRemoveChild<span class="token punctuation">;</span>
    <span class="token class-name">HTMLBodyElement</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>appendChild <span class="token operator">=</span> rawBodyAppendChild<span class="token punctuation">;</span>
    <span class="token class-name">HTMLBodyElement</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>removeChild <span class="token operator">=</span> rawBodyRemoveChild<span class="token punctuation">;</span>

    <span class="token class-name">HTMLHeadElement</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>insertBefore <span class="token operator">=</span> rawHeadInsertBefore<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>patchHTMLDynamicAppendPrototypeFunctions</code> \u65B9\u6CD5\u4E5F\u662F\u52AB\u6301\u4E86\u539F\u751F\u7684 <code>appendChild</code>\u3001<code>removeChild</code>\u7B49\u521B\u5EFA\u5143\u7D20\u76F8\u5173\u7684\u65B9\u6CD5\uFF0C\u6211\u4EEC\u62FF</p><p>\u4EE5 <code>appendChild</code> \u4E3A\u4F8B\uFF0C\u770B\u4E0B\u91CD\u5199\u65B9\u6CD5\u4E2D\u505A\u4E86\u54EA\u4E9B\u4E8B\u4EF6:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getOverwrittenAppendChildOrInsertBefore</span><span class="token punctuation">(</span>opts<span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">rawDOMAppendOrInsertBefore</span><span class="token operator">:</span> <span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">Node</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">newChild</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> refChild<span class="token operator">?</span><span class="token operator">:</span> Node <span class="token operator">|</span> <span class="token keyword">null</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">;</span>
  <span class="token function-variable function">isInvokedByMicroApp</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">element</span><span class="token operator">:</span> HTMLElement</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> boolean<span class="token punctuation">;</span>
  <span class="token function-variable function">containerConfigGetter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">element</span><span class="token operator">:</span> HTMLElement</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ContainerConfig<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> appendChildOrInsertBefore<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name">Node</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
    <span class="token keyword">this</span><span class="token operator">:</span> HTMLHeadElement <span class="token operator">|</span> HTMLBodyElement<span class="token punctuation">,</span>
    <span class="token literal-property property">newChild</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span>
    refChild<span class="token operator">?</span><span class="token operator">:</span> Node <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> element <span class="token operator">=</span> newChild <span class="token keyword">as</span> any<span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> rawDOMAppendOrInsertBefore<span class="token punctuation">,</span> isInvokedByMicroApp<span class="token punctuation">,</span> containerConfigGetter <span class="token punctuation">}</span> <span class="token operator">=</span> opts<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isHijackingTag</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span>tagName<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">isInvokedByMicroApp</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">rawDOMAppendOrInsertBefore</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> element<span class="token punctuation">,</span> refChild<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token constant">T</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>tagName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> containerConfig <span class="token operator">=</span> <span class="token function">containerConfigGetter</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span>
        appName<span class="token punctuation">,</span>
        appWrapperGetter<span class="token punctuation">,</span>
        proxy<span class="token punctuation">,</span>
        strictGlobal<span class="token punctuation">,</span>
        dynamicStyleSheetElements<span class="token punctuation">,</span>
        scopedCSS<span class="token punctuation">,</span>
        excludeAssetFilter<span class="token punctuation">,</span>
      <span class="token punctuation">}</span> <span class="token operator">=</span> containerConfig<span class="token punctuation">;</span>

      <span class="token keyword">switch</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>tagName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token constant">LINK_TAG_NAME</span><span class="token operator">:</span>
        <span class="token keyword">case</span> <span class="token constant">STYLE_TAG_NAME</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// \u52A8\u6001\u6837\u5F0F\u65F6\u6267\u884C\u7684\u8BED\u53E5</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">case</span> <span class="token constant">SCRIPT_TAG_NAME</span><span class="token operator">:</span> <span class="token punctuation">{</span>  <span class="token comment">// \u52A8\u6001\u811A\u672C\u65F6\u6267\u884C\u7684\u8BED\u53E5</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">default</span><span class="token operator">:</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">rawDOMAppendOrInsertBefore</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> element<span class="token punctuation">,</span> refChild<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u5B9A\u4E49\u53EF\u4EE5\u770B\u5230\u6839\u636E\u52A8\u6001\u521B\u5EFA\u7684\u76EE\u6807\u4E0D\u540C\uFF0C\u5904\u7406\u65B9\u5F0F\u4E5F\u4E0D\u540C\uFF0C\u5148\u770B\u6837\u5F0F\u7684\u5904\u7406\uFF1A</p><p><strong>\u52A8\u6001\u6837\u5F0F</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">let</span> <span class="token literal-property property">stylesheetElement</span><span class="token operator">:</span> HTMLLinkElement <span class="token operator">|</span> HTMLStyleElement <span class="token operator">=</span> newChild <span class="token keyword">as</span> any<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> href <span class="token punctuation">}</span> <span class="token operator">=</span> stylesheetElement <span class="token keyword">as</span> HTMLLinkElement<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>excludeAssetFilter <span class="token operator">&amp;&amp;</span> href <span class="token operator">&amp;&amp;</span> <span class="token function">excludeAssetFilter</span><span class="token punctuation">(</span>href<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">rawDOMAppendOrInsertBefore</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> element<span class="token punctuation">,</span> refChild<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token constant">T</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> mountDOM <span class="token operator">=</span> <span class="token function">appWrapperGetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>scopedCSS<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// exclude link elements like &lt;link rel=&quot;icon&quot; href=&quot;favicon.ico&quot;&gt;</span>
    <span class="token keyword">const</span> linkElementUsingStylesheet <span class="token operator">=</span>
      element<span class="token punctuation">.</span>tagName<span class="token operator">?.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant">LINK_TAG_NAME</span> <span class="token operator">&amp;&amp;</span>
      <span class="token punctuation">(</span>element <span class="token keyword">as</span> HTMLLinkElement<span class="token punctuation">)</span><span class="token punctuation">.</span>rel <span class="token operator">===</span> <span class="token string">&#39;stylesheet&#39;</span> <span class="token operator">&amp;&amp;</span>
      <span class="token punctuation">(</span>element <span class="token keyword">as</span> HTMLLinkElement<span class="token punctuation">)</span><span class="token punctuation">.</span>href<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>linkElementUsingStylesheet<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> fetch <span class="token operator">=</span>
        <span class="token keyword">typeof</span> frameworkConfiguration<span class="token punctuation">.</span>fetch <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span>
          <span class="token operator">?</span> frameworkConfiguration<span class="token punctuation">.</span>fetch
          <span class="token operator">:</span> frameworkConfiguration<span class="token punctuation">.</span>fetch<span class="token operator">?.</span>fn<span class="token punctuation">;</span>
      stylesheetElement <span class="token operator">=</span> <span class="token function">convertLinkAsStyle</span><span class="token punctuation">(</span>
        element<span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token parameter">styleElement</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> css<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>mountDOM<span class="token punctuation">,</span> styleElement<span class="token punctuation">,</span> appName<span class="token punctuation">)</span><span class="token punctuation">,</span>
        fetch<span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      dynamicLinkAttachedInlineStyleMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> stylesheetElement<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      css<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>mountDOM<span class="token punctuation">,</span> stylesheetElement<span class="token punctuation">,</span> appName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// eslint-disable-next-line no-shadow</span>
  dynamicStyleSheetElements<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>stylesheetElement<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> referenceNode <span class="token operator">=</span> mountDOM<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>refChild<span class="token punctuation">)</span> <span class="token operator">?</span> refChild <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">rawDOMAppendOrInsertBefore</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>mountDOM<span class="token punctuation">,</span> stylesheetElement<span class="token punctuation">,</span> referenceNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>excludeAssetFilter</code> \u53EF\u4EE5\u5728\u4F7F\u7528 <code>registerMicroApps</code> \u65F6\u4F20\u5165\uFF0C\u8868\u793A\u5982\u679C\u52A8\u6001\u521B\u5EFA\u7684\u94FE\u63A5\u5305\u542B\u5728 <code>excludeAssetFilter</code> \u4E2D\u5219\u4E0D\u505A\u4EFB\u4F55\u5904\u7406</p><p>\u540E\u9762\u51FA\u73B0\u7684 <code>mountDOM</code> \u8868\u793A\u5F53\u524D\u5B50\u5E94\u7528 DOM \u5185\u5BB9 \uFF1B <code>scopedCSS</code> \u8868\u793A\u662F\u8BBE\u7F6E\u4E86 <code>experimentalStyleIsolation: true</code></p><p>\u5982\u679C\u5F53\u524D\u521B\u5EFA\u662F\u52A8\u6001 <code>link</code> \u6807\u7B7E\u5219\u8C03\u7528 <code>convertLinkAsStyle</code> \u65B9\u6CD5\u4F7F\u7528 <code>fetch</code> \u83B7\u53D6\u6837\u5F0F\u6587\u4EF6\u5185\u5BB9\u5E76\u8C03\u7528 <code>css.process(mountDOM, styleElement, appName)</code> \uFF1B\u5982\u679C\u662F\u52A8\u6001\u521B\u5EFA\u7684\u5185\u8054\u6837\u5F0F\u5219\u76F4\u63A5\u6267\u884C <code>css.process(mountDOM, stylesheetElement, appName)</code></p><p><code>css.process</code> \u7684\u4F5C\u7528\u5C31\u662F\u7ED9\u4E9B\u8FD9\u6837\u5F0F\u5185\u5BB9\u6DFB\u52A0\u7279\u6B8A\u7684\u9009\u62E9\u5668\uFF0C\u7528\u4E8E\u9694\u79BB\u6837\u5F0F\u4F7F\u7528</p><p>\u4E4B\u540E\u628A\u5F53\u524D\u8FD9\u4E2A\u521B\u5EFA\u7684\u5143\u7D20\u4FDD\u5B58\u5230 <code>containerConfig.dynamicStyleSheetElements</code></p><p>\u6700\u540E\u6267\u884C <code>rawDOMAppendOrInsertBefore.call(mountDOM, stylesheetElement, referenceNode)</code> \u5373\u539F\u751F\u7684 <code>HTMLHeadElement.prototype.appendChild</code> \u7684\u65B9\u6CD5\uFF0C\u5C06\u6837\u5F0F\u5185\u5BB9\u6DFB\u52A0\u5230DOM\u4E2D\uFF0C\u6CE8\u610F\u6DFB\u52A0\u5230\u5B50\u5E94\u7528\u4E2D\u7684DOM</p><p><strong>\u52A8\u6001\u811A\u672C</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">const</span> <span class="token punctuation">{</span> src<span class="token punctuation">,</span> text <span class="token punctuation">}</span> <span class="token operator">=</span> element <span class="token keyword">as</span> HTMLScriptElement<span class="token punctuation">;</span>
  <span class="token comment">// some script like jsonp maybe not support cors which should&#39;t use execScripts</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>excludeAssetFilter <span class="token operator">&amp;&amp;</span> src <span class="token operator">&amp;&amp;</span> <span class="token function">excludeAssetFilter</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">rawDOMAppendOrInsertBefore</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> element<span class="token punctuation">,</span> refChild<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token constant">T</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> mountDOM <span class="token operator">=</span> <span class="token function">appWrapperGetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> fetch <span class="token punctuation">}</span> <span class="token operator">=</span> frameworkConfiguration<span class="token punctuation">;</span>
  <span class="token keyword">const</span> referenceNode <span class="token operator">=</span> mountDOM<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>refChild<span class="token punctuation">)</span> <span class="token operator">?</span> refChild <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>src<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">execScripts</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>src<span class="token punctuation">]</span><span class="token punctuation">,</span> proxy<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      fetch<span class="token punctuation">,</span>
      strictGlobal<span class="token punctuation">,</span>
      <span class="token function-variable function">beforeExec</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span> <span class="token string">&#39;currentScript&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
          <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> any <span class="token punctuation">{</span>
            <span class="token keyword">return</span> element<span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">manualInvokeElementOnLoad</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
        element <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">manualInvokeElementOnError</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
        element <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> dynamicScriptCommentElement <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createComment</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">dynamic script </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>src<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> replaced by qiankun</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    dynamicScriptAttachedCommentMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> dynamicScriptCommentElement<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">rawDOMAppendOrInsertBefore</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>mountDOM<span class="token punctuation">,</span> dynamicScriptCommentElement<span class="token punctuation">,</span> referenceNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// inline script never trigger the onload and onerror event</span>
  <span class="token function">execScripts</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;script&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/script&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span> proxy<span class="token punctuation">,</span> <span class="token punctuation">{</span> strictGlobal <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> dynamicInlineScriptCommentElement <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createComment</span><span class="token punctuation">(</span><span class="token string">&#39;dynamic inline script replaced by qiankun&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  dynamicScriptAttachedCommentMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> dynamicInlineScriptCommentElement<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">rawDOMAppendOrInsertBefore</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>mountDOM<span class="token punctuation">,</span> dynamicInlineScriptCommentElement<span class="token punctuation">,</span> referenceNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u5B9E\u52A8\u6001\u521B\u5EFA\u7684\u811A\u672C\u65F6\u6267\u884C\u7684\u6D41\u7A0B\u8DDF\u52A8\u6001\u6837\u5F0F\u5DEE\u4E0D\u592A\u591A\uFF0C\u4E0D\u8FC7\u8981\u6CE8\u610F\u7684\u662F\u4F7F\u7528 <code>execScripts</code> \u6267\u884C\u811A\u672C\u65F6\u52A8\u6001\u8BBE\u7F6E\u4E86\u811A\u672C\u6267\u884C\u7684\u5168\u5C40\u73AF\u5883\u4E3A\u5F53\u524D\u5B50\u5E94\u7528<code>\u4EE3\u7406prosy</code></p><p>\u6240\u4EE5\u5BF9\u4E8E <code>insertBefore</code> \u7684\u52AB\u6301\u903B\u8F91\u5927\u81F4\u5C31\u662F\u8FD9\u4E48\u4E00\u56DE\u4E8B\uFF0C\u603B\u7ED3\u4E00\u4E0B\uFF1A</p><ol><li><p>\u5BF9\u4E8E\u6837\u5F0F\uFF0C\u5982\u679C\u662F\u8FDC\u7A0B\u8D44\u6E90\u5219 <code>fetch</code> \u5185\u5BB9\u540E\u518D\u6DFB\u52A0\u5230 DOM\u4E2D\uFF0C\u5E76\u5C06\u5143\u7D20\u4FDD\u5B58\u5230 <code>containerConfig.dynamicStyleSheetElements</code> \u4E2D</p></li><li><p>\u5BF9\u4E8E\u811A\u672C\uFF0C\u5982\u679C\u662F\u8FDC\u7A0B\u8D44\u6E90\u5219\u901A\u8FC7 <code>fetch</code> \u540E\u518D\u6267\u884C\uFF0C\u6267\u884C\u65F6\u6307\u5B9A\u5168\u5C40\u73AF\u5883\u5230\u5B50\u5E94\u7528\u4E2D</p></li><li><p>\u6267\u884C\u771F\u6B63\u7684 <code>insertBefore</code> \u7684\u64CD\u4F5C\uFF0C\u6CE8\u610F\u8FD9\u4E9B\u64CD\u4F5C\u90FD\u5C06\u4F5C\u7528\u4E8E\u5B50\u5E94\u7528\u4E2D</p></li></ol><p>\u5BF9\u4E8E <code>patchHTMLDynamicAppendPrototypeFunctions</code> \u65B9\u6CD5\u4F5C\u7528\u5927\u81F4\u641E\u6E05\u695A\u4E86\uFF0C\u90A3\u4E48\u56DE\u5230 <code>patchStrictSandbox</code> \u65B9\u6CD5\u4E2D\u7EE7\u7EED\u5F80\u4E0B\u8D70\uFF0C\u6700\u540E\u5C31\u662F\u8FD4\u56DE <code>free</code> \u65B9\u6CD5\uFF0C<code>free</code> \u8FD4\u56DE\u540E\u662F\u4F1A\u88AB\u9A6C\u4E0A\u6267\u884C\u7684\uFF0C\u6240\u4EE5\u770B\u4E0B <code>free</code> \u7684\u4F5C\u7528</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">free</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// bootstrap patch just called once but its freer will be called multiple times</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mounting <span class="token operator">&amp;&amp;</span> bootstrappingPatchCount <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> bootstrappingPatchCount<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mounting<span class="token punctuation">)</span> mountingPatchCount<span class="token operator">--</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> allMicroAppUnmounted <span class="token operator">=</span> mountingPatchCount <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> bootstrappingPatchCount <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// release the overwrite prototype after all the micro apps unmounted</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>allMicroAppUnmounted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">unpatchDynamicAppendPrototypeFunctions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">unpatchDocumentCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">recordStyledComponentsCSSRules</span><span class="token punctuation">(</span>dynamicStyleSheetElements<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">rebuild</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">rebuildCSSRules</span><span class="token punctuation">(</span>dynamicStyleSheetElements<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">stylesheetElement</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> appWrapper <span class="token operator">=</span> <span class="token function">appWrapperGetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>appWrapper<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>stylesheetElement<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">rawHeadAppendChild</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>appWrapper<span class="token punctuation">,</span> stylesheetElement<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u91CD\u70B9\u770B\u4E0B <code>recordStyledComponentsCSSRules(dynamicStyleSheetElements)</code> \u7684\u4F5C\u7528\u8BB0\u5F55 <code>dynamicStyleSheetElements</code> \u5230 <code>styledComponentCSSRulesMap</code> \u4E2D\uFF0C\u6700\u540E\u8FD4\u56DE <code>rebuild</code> \u65B9\u6CD5</p><p>\u6700\u540E\u6211\u4EEC\u56DE\u5230\u8C03\u7528 <code>patchHTMLDynamicAppendPrototypeFunctions</code> \u4E5F\u5C31\u662F <code>const bootstrappingFreers = patchAtBootstrapping(appName, elementGetter, sandbox, scopedCSS, excludeAssetFilter);</code>\uFF0C\u8FD9\u91CC\u6211\u4EEC\u77E5\u9053\u4E86 <code>bootstrappingFreers</code> \u5F97\u5230\u7684\u5C31\u662F\u521A\u63D0\u5230\u7684 <code>rebuild</code> \u65B9\u6CD5</p><p>\u5173\u4E8E <code>rebuild</code> \u65B9\u6CD5\u4EC0\u4E48\u573A\u666F\u4E0B\u4F1A\u8C03\u7528\uFF0C\u6709\u70B9\u6CA1\u641E\u6E05\u695A\uFF0C\u8FD9\u90E8\u5206\u4EE5\u540E\u518D\u8865\u5145\u5427~</p><h2 id="\u6837\u5F0F\u9694\u79BB" tabindex="-1"><a class="header-anchor" href="#\u6837\u5F0F\u9694\u79BB" aria-hidden="true">#</a> \u6837\u5F0F\u9694\u79BB</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">const</span> strictStyleIsolation <span class="token operator">=</span> <span class="token keyword">typeof</span> sandbox <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token operator">!</span>sandbox<span class="token punctuation">.</span>strictStyleIsolation<span class="token punctuation">;</span>
  <span class="token keyword">const</span> scopedCSS <span class="token operator">=</span> <span class="token function">isEnableScopedCSS</span><span class="token punctuation">(</span>sandbox<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token literal-property property">initialAppWrapperElement</span><span class="token operator">:</span> HTMLElement <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> <span class="token function">createElement</span><span class="token punctuation">(</span>
    appContent<span class="token punctuation">,</span>
    strictStyleIsolation<span class="token punctuation">,</span>
    scopedCSS<span class="token punctuation">,</span>
    appName<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u5C31\u662F\u5F00\u59CB\u5904\u7406\u6837\u5F0F\u9694\u79BB\u7684\u5730\u65B9\uFF0C\u9996\u5148\u4F1A\u83B7\u53D6\u9694\u79BB\u89C4\u5219 <code>strictStyleIsolation</code> \u548C <code>scopedCSS</code>\uFF0C\u770B\u4E0B qiankun \u5BF9\u4E8E\u8FD9\u4E24\u4E2A\u89C4\u5219\u914D\u7F6E\u7684\u542B\u4E49\u8BF4\u660E\uFF1A</p><ul><li><p><code>strictStyleIsolation</code>: \u4E3A <code>true</code> \u65F6\u8868\u793A\u5F00\u542F\u4E25\u683C\u7684\u6837\u5F0F\u9694\u79BB\u6A21\u5F0F\u3002\u8FD9\u79CD\u6A21\u5F0F\u4E0B qiankun \u4F1A\u4E3A\u6BCF\u4E2A\u5FAE\u5E94\u7528\u7684\u5BB9\u5668\u5305\u88F9\u4E0A\u4E00\u4E2A <code>shadow dom</code> \u8282\u70B9\uFF0C\u4ECE\u800C\u786E\u4FDD\u5FAE\u5E94\u7528\u7684\u6837\u5F0F\u4E0D\u4F1A\u5BF9\u5168\u5C40\u9020\u6210\u5F71\u54CD</p></li><li><p><code>experimentalStyleIsolation</code> : qiankun \u4F1A\u6539\u5199\u5B50\u5E94\u7528\u6240\u6DFB\u52A0\u7684\u6837\u5F0F\u4E3A\u6240\u6709\u6837\u5F0F\u89C4\u5219\u589E\u52A0\u4E00\u4E2A\u7279\u6B8A\u7684\u9009\u62E9\u5668\u89C4\u5219\u6765\u9650\u5B9A\u5176\u5F71\u54CD\u8303\u56F4\uFF0C\u56E0\u6B64\u6539\u5199\u540E\u7684\u4EE3\u7801\u4F1A\u8868\u8FBE\u7C7B\u4F3C\u4E3A\u5982\u4E0B\u7ED3\u6784\uFF1A</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code> <span class="token selector">.app-main</span> <span class="token punctuation">{</span>
   <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 
 <span class="token selector">div[data-qiankun-react16] .app-main</span> <span class="token punctuation">{</span>
   <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>\u770B\u4E0B <code>createElement</code> \u65B9\u6CD5\u7684\u5B9A\u4E49</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createElement</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">appContent</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">strictStyleIsolation</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span>
  <span class="token literal-property property">scopedCSS</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span>
  <span class="token literal-property property">appName</span><span class="token operator">:</span> string<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span><span class="token operator">:</span> HTMLElement <span class="token punctuation">{</span>
  <span class="token keyword">const</span> containerElement <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  containerElement<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> appContent<span class="token punctuation">;</span>
  <span class="token comment">// appContent always wrapped with a singular div</span>
  <span class="token keyword">const</span> appElement <span class="token operator">=</span> containerElement<span class="token punctuation">.</span>firstChild <span class="token keyword">as</span> HTMLElement<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>strictStyleIsolation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>supportShadowDOM<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token string">&#39;[qiankun]: As current browser not support shadow dom, your strictStyleIsolation configuration will be ignored!&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> innerHTML <span class="token punctuation">}</span> <span class="token operator">=</span> appElement<span class="token punctuation">;</span>
      appElement<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> <span class="token literal-property property">shadow</span><span class="token operator">:</span> ShadowRoot<span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>appElement<span class="token punctuation">.</span>attachShadow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        shadow <span class="token operator">=</span> appElement<span class="token punctuation">.</span><span class="token function">attachShadow</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;open&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// createShadowRoot was proposed in initial spec, which has then been deprecated</span>
        shadow <span class="token operator">=</span> <span class="token punctuation">(</span>appElement <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createShadowRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      shadow<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> innerHTML<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>scopedCSS<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> attr <span class="token operator">=</span> appElement<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>css<span class="token punctuation">.</span>QiankunCSSRewriteAttr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>attr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      appElement<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>css<span class="token punctuation">.</span>QiankunCSSRewriteAttr<span class="token punctuation">,</span> appName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> styleNodes <span class="token operator">=</span> appElement<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;style&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">forEach</span><span class="token punctuation">(</span>styleNodes<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">stylesheetElement</span><span class="token operator">:</span> HTMLStyleElement</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      css<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>appElement<span class="token operator">!</span><span class="token punctuation">,</span> stylesheetElement<span class="token punctuation">,</span> appName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> appElement<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u91CD\u70B9\u5C31\u662F\u4E0B\u9762\u4E24\u4E2A <code>if</code>\uFF1A<code>if (strictStyleIsolation)</code> \u548C <code>if (scopedCSS)</code>\uFF0C\u5206\u522B\u770B\u4E0B\u4ED6\u4EEC\u7684\u5B9E\u73B0</p><h3 id="strictstyleisolation" tabindex="-1"><a class="header-anchor" href="#strictstyleisolation" aria-hidden="true">#</a> strictStyleIsolation</h3>`,129),r={href:"https://developer.mozilla.org/zh-CN/docs/Web/Web_Components/Using_shadow_DOM",target:"_blank",rel:"noopener noreferrer"},k=p("shadow DOM"),d=p(": Web components \u7684\u4E00\u4E2A\u91CD\u8981\u5C5E\u6027\u662F\u5C01\u88C5\u2014\u2014\u53EF\u4EE5\u5C06\u6807\u8BB0\u7ED3\u6784\u3001\u6837\u5F0F\u548C\u884C\u4E3A\u9690\u85CF\u8D77\u6765\uFF0C\u5E76\u4E0E\u9875\u9762\u4E0A\u7684\u5176\u4ED6\u4EE3\u7801\u76F8\u9694\u79BB\uFF0C\u4FDD\u8BC1\u4E0D\u540C\u7684\u90E8\u5206\u4E0D\u4F1A\u6DF7\u5728\u4E00\u8D77\uFF0C\u53EF\u4F7F\u4EE3\u7801\u66F4\u52A0\u5E72\u51C0\u3001\u6574\u6D01\u3002\u5176\u4E2D\uFF0CShadow DOM \u63A5\u53E3\u662F\u5173\u952E\u6240\u5728\uFF0C\u5B83\u53EF\u4EE5\u5C06\u4E00\u4E2A\u9690\u85CF\u7684\u3001\u72EC\u7ACB\u7684 DOM \u9644\u52A0\u5230\u4E00\u4E2A\u5143\u7D20\u4E0A\u3002"),v=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>supportShadowDOM<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token string">&#39;[qiankun]: As current browser not support shadow dom, your strictStyleIsolation configuration will be ignored!&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> innerHTML <span class="token punctuation">}</span> <span class="token operator">=</span> appElement<span class="token punctuation">;</span>
      appElement<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> <span class="token literal-property property">shadow</span><span class="token operator">:</span> ShadowRoot<span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>appElement<span class="token punctuation">.</span>attachShadow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        shadow <span class="token operator">=</span> appElement<span class="token punctuation">.</span><span class="token function">attachShadow</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;open&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// createShadowRoot was proposed in initial spec, which has then been deprecated</span>
        shadow <span class="token operator">=</span> <span class="token punctuation">(</span>appElement <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createShadowRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      shadow<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> innerHTML<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6839\u636E shadow DOM \u7684\u610F\u601D\u6240\u4EE5\u5B9E\u73B0<code>strictStyleIsolation</code> \u6A21\u5F0F\u7684\u8BBE\u7F6E\u5F88\u7B80\u5355\uFF0C\u5C31\u662F\u7ED9\u5E94\u7528\u5185\u5BB9\u5305\u4E00\u4E2A <code>Shadow DOM</code></p><h3 id="scopedcss" tabindex="-1"><a class="header-anchor" href="#scopedcss" aria-hidden="true">#</a> scopedCSS</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> attr <span class="token operator">=</span> appElement<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span>css<span class="token punctuation">.</span>QiankunCSSRewriteAttr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>attr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  appElement<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>css<span class="token punctuation">.</span>QiankunCSSRewriteAttr<span class="token punctuation">,</span> appName<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u7ED9\u6839\u5143\u7D20\u8BBE\u7F6E\u4E00\u4E2A [&#39;data-qiankun&#39; = appName] \u7684\u5C5E\u6027</span>
<span class="token keyword">const</span> styleNodes <span class="token operator">=</span> appElement<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;style&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">forEach</span><span class="token punctuation">(</span>styleNodes<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">stylesheetElement</span><span class="token operator">:</span> HTMLStyleElement</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  css<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>appElement<span class="token punctuation">,</span> stylesheetElement<span class="token punctuation">,</span> appName<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> QiankunCSSRewriteAttr <span class="token operator">=</span> <span class="token string">&#39;data-qiankun&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u83B7\u53D6\u6240\u6709\u7684 <code>style</code> \u6807\u7B7E\uFF0C\u904D\u5386\u4ED6\u4EEC\u5E76\u8C03\u7528 <code>css.process</code> \uFF0C<code>css.process</code> \u5B9E\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// css.process</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> process <span class="token operator">=</span> <span class="token punctuation">(</span>
  <span class="token literal-property property">appWrapper</span><span class="token operator">:</span> HTMLElement<span class="token punctuation">,</span>
  <span class="token literal-property property">stylesheetElement</span><span class="token operator">:</span> HTMLStyleElement <span class="token operator">|</span> HTMLLinkElement<span class="token punctuation">,</span>
  <span class="token literal-property property">appName</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token parameter"><span class="token keyword">void</span></span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// lazy singleton pattern</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>processor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    processor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ScopedCSS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>stylesheetElement<span class="token punctuation">.</span>tagName <span class="token operator">===</span> <span class="token string">&#39;LINK&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&#39;Feature: sandbox.experimentalStyleIsolation is not support for link element yet.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> mountDOM <span class="token operator">=</span> appWrapper<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mountDOM<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> tag <span class="token operator">=</span> <span class="token punctuation">(</span>mountDOM<span class="token punctuation">.</span>tagName <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">&amp;&amp;</span> stylesheetElement<span class="token punctuation">.</span>tagName <span class="token operator">===</span> <span class="token string">&#39;STYLE&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> prefix <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>tag<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>QiankunCSSRewriteAttr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>appName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;]</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    processor<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>stylesheetElement<span class="token punctuation">,</span> prefix<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE <code>process</code> \u65B9\u6CD5\u5B9A\u4E49\u53EF\u4EE5\u770B\u5230\uFF0C\u6837\u5F0F\u9694\u79BB\u53EA\u80FD\u5904\u7406\u5185\u8054\u6837\u5F0F\uFF0C<code>link</code> \u52A0\u8F7D\u7684\u6837\u5F0F\u662F\u4E0D\u80FD\u5904\u7406\u5904\u7406\u7684\uFF0C\u5BF9\u4E8E\u5185\u8054\u6837\u5F0F\u5148\u751F\u6210\u4E00\u4E2A\u9009\u62E9\u5668\u540D\u79F0\uFF0C\u4E4B\u540E\u8C03\u7528 <code>processor.process</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token comment">// processor.process</span>
  <span class="token function">process</span><span class="token punctuation">(</span>styleNode<span class="token operator">:</span> HTMLStyleElement<span class="token punctuation">,</span> <span class="token literal-property property">prefix</span><span class="token operator">:</span> string <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>styleNode<span class="token punctuation">.</span>textContent <span class="token operator">!==</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> textNode <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span>styleNode<span class="token punctuation">.</span>textContent <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>swapNode<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>textNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> sheet <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>swapNode<span class="token punctuation">.</span>sheet <span class="token keyword">as</span> any<span class="token punctuation">;</span> <span class="token comment">// type is missing</span>
      <span class="token keyword">const</span> rules <span class="token operator">=</span> arrayify<span class="token operator">&lt;</span>CSSRule<span class="token operator">&gt;</span><span class="token punctuation">(</span>sheet<span class="token operator">?.</span>cssRules <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> css <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">rewrite</span><span class="token punctuation">(</span>rules<span class="token punctuation">,</span> prefix<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// eslint-disable-next-line no-param-reassign</span>
      styleNode<span class="token punctuation">.</span>textContent <span class="token operator">=</span> css<span class="token punctuation">;</span>

      <span class="token comment">// cleanup</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>swapNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>textNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>processor.process</code> \u7684\u4F5C\u7528\u5C31\u662F\u7ED9\u4E2A\u6837\u5F0F\u5C5E\u6027\u6DFB\u52A0\u4E4B\u524D\u5B9A\u4E49\u7684\u9009\u62E9\u5668\u5C5E\u6027\uFF0C<code>this.rewrite</code> \u65B9\u6CD5\u5C31\u662F\u5177\u4F53\u66FF\u6362\u5B9E\u73B0\uFF0C\u8FD9\u91CC\u5C31\u7565\u8FC7\u4E86</p><h2 id="\u5E94\u7528\u901A\u4FE1" tabindex="-1"><a class="header-anchor" href="#\u5E94\u7528\u901A\u4FE1" aria-hidden="true">#</a> \u5E94\u7528\u901A\u4FE1</h2><p>qiankun \u63D0\u4F9B\u4E86 <code>initGlobalState(state)</code> \u7528\u4E8E\u5E94\u7528\u901A\u4FE1\uFF0C\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> initGlobalState<span class="token punctuation">,</span> MicroAppStateActions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;qiankun&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// \u521D\u59CB\u5316 state</span>
<span class="token keyword">const</span> <span class="token literal-property property">actions</span><span class="token operator">:</span> MicroAppStateActions <span class="token operator">=</span> <span class="token function">initGlobalState</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>

actions<span class="token punctuation">.</span><span class="token function">onGlobalStateChange</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> prev</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// state: \u53D8\u66F4\u540E\u7684\u72B6\u6001; prev \u53D8\u66F4\u524D\u7684\u72B6\u6001</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> prev<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
actions<span class="token punctuation">.</span><span class="token function">setGlobalState</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>
actions<span class="token punctuation">.</span><span class="token function">offGlobalStateChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u770B\u4E0B\u76F8\u5173\u7684\u4EE3\u7801\u7684\u5B9A\u4E49</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> cloneDeep <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;lodash&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> OnGlobalStateChangeCallback<span class="token punctuation">,</span> MicroAppStateActions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./interfaces&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token literal-property property">globalState</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> any<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token literal-property property">deps</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> OnGlobalStateChangeCallback<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u89E6\u53D1\u5168\u5C40\u76D1\u542C</span>
<span class="token keyword">function</span> <span class="token function">emitGlobal</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">state</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> any<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token literal-property property">prevState</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> any<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>deps<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">id</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>deps<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Function</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      deps<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token function">cloneDeep</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>prevState<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initGlobalState</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">state</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> any<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">===</span> globalState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&#39;[qiankun] state has not changed\uFF01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> prevGlobalState <span class="token operator">=</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>globalState<span class="token punctuation">)</span><span class="token punctuation">;</span>
    globalState <span class="token operator">=</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">emitGlobal</span><span class="token punctuation">(</span>globalState<span class="token punctuation">,</span> prevGlobalState<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">getMicroAppStateActions</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">global-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getMicroAppStateActions</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">id</span><span class="token operator">:</span> string<span class="token punctuation">,</span> isMaster<span class="token operator">?</span><span class="token operator">:</span> boolean</span><span class="token punctuation">)</span><span class="token operator">:</span> MicroAppStateActions <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * onGlobalStateChange \u5168\u5C40\u4F9D\u8D56\u76D1\u542C
     *
     * \u6536\u96C6 setState \u65F6\u6240\u9700\u8981\u89E6\u53D1\u7684\u4F9D\u8D56
     *
     * \u9650\u5236\u6761\u4EF6\uFF1A\u6BCF\u4E2A\u5B50\u5E94\u7528\u53EA\u6709\u4E00\u4E2A\u6FC0\u6D3B\u72B6\u6001\u7684\u5168\u5C40\u76D1\u542C\uFF0C\u65B0\u76D1\u542C\u8986\u76D6\u65E7\u76D1\u542C\uFF0C\u82E5\u53EA\u662F\u76D1\u542C\u90E8\u5206\u5C5E\u6027\uFF0C\u8BF7\u4F7F\u7528 onGlobalStateChange
     *
     * \u8FD9\u4E48\u8BBE\u8BA1\u662F\u4E3A\u4E86\u51CF\u5C11\u5168\u5C40\u76D1\u542C\u6EE5\u7528\u5BFC\u81F4\u7684\u5185\u5B58\u7206\u70B8
     *
     * \u4F9D\u8D56\u6570\u636E\u7ED3\u6784\u4E3A\uFF1A
     * <span class="token punctuation">{</span>
     *   <span class="token punctuation">{</span>id<span class="token punctuation">}</span>: callback
     * <span class="token punctuation">}</span>
     *
     * <span class="token keyword">@param</span> <span class="token parameter">callback</span>
     * <span class="token keyword">@param</span> <span class="token parameter">fireImmediately</span>
     */</span>
    <span class="token function">onGlobalStateChange</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">callback</span><span class="token operator">:</span> OnGlobalStateChangeCallback<span class="token punctuation">,</span> fireImmediately<span class="token operator">?</span><span class="token operator">:</span> boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>callback <span class="token keyword">instanceof</span> <span class="token class-name">Function</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;[qiankun] callback must be function!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>deps<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[qiankun] &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39; global listener already exists before this, new listener will overwrite it.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      deps<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> callback<span class="token punctuation">;</span>
      <span class="token keyword">const</span> cloneState <span class="token operator">=</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>globalState<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>fireImmediately<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">callback</span><span class="token punctuation">(</span>cloneState<span class="token punctuation">,</span> cloneState<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token doc-comment comment">/**
     * setGlobalState \u66F4\u65B0 store \u6570\u636E
     *
     * 1. \u5BF9\u8F93\u5165 state \u7684\u7B2C\u4E00\u5C42\u5C5E\u6027\u505A\u6821\u9A8C\uFF0C\u53EA\u6709\u521D\u59CB\u5316\u65F6\u58F0\u660E\u8FC7\u7684\u7B2C\u4E00\u5C42\uFF08bucket\uFF09\u5C5E\u6027\u624D\u4F1A\u88AB\u66F4\u6539
     * 2. \u4FEE\u6539 store \u5E76\u89E6\u53D1\u5168\u5C40\u76D1\u542C
     *
     * <span class="token keyword">@param</span> <span class="token parameter">state</span>
     */</span>
    <span class="token function">setGlobalState</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">state</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> any<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>state <span class="token operator">===</span> globalState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&#39;[qiankun] state has not changed\uFF01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">const</span> <span class="token literal-property property">changeKeys</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> prevGlobalState <span class="token operator">=</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>globalState<span class="token punctuation">)</span><span class="token punctuation">;</span>
      globalState <span class="token operator">=</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>
        Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_globalState<span class="token punctuation">,</span> changeKey</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>isMaster <span class="token operator">||</span> _globalState<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>changeKey<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            changeKeys<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>changeKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>_globalState<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>changeKey<span class="token punctuation">]</span><span class="token operator">:</span> state<span class="token punctuation">[</span>changeKey<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[qiankun] &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>changeKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39; not declared when init state\uFF01</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> _globalState<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> globalState<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>changeKeys<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">&#39;[qiankun] state has not changed\uFF01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token function">emitGlobal</span><span class="token punctuation">(</span>globalState<span class="token punctuation">,</span> prevGlobalState<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// \u6CE8\u9500\u8BE5\u5E94\u7528\u4E0B\u7684\u4F9D\u8D56</span>
    <span class="token function">offGlobalStateChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">delete</span> deps<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u4EE3\u7801\u53EF\u4EE5\u770B\u5230\uFF0Cqiankun \u662F\u5229\u7528\u53D1\u5E03\u8BA2\u9605\u8005\u6A21\u5F0F\u6765\u5B9E\u73B0\u5E94\u7528\u901A\u4FE1\u7684</p><p>\u5BF9\u4E8E\u6574\u4E2A\u5E94\u7528\u53EA\u6709\u4E00\u4E2A\u7528\u4E8E\u4FDD\u5B58\u5168\u5C40\u72B6\u6001\u7684 <code>globalState</code> \u548C\u4E00\u4E2A\u4E8B\u4EF6\u6536\u96C6\u5668 <code>deps</code>\uFF0C\u6700\u540E\u6267\u884C <code>initGlobalState</code> \u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A <code>actions</code></p><p>\u5B50\u5E94\u7528\u521B\u5EFA\u7684\u65F6\u5019\u4F1A\u4F20\u5165 <code>onGlobalStateChange</code> \u548C <code>setGlobalState</code></p><p>\u65E0\u8BBA\u662F\u4E3B\u5E94\u7528\u8FD8\u662F\u5B50\u5E94\u7528\u53EA\u8981\u89E6\u53D1 <code>onGlobalStateChange</code> \u65F6\uFF0C\u4F1A\u5C06\u56DE\u8C03\u51FD\u6570\u4E0E\u5F53\u524D\u7684 <code>app id</code> \u4E00\u8D77\u505A\u4E2A\u6620\u5C04\u4FDD\u5B58\u5230 <code>deps</code> \u4E2D</p><p>\u4E4B\u540E\u89E6\u53D1 <code>setGlobalState</code> \u65F6\uFF0C\u5C06\u6DF1\u62F7\u8D1D\u4E00\u4EFD\u539F\u672C\u7684\u6570\u636E\u4FDD\u5B58\u5230 <code>prevGlobalState</code> \u4E2D\uFF0C\u4E4B\u540E\u5C06\u65B0\u7684\u6570\u636E\u5408\u5230\u5F53\u524D\u6570\u636E<code>globalState</code> \u4E2D\uFF0C\u7136\u540E\u6267\u884C <code> emitGlobal(globalState, prevGlobalState)</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u89E6\u53D1\u5168\u5C40\u76D1\u542C</span>
<span class="token keyword">function</span> <span class="token function">emitGlobal</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">state</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> any<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token literal-property property">prevState</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> any<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>deps<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">id</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>deps<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Function</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      deps<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token function">cloneDeep</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>prevState<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>emitGlobal</code> \u7684\u4F5C\u7528\u5C31\u662F\u904D\u5386\u6536\u96C6\u5230\u7684\u56DE\u8C03\u65B9\u6CD5\uFF0C\u5E76\u4E00\u4E00\u6267\u884C</p><p>qiankun \u5E94\u7528\u901A\u4FE1\u7684\u5B9E\u73B0\u8FD8\u662F\u6BD4\u8F83\u7B80\u5355\u7684\uFF0C\u5C31\u662F\u521B\u5EFA\u4E00\u4E2A\u53D1\u5E03\u8BA2\u9605\u8005\u6A21\u5F0F\u7528\u6765\u6536\u96C6\u4E8B\u4EF6-\u6267\u884C\u4E8B\u4EF6</p><h2 id="\u9884\u52A0\u8F7D" tabindex="-1"><a class="header-anchor" href="#\u9884\u52A0\u8F7D" aria-hidden="true">#</a> \u9884\u52A0\u8F7D</h2><p>qiankun \u9884\u52A0\u8F7D\u662F\u901A\u8FC7\u542F\u52A8 <code>start</code> \u4F20\u5165 <code>prefetch</code> \u5C5E\u6027\u5F00\u542F\u7684\uFF0C\u9ED8\u8BA4\u662F <code>true</code>\u3002\u770B\u4E0B\u6E90\u7801\u76F8\u5173\u4F4D\u7F6E\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">opts</span><span class="token operator">:</span> FrameworkConfiguration <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  frameworkConfiguration <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">prefetch</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">singular</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">sandbox</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token operator">...</span>opts <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> prefetch<span class="token punctuation">,</span> sandbox<span class="token punctuation">,</span> singular<span class="token punctuation">,</span> urlRerouteOnly<span class="token punctuation">,</span> <span class="token operator">...</span>importEntryOpts <span class="token punctuation">}</span> <span class="token operator">=</span> frameworkConfiguration<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>prefetch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u6709 prefetch \u6267\u884C doPrefetchStrategy</span>
    <span class="token function">doPrefetchStrategy</span><span class="token punctuation">(</span>microApps<span class="token punctuation">,</span> prefetch<span class="token punctuation">,</span> importEntryOpts<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">startSingleSpa</span><span class="token punctuation">(</span><span class="token punctuation">{</span> urlRerouteOnly <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  frameworkStartedDefer<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// doPrefetchStrategy</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">doPrefetchStrategy</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">apps</span><span class="token operator">:</span> AppMetadata<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">prefetchStrategy</span><span class="token operator">:</span> PrefetchStrategy<span class="token punctuation">,</span>
  importEntryOpts<span class="token operator">?</span><span class="token operator">:</span> ImportEntryOpts<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> appsName2Apps <span class="token operator">=</span> <span class="token punctuation">(</span>names<span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> AppMetadata<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=&gt;</span> apps<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">app</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> names<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token comment">// \u5982\u679C prefetchStrategy \u662F\u6570\u7EC4\u6216\u8005\u51FD\u6570\u7684\u8BDD\uFF0C\u7565\u8FC7\u8FD9\u91CC</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>prefetchStrategy<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">prefetchAfterFirstMounted</span><span class="token punctuation">(</span><span class="token function">appsName2Apps</span><span class="token punctuation">(</span>prefetchStrategy <span class="token keyword">as</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> importEntryOpts<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>prefetchStrategy<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// critical rendering apps would be prefetch as earlier as possible</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> criticalAppNames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> minorAppsName <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">prefetchStrategy</span><span class="token punctuation">(</span>apps<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">prefetchImmediately</span><span class="token punctuation">(</span><span class="token function">appsName2Apps</span><span class="token punctuation">(</span>criticalAppNames<span class="token punctuation">)</span><span class="token punctuation">,</span> importEntryOpts<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">prefetchAfterFirstMounted</span><span class="token punctuation">(</span><span class="token function">appsName2Apps</span><span class="token punctuation">(</span>minorAppsName<span class="token punctuation">)</span><span class="token punctuation">,</span> importEntryOpts<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>prefetchStrategy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token boolean">true</span><span class="token operator">:</span>
        <span class="token comment">// \u4E3Atrue \u6267\u884C prefetchAfterFirstMounted</span>
        <span class="token function">prefetchAfterFirstMounted</span><span class="token punctuation">(</span>apps<span class="token punctuation">,</span> importEntryOpts<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token string">&#39;all&#39;</span><span class="token operator">:</span>
        <span class="token function">prefetchImmediately</span><span class="token punctuation">(</span>apps<span class="token punctuation">,</span> importEntryOpts<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>

      <span class="token keyword">default</span><span class="token operator">:</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// prefetchAfterFirstMounted</span>
<span class="token keyword">function</span> <span class="token function">prefetchAfterFirstMounted</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">apps</span><span class="token operator">:</span> AppMetadata<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> opts<span class="token operator">?</span><span class="token operator">:</span> ImportEntryOpts</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
 <span class="token comment">// \u53C2\u6570\u662F\u5F53\u524D\u8981\u9884\u52A0\u7684\u5E94\u7528</span>
 <span class="token comment">// \u6DFB\u52A0\u4E00\u4E2A\u76D1\u542C\u4E8B\u4EF6</span>
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;single-spa:first-mount&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token function">listener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> notLoadedApps <span class="token operator">=</span> apps<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">app</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">getAppStatus</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant">NOT_LOADED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> mountedApps <span class="token operator">=</span> <span class="token function">getMountedApps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[qiankun] prefetch starting after </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>mountedApps<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> mounted...</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> notLoadedApps<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5F53\u4EA7\u4E2A\u5E94\u7528\u52A0\u8FC7\u8F7D\u540E\u6267\u884C prefetch</span>
    notLoadedApps<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> entry <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">prefetch</span><span class="token punctuation">(</span>entry<span class="token punctuation">,</span> opts<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    window<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;single-spa:first-mount&#39;</span><span class="token punctuation">,</span> listener<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// prefetch</span>
<span class="token keyword">function</span> <span class="token function">prefetch</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">entry</span><span class="token operator">:</span> Entry<span class="token punctuation">,</span> opts<span class="token operator">?</span><span class="token operator">:</span> ImportEntryOpts</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>navigator<span class="token punctuation">.</span>onLine <span class="token operator">||</span> isSlowNetwork<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Don&#39;t prefetch if in a slow network or offline</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">requestIdleCallback</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> getExternalScripts<span class="token punctuation">,</span> getExternalStyleSheets <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">importEntry</span><span class="token punctuation">(</span>entry<span class="token punctuation">,</span> opts<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">requestIdleCallback</span><span class="token punctuation">(</span>getExternalStyleSheets<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">requestIdleCallback</span><span class="token punctuation">(</span>getExternalScripts<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6839\u636E\u4E0A\u9762\u7684\u4EE3\u7801 \u603B\u7ED3\u4E00\u4E0B <code>prefetch</code> \u7684\u5B9E\u73B0\uFF1A</p><ol><li><p>\u6CE8\u518C\u4E8B\u4EF6 <code>single-spa:first-mount</code>\uFF0C\u5F53\u9996\u4E2A\u5E94\u7528\u52A0\u8F7D\u5B8C\u6210\u540E\u6267\u884C\u56DE\u8C03</p></li><li><p>\u56DE\u8C03\u4E2D\u8FC7\u6EE4\u6389\u6CA1\u6709\u52A0\u8F7D\u7684\u5E94\u7528\uFF0C\u6267\u884C <code>prefetch</code></p></li><li><p>\u7136\u540E\u6267\u884C <code>importEntry</code> \u52A0\u8F7D\u5E94\u7528\u5185\u5BB9\uFF0C<code>importEntry</code> \u4F1A\u5BF9\u52A0\u8F7D\u8FC7\u7684\u8D44\u6E90\u505A\u7F13\u5B58\uFF0C\u8FD4\u56DE\u7684 <code>getExternalStyleSheets</code> \u548C <code>getExternalScripts</code> \u65B9\u6CD5\u662F\u52A0\u8F7D\u5BF9\u5E94\u6837\u5F0F\u8D44\u6E90\u548CJS\u8D44\u6E90\u7684\u65B9\u6CD5\uFF0C\u4E5F\u4F1A\u7A0D\u540E\u6267\u884C\uFF0C\u8FD9\u4E9B <code>importEntry</code> \u5185\u90E8\u90FD\u4F1A\u505A\u7F13\u5B58\uFF0C\u6240\u4EE5\u4E0B\u6B21\u518D\u8C03\u7528 <code>importEntry</code> \u5C06\u76F4\u63A5\u4ECE\u7F13\u5B58\u4E2D\u53D6</p></li></ol>`,27),m={href:"https://segmentfault.com/a/1190000022275991",target:"_blank",rel:"noopener noreferrer"};function b(y,f){const s=l("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[n("a",r,[k,a(s)]),d]),v,n("p",null,[n("a",m,[a(s)])])])}var g=e(i,[["render",b],["__file","qiankun\u539F\u7406.html.vue"]]);export{g as default};
