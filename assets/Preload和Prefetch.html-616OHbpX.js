import{_ as e,r as p,o,c,b as a,d as l,a as s,e as t}from"./app-VicZdUS9.js";const r={},u=t('<h1 id="preload和prefetch" tabindex="-1"><a class="header-anchor" href="#preload和prefetch" aria-hidden="true">#</a> Preload和Prefetch</h1><h2 id="prefetch" tabindex="-1"><a class="header-anchor" href="#prefetch" aria-hidden="true">#</a> Prefetch</h2><p>告诉浏览器这个资源将来可能需要，但是什么时间加载这个资源是由浏览器来决定的</p><h2 id="缓存行为" tabindex="-1"><a class="header-anchor" href="#缓存行为" aria-hidden="true">#</a> 缓存行为</h2><p>资源被 preload 或者 prefetch 后，会从网络堆栈传输到 HTTP 缓存并进入渲染器的内存缓存。 如果资源可以被缓存（例如，存在有效的 cache-control 和 max-age），它将存储在 HTTP 缓存中，可用于当前和未来的会话。 如果资源不可缓存，则不会将其存储在 HTTP 缓存中。 相反，它会被缓存到内存缓存中并保持不变直到它被使用</p>',5),i={href:"https://blog.fundebug.com/2019/04/11/understand-preload-and-prefetch/",target:"_blank",rel:"noopener noreferrer"},d=t(`<h2 id="使用注意点" tabindex="-1"><a class="header-anchor" href="#使用注意点" aria-hidden="true">#</a> 使用注意点</h2><ul><li>对同一资源一起使用 <code>preload</code> 和 <code>prefetch</code> 会导致二次获取</li></ul><h2 id="dns-prefetch" tabindex="-1"><a class="header-anchor" href="#dns-prefetch" aria-hidden="true">#</a> DNS Prefetch</h2><p>DNS prefetching 允许浏览器在用户浏览页面时在后台运行 DNS 的解析。如此一来，DNS 的解析在用户点击一个链接时已经完成，所以可以减少延迟。可以在一个 link 标签的属性中添加 rel=&quot;dns-prefetch&#39; 来对指定的 URL 进行 DNS prefetching</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dns-prefetch<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>//fonts.googleapis.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dns-prefetch<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>//www.google-analytics.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dns-prefetch<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>//opensource.keycdn.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dns-prefetch<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>//cdn.domain.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="prerende" tabindex="-1"><a class="header-anchor" href="#prerende" aria-hidden="true">#</a> Prerende</h2><p>Prerender 和 prefetch 非常相似，它们都优化了可能导航到的下一页上的资源的加载，区别是 prerendering 在后台渲染了整个页面，整个页面所有的资源。如下:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>prerender<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://www.keycdn.com<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>要小心的使用 prerender，因为它将会加载很多资源并且可能造成带宽的浪费</p><h2 id="preconnect" tabindex="-1"><a class="header-anchor" href="#preconnect" aria-hidden="true">#</a> Preconnect</h2><p>preconnect 允许浏览器在一个 HTTP 请求正式发给服务器前预先执行一些操作，这包括 DNS 解析，TLS 协商，TCP 握手，这消除了往返延迟并为用户节省了时间</p><p>preconnect 可以直接添加到 HTML 中 link 标签的属性中，也可以写在 HTTP 头中或者通过 JavaScript 生成，如下是一个为 CDN 使用 preconnect 的例子：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.domain.com<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>preconnect<span class="token punctuation">&quot;</span></span> <span class="token attr-name">crossorigin</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,13),h={href:"https://cloud.tencent.com/developer/article/1552083",target:"_blank",rel:"noopener noreferrer"},k={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Preloading_content",target:"_blank",rel:"noopener noreferrer"};function m(f,g){const n=p("ExternalLinkIcon");return o(),c("div",null,[u,a("p",null,[a("a",i,[l("https://blog.fundebug.com/2019/04/11/understand-preload-and-prefetch/"),s(n)])]),d,a("p",null,[a("a",h,[s(n)]),a("a",k,[s(n)])])])}const q=e(r,[["render",m],["__file","Preload和Prefetch.html.vue"]]);export{q as default};
