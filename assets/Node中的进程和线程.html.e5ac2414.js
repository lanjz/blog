import{_ as t,o,c as e,b as n,a,d as c,e as p,r as i}from"./app.8ae844c0.js";const l={},u=c(`<h1 id="node\u4E2D\u7684\u8FDB\u7A0B\u548C\u7EBF\u7A0B" tabindex="-1"><a class="header-anchor" href="#node\u4E2D\u7684\u8FDB\u7A0B\u548C\u7EBF\u7A0B" aria-hidden="true">#</a> Node\u4E2D\u7684\u8FDB\u7A0B\u548C\u7EBF\u7A0B</h1><p>Node.js \u662F Javascript \u5728\u670D\u52A1\u7AEF\u7684\u8FD0\u884C\u73AF\u5883\uFF0C<strong>\u6784\u5EFA\u5728 chrome \u7684 V8 \u5F15\u64CE\u4E4B\u4E0A\uFF0C\u57FA\u4E8E\u4E8B\u4EF6\u9A71\u52A8\u3001\u975E\u963B\u585EI/O\u6A21\u578B</strong>\uFF0C\u5145\u5206\u5229\u7528\u64CD\u4F5C\u7CFB\u7EDF\u63D0\u4F9B\u7684\u5F02\u6B65 I/O \u8FDB\u884C\u591A\u4EFB\u52A1\u7684\u6267\u884C\uFF0C\u9002\u5408\u4E8E I/O \u5BC6\u96C6\u578B\u7684\u5E94\u7528\u573A\u666F\uFF0C\u56E0\u4E3A\u5F02\u6B65\uFF0C\u7A0B\u5E8F\u65E0\u9700\u963B\u585E\u7B49\u5F85\u7ED3\u679C\u8FD4\u56DE\uFF0C\u800C\u662F\u57FA\u4E8E\u56DE\u8C03\u901A\u77E5\u7684\u673A\u5236\uFF0C\u539F\u672C\u540C\u6B65\u6A21\u5F0F\u7B49\u5F85\u7684\u65F6\u95F4\uFF0C\u5219\u53EF\u4EE5\u7528\u6765\u5904\u7406\u5176\u5B83\u4EFB\u52A1</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u79D1\u666E\uFF1A\u5728 Web \u670D\u52A1\u5668\u65B9\u9762\uFF0C\u8457\u540D\u7684 Nginx \u4E5F\u662F\u91C7\u7528\u6B64\u6A21\u5F0F\uFF08\u4E8B\u4EF6\u9A71\u52A8\uFF09\uFF0C\u907F\u514D\u4E86\u591A\u7EBF\u7A0B\u7684\u7EBF\u7A0B\u521B\u5EFA\u3001\u7EBF\u7A0B\u4E0A\u4E0B\u6587\u5207\u6362\u7684\u5F00\u9500\uFF0C Nginx \u91C7\u7528 C \u8BED\u8A00\u8FDB\u884C\u7F16\u5199\uFF0C\u4E3B\u8981\u7528\u6765\u505A\u9AD8\u6027\u80FD\u7684 Web \u670D\u52A1\u5668\uFF0C\u4E0D\u9002\u5408\u505A\u4E1A\u52A1\u3002</p></div><p>\u6CE8\u610F\u4E0A\u9762\u6240\u8BF4\u7684 Node \u6240\u8C13\u7684\u975E\u963B\u585E\u662F\u9488\u5BF9\u5B9A\u65F6\u5668\uFF0CIO\u64CD\u4F5C\uFF0C\u8BF7\u6C42\u8FD9\u7C7B\u7684\u60C5\u51B5\uFF0C\u5BF9\u4E8E\u9700\u8981 CPU \u8017\u65F6\u7684\u64CD\u4F5C\u65F6\u5019\u5C31\u4E0D\u9002\u7528\u4E86\uFF0C\u6BD4\u5982\u4EE5\u4E0B\u670D\u52A1\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// compute.js</span>
<span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">longComputation</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1e10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>url <span class="token operator">===</span> <span class="token string">&#39;/compute&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BA1\u7B97\u5F00\u59CB&#39;</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> sum <span class="token operator">=</span> <span class="token function">longComputation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BA1\u7B97\u7ED3\u675F&#39;</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Sum is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>sum<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;Ok&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u67E5\u770B\u6253\u5370\u7ED3\u679C\uFF0C\u5F53\u6211\u4EEC\u8C03\u7528 <code>127.0.0.1:3000/compute</code>\u7684\u65F6\u5019\uFF0C\u5982\u679C\u60F3\u8981\u8C03\u7528\u5176\u4ED6\u7684\u8DEF\u7531\u5730\u5740\u6BD4\u5982 <code>127.0.0.1/</code> \u5927\u7EA6\u9700\u8981 <code>15\u79D2</code> \u65F6\u95F4\uFF0C\u4E5F\u53EF\u4EE5\u8BF4\u4E00\u4E2A\u7528\u6237\u8BF7\u6C42\u5B8C\u7B2C\u4E00\u4E2A <code>compute\u63A5\u53E3</code> \u540E\u9700\u8981\u7B49\u5F85 <code>15\u79D2</code> \uFF0C\u8FD9\u5BF9\u4E8E\u7528\u6237\u6765\u8BF4\u662F\u6781\u5176\u4E0D\u53CB\u597D\u7684\u3002\u5BF9\u4E8E\u8FD9\u79CD\u9700\u8981\u8017\u65F6\u8BA1\u7B97\uFF0C\u5219\u9700\u8981\u901A\u8FC7\u5F00\u542F\u5F00\u8FDB\u7A0B\u6216\u8005\u591A\u7EBF\u7A0B\u65B9\u5F0F\u53BB\u89E3\u51B3</p><h2 id="node\u4E2D\u7684\u8FDB\u7A0B\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#node\u4E2D\u7684\u8FDB\u7A0B\u64CD\u4F5C" aria-hidden="true">#</a> Node\u4E2D\u7684\u8FDB\u7A0B\u64CD\u4F5C</h2><p>Node.js \u4E2D\u63D0\u4F9B\u4E86\u4E00\u4E2A <code>Process</code> \u5168\u5C40\u5BF9\u8C61\uFF0C\u63D0\u4F9B\u4E86\u6709\u5173\u5F53\u524D Node \u8FDB\u7A0B\u7684\u4FE1\u606F\uFF0C <code>Process</code> \u5BF9\u8C61\u65E0\u9700 <code>require</code> \u5C31\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528,\u4E0B\u9762\u662F <code>Process</code> \u5E38\u7528\u5C5E\u6027\uFF1A</p><ul><li><p><code>p<wbr>rocess.env</code>\uFF1A\u73AF\u5883\u53D8\u91CF\uFF0C\u4F8B\u5982\u901A\u8FC7 <code>p<wbr>rocess.env.NODE_ENV</code> \u83B7\u53D6\u4E0D\u540C\u73AF\u5883\u9879\u76EE\u914D\u7F6E\u4FE1\u606F</p></li><li><p><code>process.nextTick</code>\uFF1A\u8FD9\u4E2A\u5728\u8C08\u53CA <code>Event Loop</code> \u65F6\u7ECF\u5E38\u4E3A\u4F1A\u63D0\u5230,\u5C06\u56DE\u8C03\u653E\u5728\u4E8B\u4EF6\u5FAA\u73AF\u7684\u4F55\u4E00\u9636\u6BB5\u7ED3\u675F\u4E4B\u540E\u6267\u884C</p></li><li><p><code>process.pid</code>\uFF1A\u83B7\u53D6\u5F53\u524D<code>\u8FDB\u7A0Bid</code></p></li><li><p><code>process.ppid</code>\uFF1A\u5F53\u524D\u8FDB\u7A0B\u5BF9\u5E94\u7684\u7236\u8FDB\u7A0B</p></li><li><p><code>process.cwd()</code>\uFF1A\u83B7\u53D6\u5F53\u524D\u8FDB\u7A0B\u5DE5\u4F5C\u76EE\u5F55</p></li><li><p><code>process.platform</code>\uFF1A\u83B7\u53D6\u5F53\u524D\u8FDB\u7A0B\u8FD0\u884C\u7684\u64CD\u4F5C\u7CFB\u7EDF\u5E73\u53F0</p></li><li><p><code>process.uptime()</code>\uFF1A\u5F53\u524D\u8FDB\u7A0B\u5DF2\u8FD0\u884C\u65F6\u95F4\uFF0C\u4F8B\u5982\uFF1A<code>pm2</code> \u5B88\u62A4\u8FDB\u7A0B\u7684 <code>uptime</code> \u503C</p></li><li><p><code>process.title</code> \u6307\u5B9A\u8FDB\u7A0B\u540D\u79F0\uFF0C\u6709\u7684\u65F6\u5019\u9700\u8981\u7ED9\u8FDB\u7A0B\u6307\u5B9A\u4E00\u4E2A\u540D\u79F0</p></li></ul><p>\u8FDB\u7A0B\u4E8B\u4EF6\uFF1A</p><ul><li><p><code>process.on(&#39;uncaughtException&#39;, cb)</code>: \u6355\u83B7\u5F02\u5E38\u4FE1\u606F</p></li><li><p><code>process.on(&#39;exit&#39;, cb\uFF09</code>:\u8FDB\u7A0B\u63A8\u51FA\u76D1\u542C</p></li></ul><p>\u4E09\u4E2A\u6807\u51C6\u6D41:</p><ul><li><p><code>process.stdout</code>: \u6807\u51C6\u8F93\u51FA</p></li><li><p><code>process.stdin</code> \u6807\u51C6\u8F93\u5165</p></li><li><p><code>process.stderr</code> \u6807\u51C6\u9519\u8BEF\u8F93\u51FA</p></li></ul><h2 id="\u521B\u5EFA\u5B50\u8FDB\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u5B50\u8FDB\u7A0B" aria-hidden="true">#</a> \u521B\u5EFA\u5B50\u8FDB\u7A0B</h2><p>Node\u4E2D\u4F7F\u7528 <code>child_process</code> \u6A21\u5757\u6765\u5B9E\u73B0\u591A\u8FDB\u7A0B\u7684\u652F\u6301</p><p><code>child_process</code> \u6A21\u5757\u4E2D\u5305\u62EC\u4E86\u5F88\u591A\u521B\u5EFA\u5B50\u8FDB\u7A0B\u7684\u65B9\u6CD5:</p><ul><li><p><code>child_process.exec(command[, options][,callback])</code>\uFF1A \u6267\u884C\u4E00\u6761<code>command &lt;shell\u547D\u4EE4&gt;</code> \uFF0C\u901A\u8FC7\u56DE\u8C03\u53C2\u6570\u8FD4\u56DE\u7ED3\u679C</p></li><li><p><code>child_process.execFile(file[, options][,callback])</code>\uFF1A\u8FD0\u884C\u4E00\u4E2A\u53EF\u6267\u884C\u6587\u4EF6\u7684\u540D\u79F0\u6216\u8DEF\u5F84</p></li><li><p><code>child_process.spawn(command[, args][,callback])</code>\uFF1A\u9002\u7528\u4E8E\u8FD4\u56DE\u5927\u91CF\u6570\u636E\uFF0C\u4F8B\u5982\u56FE\u50CF\u5904\u7406\uFF0C\u4E8C\u8FDB\u5236\u6570\u636E\u5904\u7406</p></li><li><p><code>child_process.fork(modulePath[, args][,callback])</code>\uFF1A \u884D\u751F\u65B0\u7684\u8FDB\u7A0B\uFF0C\u8FDB\u7A0B\u4E4B\u95F4\u662F\u76F8\u4E92\u72EC\u7ACB\u7684\uFF0C\u6BCF\u4E2A\u8FDB\u7A0B\u90FD\u6709\u81EA\u5DF1\u7684 V8 \u5B9E\u4F8B\u3001\u5185\u5B58</p></li></ul><p>\u4E0B\u9762\u6765\u4E86\u89E3\u4E86\u89E3\u8FD9\u4E2A\u56DB\u79CD\u521B\u5EFA\u8FDB\u7A0B\u7684\u57FA\u672C\u7528\u6CD5</p><h3 id="exec" tabindex="-1"><a class="header-anchor" href="#exec" aria-hidden="true">#</a> exec</h3><p><code>child_process.exec</code> \u4F7F\u7528\u5B50\u8FDB\u7A0B\u6267\u884C\u547D\u4EE4\uFF0C\u7F13\u5B58\u5B50\u8FDB\u7A0B\u7684\u8F93\u51FA\uFF0C\u5E76\u5C06\u5B50\u8FDB\u7A0B\u7684\u8F93\u51FA\u4EE5\u56DE\u8C03\u51FD\u6570\u53C2\u6570\u7684\u5F62\u5F0F\u4E00\u6B21\u6027\u8FD4\u56DE\u3002<code>exec</code> \u65B9\u6CD5\u4F1A\u4ECE\u5B50\u8FDB\u7A0B\u4E2D\u8FD4\u56DE\u4E00\u4E2A\u5B8C\u6574\u7684 <code>buffer</code> \u3002\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u8FD9\u4E2A <code>buffer</code> \u7684\u5927\u5C0F\u5E94\u8BE5\u662F <code>200k</code>\u3002\u5982\u679C\u5B50\u8FDB\u7A0B\u8FD4\u56DE\u7684\u6570\u636E\u5927\u5C0F\u8D85\u8FC7\u4E86 <code>200k</code>\uFF0C\u7A0B\u5E8F\u5C06\u4F1A\u5D29\u6E83\uFF0C\u540C\u65F6\u663E\u793A\u9519\u8BEF\u4FE1\u606F <code>Error\uFF1AmaxBuffer exceeded</code> \u3002\u4F60\u53EF\u4EE5\u901A\u8FC7\u5728 <code>exec</code> \u7684\u53EF\u9009\u9879\u4E2D\u8BBE\u7F6E\u4E00\u4E2A\u66F4\u5927\u7684 <code>buffer</code> \u4F53\u79EF\u6765\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u4F46\u662F\u4F60\u4E0D\u5E94\u8BE5\u8FD9\u6837\u505A\uFF0C\u56E0\u4E3A <code>exec</code> \u672C\u6765\u5C31\u4E0D\u662F\u7528\u6765\u8FD4\u56DE\u5F88\u591A\u6570\u636E\u7684\u65B9\u6CD5</p><p><code>child_process.exec(command[, options][, callback])</code> \u7684\u53C2\u6570\uFF1A</p><ul><li><p><code>command &lt;string&gt;</code>: \u8981\u8FD0\u884C\u7684\u547D\u4EE4\uFF0C\u5E76\u5E26\u4E0A\u4EE5\u7A7A\u683C\u5206\u9694\u7684\u53C2\u6570</p></li><li><p><code>options &lt;object&gt;</code>: \u914D\u7F6E\u9009\u9879</p></li><li><p><code>callback &lt;Function&gt;</code>: \u5F53\u8FDB\u7A0B\u7EC8\u6B62\u65F6\u8C03\u7528\u5E76\u4F20\u5165\u8F93\u51FA</p><ul><li><p><code>error &lt;Error&gt;</code></p></li><li><p><code>stdout &lt;string&gt; | &lt;Buffer&gt;</code></p></li><li><p><code>stderr &lt;string&gt; | &lt;Buffer&gt;</code></p></li></ul></li></ul><p>\u6817\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">&#39;dir&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>stack<span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Error code: &#39;</span> <span class="token operator">+</span> error<span class="token punctuation">.</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Signal received: &#39;</span> <span class="token operator">+</span> error<span class="token punctuation">.</span>signal<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//console.log(err, stdout, stderr);</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;data : &#39;</span> <span class="token operator">+</span> stdout<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;exit&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5B50\u8FDB\u7A0B\u5DF2\u9000\u51FA, \u9000\u51FA\u7801 &#39;</span> <span class="token operator">+</span> code<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="execfile" tabindex="-1"><a class="header-anchor" href="#execfile" aria-hidden="true">#</a> execFile</h3><p><code>child_process.execFile()</code> \u51FD\u6570\u7C7B\u4F3C\u4E8E <code>child_process.exec()</code>\uFF0C\u4F46\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u4E0D\u4F1A\u884D\u751F <code>shell</code>,\u53EF\u63A5\u6536\u53C2\u6570\uFF1A</p><ul><li><p><code>file &lt;string&gt;</code> \u8981\u8FD0\u884C\u7684\u53EF\u6267\u884C\u6587\u4EF6\u7684\u540D\u79F0\u6216\u8DEF\u5F84</p></li><li><p><code>args &lt;string[]&gt;</code> \u5B57\u7B26\u4E32\u53C2\u6570\u7684\u5217\u8868</p></li><li><p><code>options &lt;object&gt;</code>: \u914D\u7F6E\u9009\u9879</p></li><li><p><code>callback &lt;Function&gt;</code>: \u5F53\u8FDB\u7A0B\u7EC8\u6B62\u65F6\u8C03\u7528\u5E76\u4F20\u5165\u8F93\u51FA</p><ul><li><p><code>error &lt;Error&gt;</code></p></li><li><p><code>stdout &lt;string&gt; | &lt;Buffer&gt;</code></p></li><li><p><code>stderr &lt;string&gt; | &lt;Buffer&gt;</code></p></li></ul></li></ul><p>\u6817\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> execFile <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token function">execFile</span><span class="token punctuation">(</span><span class="token string">&#39;node&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;--version&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> error<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stdout<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// v13.1.0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="spawn" tabindex="-1"><a class="header-anchor" href="#spawn" aria-hidden="true">#</a> spawn</h3><p><code>child_process.spawn</code> \u4F7F\u7528\u6307\u5B9A\u7684\u547D\u4EE4\u884C\u53C2\u6570\u521B\u5EFA\u65B0\u8FDB\u7A0B\u3002<code>spawn</code> \u4F1A\u8FD4\u56DE\u4E00\u4E2A\u5E26\u6709 <code>stdout</code> \u548C <code>stderr</code> \u6D41\u7684\u5BF9\u8C61\u3002\u4F60\u53EF\u4EE5\u901A\u8FC7 <code>stdout</code> \u6D41\u6765\u8BFB\u53D6\u5B50\u8FDB\u7A0B\u8FD4\u56DE\u7ED9Node.js\u7684\u6570\u636E\u3002<code>stdout</code> \u62E5\u6709 <code>data</code>, <code>end</code> \u4EE5\u53CA\u4E00\u822C\u6D41\u6240\u5177\u6709\u7684\u4E8B\u4EF6\u3002\u5F53\u4F60\u60F3\u8981\u5B50\u8FDB\u7A0B\u8FD4\u56DE\u5927\u91CF\u6570\u636E\u7ED9 Node \u65F6\uFF0C\u6BD4\u5982\u8BF4\u56FE\u50CF\u5904\u7406\uFF0C\u8BFB\u53D6\u4E8C\u8FDB\u5236\u6570\u636E\u7B49\u7B49\uFF0C\u4F60\u6700\u597D\u4F7F\u7528 <code>spawn</code>\u65B9\u6CD5</p><p><code>child_process.spawn(command[, args][, options])</code> \u63A5\u6536\u53C2\u6570\uFF1A</p><ul><li><p><code>command &lt;string&gt; </code>: \u8981\u8FD0\u884C\u7684\u547D\u4EE4</p></li><li><p><code>arg &lt;string&gt; </code>: \u5B57\u7B26\u4E32\u53C2\u6570\u7684\u5217\u8868</p></li><li><p><code>options&lt;Object&gt;</code>: \u914D\u7F6E\u9879</p></li></ul><p>\u6817\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> child_process <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> spawnObj <span class="token operator">=</span> child_process<span class="token punctuation">.</span><span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">&#39;ping&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;127.0.0.1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
spawnObj<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;stdout data&#39;</span> <span class="token operator">+</span> chunk<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
spawnObj<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;stderr data&#39;</span> <span class="token operator">+</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
spawnObj<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;close code : &#39;</span> <span class="token operator">+</span> code<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
spawnObj<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;exit&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">code</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;exit code : &#39;</span> <span class="token operator">+</span> code<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fork" tabindex="-1"><a class="header-anchor" href="#fork" aria-hidden="true">#</a> fork</h3><p><code>child_process.fork()</code> \u53EF\u4F20\u9012\u7684\u53C2\u6570\uFF1A</p><ul><li><p><code>modulePath &lt;string&gt; </code>: \u8981\u5728\u5B50\u8FDB\u7A0B\u4E2D\u8FD0\u884C\u7684\u6A21\u5757</p></li><li><p><code>arg &lt;string&gt; </code>: \u5B57\u7B26\u4E32\u53C2\u6570\u7684\u5217\u8868</p></li><li><p><code>options&lt;Object&gt;</code>: \u914D\u7F6E\u9879</p></li></ul><p>\u8FD4\u56DE: <code>&lt;ChildProcess&gt;</code></p><p><code>child_process.fork()</code> \u65B9\u6CD5\u662F <code>child_process.spawn()</code> \u7684\u7279\u4F8B\uFF0C\u4E13\u95E8\u7528\u4E8E\u884D\u751F\u65B0\u7684 Node.js \u8FDB\u7A0B\u3002 \u4E0E <code>child_process.spawn()</code> \u4E00\u6837\u8FD4\u56DE <code>ChildProcess</code> \u5BF9\u8C61\u3002 \u8FD4\u56DE\u7684 <code>ChildProcess</code> \u4F1A\u5185\u7F6E\u989D\u5916\u7684\u901A\u4FE1\u901A\u9053\uFF08 IPC \u901A\u9053\uFF09\uFF0C\u5141\u8BB8\u6D88\u606F\u5728\u7236\u8FDB\u7A0B\u548C\u5B50\u8FDB\u7A0B\u4E4B\u95F4\u6765\u56DE\u4F20\u9012</p><p><strong>\u901A\u4FE1\u65B9\u6CD5</strong></p><p>\u5F53\u7236\u8FDB\u7A0B\u548C\u5B50\u8FDB\u7A0B\u4E4B\u95F4\u5DF2\u5EFA\u7ACB\u4E86\u4E00\u4E2A IPC \u901A\u9053\u65F6\uFF08\u4F8B\u5982\uFF0C\u4F7F\u7528 <code>child_process.fork()</code>\uFF09\uFF0C <code>subprocess.send()</code> \u65B9\u6CD5\u53EF\u7528\u4E8E\u53D1\u9001\u6D88\u606F\u5230\u5B50\u8FDB\u7A0B\u3002 \u5F53\u5B50\u8FDB\u7A0B\u662F\u4E00\u4E2A Node.js \u5B9E\u4F8B\u65F6\uFF0C\u5219\u6D88\u606F\u53EF\u4EE5\u901A\u8FC7 <code>message</code> \u4E8B\u4EF6\u63A5\u6536\u3002</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>\u6D88\u606F\u901A\u8FC7\u5E8F\u5217\u5316\u548C\u89E3\u6790\u8FDB\u884C\u4F20\u9012\uFF0C\u63A5\u6536\u5230\u6D88\u606F\u53EF\u80FD\u8DDF\u6700\u521D\u53D1\u9001\u7684\u4E0D\u5B8C\u5168\u4E00\u6837</p></div><p>\u6817\u5B50\uFF1A\u6211\u4EEC\u4F7F\u7528 <code>child_process.fork</code> \u4F18\u5316\u4E00\u4E0B\u4E4B\u524D\u7684\u670D\u52A1</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fork <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;child_process&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fork<span class="token punctuation">;</span>
<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;request&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>url <span class="token operator">===</span> <span class="token string">&#39;/compute&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> compute <span class="token operator">=</span> <span class="token function">fork</span><span class="token punctuation">(</span><span class="token string">&#39;./fork_compute.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    compute<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;\u5F00\u542F\u4E00\u4E2A\u65B0\u7684\u5B50\u8FDB\u7A0B&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5F53\u4E00\u4E2A\u5B50\u8FDB\u7A0B\u4F7F\u7528 process.send() \u53D1\u9001\u6D88\u606F\u65F6\u4F1A\u89E6\u53D1 &#39;message&#39; \u4E8B\u4EF6</span>
    compute<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token parameter">sum</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Sum is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>sum<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        compute<span class="token punctuation">.</span><span class="token function">kill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5B50\u8FDB\u7A0B\u76D1\u542C\u5230\u4E00\u4E9B\u9519\u8BEF\u6D88\u606F\u9000\u51FA</span>
    compute<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">code<span class="token punctuation">,</span> signal</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u6536\u5230close\u4E8B\u4EF6\uFF0C\u5B50\u8FDB\u7A0B\u6536\u5230\u4FE1\u53F7 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>signal<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> \u800C\u7EC8\u6B62\uFF0C\u9000\u51FA\u7801 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>code<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        compute<span class="token punctuation">.</span><span class="token function">kill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;Ok&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// chchild_processild.js</span>
<span class="token keyword">const</span> <span class="token function-variable function">computation</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BA1\u7B97\u5F00\u59CB&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BA1\u7B97\u8017\u65F6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1e10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sum <span class="token operator">+=</span> i
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BA1\u7B97\u7ED3\u675F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">timeEnd</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BA1\u7B97\u8017\u65F6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

process<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token parameter">msg</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token string">&#39;process.pid&#39;</span><span class="token punctuation">,</span> process<span class="token punctuation">.</span>pid<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5B50\u8FDB\u7A0Bid</span>
    <span class="token keyword">const</span> sum <span class="token operator">=</span> <span class="token function">computation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5982\u679CNode.js\u8FDB\u7A0B\u662F\u901A\u8FC7\u8FDB\u7A0B\u95F4\u901A\u4FE1\u4EA7\u751F\u7684\uFF0C\u90A3\u4E48\uFF0Cprocess.send()\u65B9\u6CD5\u53EF\u4EE5\u7528\u6765\u7ED9\u7236\u8FDB\u7A0B\u53D1\u9001\u6D88\u606F</span>
    process<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>fork</code> \u786E\u5B9E\u53EF\u4EE5\u5F00\u542F\u591A\u4E2A\u8FDB\u7A0B\uFF0C\u4F46\u662F\u5E76\u4E0D\u5EFA\u8BAE\u884D\u751F\u51FA\u6765\u592A\u591A\u7684\u8FDB\u7A0B\uFF0C\u901A\u5E38\u8981\u6839\u636E\u7CFB\u7EDF <strong>CPU \u6838\u5FC3\u6570</strong> \u6765\u8BBE\u7F6E\u3002cpu \u6838\u5FC3\u6570\u7684\u83B7\u53D6\u65B9\u5F0F <code>const cpus = require(&#39;os&#39;).cpus()</code> ; \u8FD9\u91CC <code>cpus</code> \u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\u6570\u7EC4\uFF0C\u5305\u542B\u6240\u5B89\u88C5\u7684\u6BCF\u4E2A CPU/\u5185\u6838\u7684\u4FE1\u606F\uFF0C\u4E8C\u8005\u603B\u548C\u7684\u6570\u7EC4\u54E6\u3002\u5047\u8BBE\u4E3B\u673A\u88C5\u6709\u4E24\u4E2A cpu\uFF0C\u6BCF\u4E2A cpu \u6709 <code>4</code> \u4E2A\u6838\uFF0C\u90A3\u4E48\u603B\u6838\u6570\u5C31\u662F <code>8</code></p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u5F00\u542F\u591A\u8FDB\u7A0B\u4E0D\u662F\u4E3A\u4E86\u89E3\u51B3\u9AD8\u5E76\u53D1\uFF0C\u4E3B\u8981\u662F\u89E3\u51B3\u4E86\u5355\u8FDB\u7A0B\u6A21\u5F0F\u4E0B Node.js CPU \u5229\u7528\u7387\u4E0D\u8DB3\u7684\u60C5\u51B5\uFF0C\u5145\u5206\u5229\u7528\u591A\u6838 CPU \u7684\u6027\u80FD</p></div>`,48),r={href:"https://www.imooc.com/article/288006",target:"_blank",rel:"noopener noreferrer"},d=p("Node.js \u8FDB\u9636\u4E4B\u8FDB\u7A0B\u4E0E\u7EBF\u7A0B"),k={href:"https://juejin.im/post/5d082214f265da1bb564f97b",target:"_blank",rel:"noopener noreferrer"},v=p("\u5206\u4EAB 10 \u9053 Nodejs \u8FDB\u7A0B\u76F8\u5173\u9762\u8BD5\u9898");function m(g,b){const s=i("ExternalLinkIcon");return o(),e("div",null,[u,n("p",null,[n("a",r,[d,a(s)])]),n("p",null,[n("a",k,[v,a(s)])])])}var h=t(l,[["render",m],["__file","Node\u4E2D\u7684\u8FDB\u7A0B\u548C\u7EBF\u7A0B.html.vue"]]);export{h as default};
