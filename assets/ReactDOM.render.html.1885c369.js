import{_ as t,o,c as p,b as n,a as s,d as c,e,r as i}from"./app.35d123d0.js";var l="/lanjz/assets/render_1.c86d3c81.png",u="/lanjz/assets/render_2.bdf95cc8.png";const r={},d=c(`<h1 id="reactdom-render" tabindex="-1"><a class="header-anchor" href="#reactdom-render" aria-hidden="true">#</a> ReactDOM.render</h1><p><code>ReactDOM.render(element, container[, callback])</code></p><p>eg:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> root <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span>
root<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">&#39;app&#39;</span>
document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span>

<span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span>Hello World<span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span><span class="token punctuation">)</span>

<span class="token function">render</span><span class="token punctuation">(</span>App<span class="token punctuation">,</span> root<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u63D0\u4F9B\u7684 <code>container</code> \u91CC\u6E32\u67D3\u4E00\u4E2A React \u5143\u7D20\uFF0C\u5E76\u8FD4\u56DE\u5BF9\u8BE5\u7EC4\u4EF6\u7684\u5F15\u7528\uFF08\u6216\u8005\u9488\u5BF9\u65E0\u72B6\u6001\u7EC4\u4EF6\u8FD4\u56DE <code>null</code>\uFF09</p><p>\u5982\u679C React \u5143\u7D20\u4E4B\u524D\u5DF2\u7ECF\u5728 <code>container</code> \u91CC\u6E32\u67D3\u8FC7\uFF0C\u8FD9\u5C06\u4F1A\u5BF9\u5176\u6267\u884C\u66F4\u65B0\u64CD\u4F5C\uFF0C\u5E76\u4EC5\u4F1A\u5728\u5FC5\u8981\u65F6\u6539\u53D8 DOM \u4EE5\u6620\u5C04\u6700\u65B0\u7684 React \u5143\u7D20</p><p>\u5982\u679C\u63D0\u4F9B\u4E86\u53EF\u9009\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u8BE5\u56DE\u8C03\u5C06\u5728\u7EC4\u4EF6\u88AB\u6E32\u67D3\u6216\u66F4\u65B0\u4E4B\u540E\u88AB\u6267\u884C</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p><code>ReactDOM.render()</code> \u4F1A\u63A7\u5236\u4F60\u4F20\u5165\u5BB9\u5668\u8282\u70B9\u91CC\u7684\u5185\u5BB9\u3002\u5F53\u9996\u6B21\u8C03\u7528\u65F6\uFF0C\u5BB9\u5668\u8282\u70B9\u91CC\u7684\u6240\u6709 DOM \u5143\u7D20\u90FD\u4F1A\u88AB\u66FF\u6362\uFF0C\u540E\u7EED\u7684\u8C03\u7528\u5219\u4F1A\u4F7F\u7528 React \u7684 DOM \u5DEE\u5206\u7B97\u6CD5\uFF08DOM diffing algorithm\uFF09\u8FDB\u884C\u9AD8\u6548\u7684\u66F4\u65B0\u3002</p><p><code>ReactDOM.render()</code> \u4E0D\u4F1A\u4FEE\u6539\u5BB9\u5668\u8282\u70B9\uFF08\u53EA\u4F1A\u4FEE\u6539\u5BB9\u5668\u7684\u5B50\u8282\u70B9\uFF09\u3002\u53EF\u4EE5\u5728\u4E0D\u8986\u76D6\u73B0\u6709\u5B50\u8282\u70B9\u7684\u60C5\u51B5\u4E0B\uFF0C\u5C06\u7EC4\u4EF6\u63D2\u5165\u5DF2\u6709\u7684 DOM \u8282\u70B9\u4E2D\u3002</p><p><code>ReactDOM.render()</code> \u76EE\u524D\u4F1A\u8FD4\u56DE\u5BF9\u6839\u7EC4\u4EF6 ReactComponent \u5B9E\u4F8B\u7684\u5F15\u7528\u3002 \u4F46\u662F\uFF0C\u76EE\u524D\u5E94\u8BE5\u907F\u514D\u4F7F\u7528\u8FD4\u56DE\u7684\u5F15\u7528\uFF0C\u56E0\u4E3A\u5B83\u662F\u5386\u53F2\u9057\u7559\u4E0B\u6765\u7684\u5185\u5BB9\uFF0C\u800C\u4E14\u5728\u672A\u6765\u7248\u672C\u7684 React \u4E2D\uFF0C\u7EC4\u4EF6\u6E32\u67D3\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\u53EF\u80FD\u4F1A\u662F\u5F02\u6B65\u7684\u3002 \u5982\u679C\u4F60\u771F\u7684\u9700\u8981\u83B7\u5F97\u5BF9\u6839\u7EC4\u4EF6 ReactComponent \u5B9E\u4F8B\u7684\u5F15\u7528\uFF0C\u90A3\u4E48\u63A8\u8350\u4E3A\u6839\u5143\u7D20\u6DFB\u52A0 <code>callback ref</code>\u3002</p><p>\u4F7F\u7528 <code>ReactDOM.render()</code> \u5BF9\u670D\u52A1\u7AEF\u6E32\u67D3\u5BB9\u5668\u8FDB\u884C hydrate \u64CD\u4F5C\u7684\u65B9\u5F0F\u5DF2\u7ECF\u88AB\u5E9F\u5F03\uFF0C\u5E76\u4E14\u4F1A\u5728 React 17 \u88AB\u79FB\u9664\u3002\u4F5C\u4E3A\u66FF\u4EE3\uFF0C\u8BF7\u4F7F\u7528 <code>hydrate()</code>\u3002</p></div><p><code>ReactDOM.render</code> \u7528\u4E8E\u521D\u6B21\u6E32\u67D3\u65F6\u5C06 React \u5E94\u7528\u6302\u8F7D\u5728 DOM \u5143\u7D20\u4E0A</p><p>\u5BF9\u4E8E React \u9879\u76EE\uFF0C\u5E73\u65F6\u4F1A\u4EE5 jsx \u7684\u683C\u5F0F\u8FDB\u884C\u5F00\u53D1\uFF0C\u4F46\u662F jsx \u5E76\u4E0D\u662F\u6807\u51C6\u7684\u683C\u5F0F\uFF0C\u6240\u4EE5\u9700\u8981 label \u8FDB\u884C\u8F6C\u8BAE\uFF0C\u4EE5\u4E0A\u9762 eg \u4EE3\u7801\u4E3A\u4F8B\uFF0C\u6700\u7EC8\u4F1A\u8F6C\u6362\u6210\u4EE5\u4E0B\u5F62\u5F0F\u7684\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> root <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
root<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">&quot;app&quot;</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token comment">/*#__PURE__*/</span> React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;h2&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">render</span><span class="token punctuation">(</span>App<span class="token punctuation">,</span> root<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>jsx \u7F16\u5199\u7684\u7EC4\u4EF6\u4F1A\u8F6C\u8BAE\u6210 <code>React.createElement</code> \u7684\u5F62\u5F0F\uFF0C\u6240\u4EE5 React \u6700\u7EC8\u662F\u901A\u8FC7 <code>React.createElement</code> \u6765\u521B\u5EFA\u4E00\u4E2A <code>reactElement</code></p><p>\u5728\u73B0\u5728\u7684 React \u4E2D <code>reactElement</code> \u4E5F\u88AB\u79F0\u4E3A\u662F <code>fiber \u6811</code>\uFF0C<code>fiber\u6811</code> \u662F DOM \u6811\u7684\u6570\u636E\u6A21\u578B</p><h2 id="\u6E90\u7801\u8DDF\u8E2A" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u8DDF\u8E2A" aria-hidden="true">#</a> \u6E90\u7801\u8DDF\u8E2A</h2><p><code>ReactDom.render</code> \u7684\u6E90\u7801\u5B9A\u4E49\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> container<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5FFD\u7565\u90E8\u5206\u4EE3\u7801</span>
  <span class="token keyword">return</span> <span class="token function">legacyRenderSubtreeIntoContainer</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> element<span class="token punctuation">,</span> container<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C <code>ReactDOM.render</code> \u8FD4\u56DE\u7684 <code>legacyRenderSubtreeIntoContainer</code> \u65B9\u6CD5\u51FD\u6570\u8C03\u7528\u7684\u7ED3\u679C\uFF0C\u8BE5\u65B9\u6CD5\u4F20\u5165\u4E94\u4E2A\u53C2\u6570\uFF1A</p><ul><li><p><code>null</code>: <code>parentComponent</code></p></li><li><p><code>element</code>\uFF1A<code>ReactDOM.render</code> \u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0CReact \u5143\u7D20\u4E5F\u5C31\u662F\u4E00\u4E2A <code>ReactElement</code></p></li><li><p><code>container</code> \uFF1A <code>ReactDOM.render</code> \u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u6302\u8F7D React \u5143\u7D20\u7684\u4E00\u4E2A element\u5BB9\u5668</p></li><li><p><code>false</code>\uFF1A <code>forceHydrate</code> \u670D\u52A1\u7AEF\u6E32\u67D3\u7528\u7684\uFF0C\u53EF\u4EE5\u5FFD\u7565</p></li><li><p><code>callback</code>\uFF1A<code>ReactDOM.render</code> \u7684\u7B2C\u4E09\u4E2A\u53C2\u6570\uFF0C\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">legacyRenderSubtreeIntoContainer</span><span class="token punctuation">(</span><span class="token parameter">parentComponent<span class="token punctuation">,</span> children<span class="token punctuation">,</span> container<span class="token punctuation">,</span> forceHydrate<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> root <span class="token operator">=</span> container<span class="token punctuation">.</span>_reactRootContainer<span class="token punctuation">;</span>
  <span class="token keyword">var</span> fiberRoot<span class="token punctuation">;</span>
  <span class="token comment">// \u9996\u6B21\u6267\u884C\u65F6 \`container\` \u662F\u8981\u6302\u8F7D\u7684\u76EE\u6807\u8282\u70B9\uFF0C\u6B64\u65F6\u5B83\u662F\u6CA1\u6709 \`_reactRootContainer\` \u5C5E\u6027\u7684</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u521B\u5EFA\u4E00\u4E2AReactRooter</span>
    root <span class="token operator">=</span> container<span class="token punctuation">.</span>_reactRootContainer <span class="token operator">=</span> <span class="token function">legacyCreateRootFromDOMContainer</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> forceHydrate<span class="token punctuation">)</span><span class="token punctuation">;</span>
    fiberRoot <span class="token operator">=</span> root<span class="token punctuation">.</span>_internalRoot<span class="token punctuation">;</span>

    <span class="token comment">//\u521D\u59CB\u5316\u5B89\u88C5\u4E0D\u9700\u8981\u6279\u91CF\u66F4\u65B0</span>
    <span class="token function">unbatchedUpdates</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">updateContainer</span><span class="token punctuation">(</span>children<span class="token punctuation">,</span> fiberRoot<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u975E\u9996\u6B21\u6267\u884C</span>
    fiberRoot <span class="token operator">=</span> root<span class="token punctuation">.</span>_internalRoot<span class="token punctuation">;</span>
    <span class="token function">updateContainer</span><span class="token punctuation">(</span>children<span class="token punctuation">,</span> fiberRoot<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token function">getPublicRootInstance</span><span class="token punctuation">(</span>fiberRoot<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DEfiberRoot</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>legacyRenderSubtreeIntoContainer()</code> \uFF08\u7FFB\u8BD1\u6210\u5565\u5565\u6E32\u67D3\u5B50\u6570\u5230\u5BB9\u5668\uFF09\uFF0C\u5728\u5F53\u524D\u4F8B\u5B50\u4E2D\u6267\u884C\u8FD9\u4E2A\u51FD\u6570\u65F6\u4F20\u8FDB\u6765\u7684\u53C2\u6570\u4E3A\uFF1A</p><ul><li><p>\u9996\u6B21\u6E32\u67D3 <code>container._reactRootContainer</code> \u80AF\u5B9A\u4E3A\u7A7A</p></li><li><p>\u8C03\u7528 <code>legacyCreateRootFromDOMContainer</code> \u51FD\u6570\u521B\u5EFA <code>ReactDOMBlockingRoot</code> \u8D4B\u503C\u7ED9 <code>root</code> \u548C <code>container._reactRootContainer</code>\uFF0C\u51FD\u6570\u5185\u4E5F\u540C\u65F6\u521B\u5EFA\u4E86 <code>fiberRootNode</code> \u4FDD\u5B58\u5728 <code>_internalRoot</code> \u5C5E\u6027\u4E2D</p></li><li><p>\u8D4B\u503C <code>fiberRootNode</code> \u7ED9 <code>fiberRoot</code></p></li><li><p>\u8C03\u7528 <code>unbatchedUpdates</code> \u51FD\u6570\uFF0C\u53D6\u6D88\u6279\u91CF\u66F4\u65B0</p></li></ul><p><img src="`+l+`" alt=""></p><h3 id="legacycreaterootfromdomcontainer" tabindex="-1"><a class="header-anchor" href="#legacycreaterootfromdomcontainer" aria-hidden="true">#</a> legacyCreateRootFromDOMContainer</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">legacyCreateRootFromDOMContainer</span><span class="token punctuation">(</span><span class="token parameter">container<span class="token punctuation">,</span> forceHydrate</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u5224\u65AD\u662F\u5426\u670D\u52A1\u7AEF\u6E32\u67D3</span>
   <span class="token keyword">var</span> shouldHydrate <span class="token operator">=</span> forceHydrate <span class="token operator">||</span> <span class="token function">shouldHydrateDueToLegacyHeuristic</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>shouldHydrate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> rootSibling<span class="token punctuation">;</span>
      <span class="token comment">// \u5220\u9664container\u4E2D\u7684\u5185\u5BB9</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>rootSibling <span class="token operator">=</span> container<span class="token punctuation">.</span>lastChild<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token punctuation">{</span>
            container<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>rootSibling<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token function">createLegacyRoot</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> shouldHydrate <span class="token operator">?</span> <span class="token punctuation">{</span>
         <span class="token literal-property property">hydrate</span><span class="token operator">:</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span> <span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u8FD9\u4E2A\u51FD\u6570\u5176\u5B9E\u5C31\u505A\u4E86\u4E00\u4EF6\u4E8B\uFF0C\u5C31\u662F\u904D\u5386\u5220\u9664 <code>container</code> \u4E2D\u7684\u5185\u5BB9</p></li><li><p>\u7136\u540E\u8C03\u7528 <code>createLegacyRoot</code> \u751F\u6210 ReactRooter</p></li></ul><h3 id="createlegacyroot" tabindex="-1"><a class="header-anchor" href="#createlegacyroot" aria-hidden="true">#</a> createLegacyRoot</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createLegacyRoot</span><span class="token punctuation">(</span><span class="token parameter">container<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// createLegacyRoot \u65B9\u6CD5\u8FD4\u56DE ReactDOMBlockingRoot \u7684\u5B9E\u4F8B</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ReactDOMBlockingRoot</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> LegacyRoot<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>new</code> \u4E86\u4E00\u4E2A <code>ReactDOMBlockingRoot</code> \u4F20\u9012\u4E86\u4E09\u4E2A\u53C2\u6570</p><ul><li><p>container\uFF1ADOM Element</p></li><li><p>LegacyRoot\uFF1A\u4E00\u4E2A\u5E38\u91CF\uFF0C\u8FD9\u91CC\u8868\u793A <code>blockingRoot</code></p></li><li><p>options: \u53EF\u4EE5\u5FFD\u7565\uFF0C\u5C31\u662F\u90A3\u4E2A <code>hydrate</code></p></li></ul><h3 id="reactdomblockingroot" tabindex="-1"><a class="header-anchor" href="#reactdomblockingroot" aria-hidden="true">#</a> ReactDOMBlockingRoot</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">ReactDOMBlockingRoot</span><span class="token punctuation">(</span><span class="token parameter">container<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>_internalRoot <span class="token operator">=</span> <span class="token function">createRootImpl</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 <code>_internalRoot</code> \u8D4B\u503C <code>createRootImpl</code> \u51FD\u6570\u8C03\u7528\u7684\u7ED3\u679C\uFF0C\u5728\u4E4B\u524D <code>legacyRenderSubtreeIntoContainer</code> \u65B9\u6CD5\u4E2D <code>fiberRoot = root._internalRoot</code> \u5C31\u662F\u8FD9\u91CC\u6765\u7684</p><h3 id="createrootimpl" tabindex="-1"><a class="header-anchor" href="#createrootimpl" aria-hidden="true">#</a> createRootImpl</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createRootImpl</span><span class="token punctuation">(</span><span class="token parameter">container<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Tag is either LegacyRoot or Concurrent Root</span>
  <span class="token keyword">var</span> hydrate <span class="token operator">=</span> options <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>hydrate <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> hydrationCallbacks <span class="token operator">=</span> options <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>hydrationOptions <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token comment">// \u521B\u5EFAReact\u5BB9\u5668 fiberRootNode</span>
  <span class="token keyword">var</span> root <span class="token operator">=</span> <span class="token function">createContainer</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> hydrate<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5C06fiberNode \u6302\u8F7D\u5230container\u5BF9\u8C61\u4E0A</span>
  <span class="token function">markContainerAsRoot</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>current<span class="token punctuation">,</span> container<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> root<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7ED9\u5F53\u524D DOM \u8282\u70B9\u6807\u8BB0\u4E00\u4E2A internalContainerInstanceKey \u5C5E\u6027</span>
<span class="token comment">// internalContainerInstanceKey=__reactContainere$wyxea1uq6a</span>
<span class="token keyword">function</span> <span class="token function">markContainerAsRoot</span><span class="token punctuation">(</span><span class="token parameter">hostRoot<span class="token punctuation">,</span> node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   node<span class="token punctuation">[</span>internalContainerInstanceKey<span class="token punctuation">]</span> <span class="token operator">=</span> hostRoot<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u8C03\u7528 <code>createContainer</code> \u521B\u5EFA FiberNode \u5BF9\u8C61</p></li><li><p><code>markContainerAsRoot</code> \u51FD\u6570\u53EA\u662F\u5C06\u6700\u7EC8\u8FD4\u56DE\u7684 FiberRoot\u5BF9\u8C61\u4E0A\u7684 <code>current</code> \u5C5E\u6027\u6302\u8F7D\u5230\u4E86 <code>container</code> \u4E0A\u9762</p></li></ul><h3 id="createcontainer" tabindex="-1"><a class="header-anchor" href="#createcontainer" aria-hidden="true">#</a> createContainer</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u521B\u5EFA FiberRoot</span>
<span class="token keyword">function</span> <span class="token function">createContainer</span><span class="token punctuation">(</span><span class="token parameter">containerInfo<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> hydrate<span class="token punctuation">,</span> hydrationCallbacks</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8C03\u7528createFiberRoot</span>
  <span class="token keyword">return</span> <span class="token function">createFiberRoot</span><span class="token punctuation">(</span>containerInfo<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> hydrate<span class="token punctuation">,</span> hydrationCallbacks<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// createFiberRoot</span>
<span class="token keyword">function</span> <span class="token function">createFiberRoot</span><span class="token punctuation">(</span><span class="token parameter">containerInfo<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> hydrate<span class="token punctuation">,</span> hydrationCallbacks</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFAfiber\u6811root\u8282\u70B9</span>
  <span class="token keyword">var</span> root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FiberRootNode</span><span class="token punctuation">(</span>containerInfo<span class="token punctuation">,</span> tag<span class="token punctuation">,</span> hydrate<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> uninitializedFiber <span class="token operator">=</span> <span class="token function">createHostRootFiber</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">;</span>
  root<span class="token punctuation">.</span>current <span class="token operator">=</span> uninitializedFiber<span class="token punctuation">;</span>
  uninitializedFiber<span class="token punctuation">.</span>stateNode <span class="token operator">=</span> root<span class="token punctuation">;</span>
  <span class="token function">initializeUpdateQueue</span><span class="token punctuation">(</span>uninitializedFiber<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> root<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>new FiberRootNode</code>\uFF1A \u5C31\u662F\u5B9E\u4F8B\u5316\u4E86\u4E00\u4E2AFiberRoot\u5BF9\u8C61</p></li><li><p><code>createHostRootFiber</code>\uFF1A\u521B\u5EFA\u7684\u662F\u4E00\u4E2AFiber\u5BF9\u8C61\uFF0C\u8FD9\u4E2AFiber\u4E5F\u7ECF\u5E38\u88AB\u53EB RootFiber ,\u5E76\u4E14\u4FDD\u5B58\u5230 <code>FiberRoot.current</code> \u4E0B\u9762</p></li><li><p><code>initializeUpdateQueue</code>\uFF1A\u521B\u5EFA\u4E00\u4E2A\u66F4\u65B0\u961F\u5217\uFF0C\u6302\u8F7D <code>fiber.updateQueue</code> \u4E0B\u9762</p></li><li><p>\u6700\u540E\u8FDB\u884C\u8FD4\u56DE <code>root</code></p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// tag = 0</span>
<span class="token keyword">function</span> <span class="token function">createHostRootFiber</span><span class="token punctuation">(</span><span class="token parameter">tag</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> mode<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">===</span> ConcurrentRoot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    mode <span class="token operator">=</span> ConcurrentMode <span class="token operator">|</span> BlockingMode <span class="token operator">|</span> StrictMode<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">===</span> BlockingRoot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    mode <span class="token operator">=</span> BlockingMode <span class="token operator">|</span> StrictMode<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6267\u884C\u5230\u8FD9\u91CC</span>
    mode <span class="token operator">=</span> NoMode<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6B64\u65F6 mode=0</span>
  <span class="token keyword">return</span> <span class="token function">createFiber</span><span class="token punctuation">(</span>HostRoot<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// createFiber \u521B\u5EFA fiber</span>
<span class="token keyword">var</span> <span class="token function-variable function">createFiber</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">tag<span class="token punctuation">,</span> pendingProps<span class="token punctuation">,</span> key<span class="token punctuation">,</span> mode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// $FlowFixMe: the shapes are exact here but Flow doesn&#39;t like constructors</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FiberNode</span><span class="token punctuation">(</span>tag<span class="token punctuation">,</span> pendingProps<span class="token punctuation">,</span> key<span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6574\u7406\u4E00\u4E2A\u6D41\u7A0B</p><p><img src="`+u+`" alt=""></p><h3 id="\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u5C0F\u7ED3" aria-hidden="true">#</a> \u5C0F\u7ED3</h3><ul><li><p>root = container._reactRootContainer = ReactDOMBlockingRoot</p></li><li><p>root._internalRoot = fiberRootNode</p></li></ul><p>root \u5BF9\u8C61\uFF08container._reactRootContainer\uFF09\u4E0A\u6709\u4E00\u4E2A <code>_internalRoot</code> \u5C5E\u6027\uFF0C\u8FD9\u4E2A <code>_internalRoot</code> \u4E5F\u5C31\u662F\u4E00\u4E2A FiberRootNode \u5BF9\u8C61\uFF0C\u5176\u4E2D\u5305\u542B\u4E00\u4E2A <code>current</code> \u5C5E\u6027\uFF0C<code>current</code> \u5BF9\u8C61\u662F\u4E00\u4E2A Fiber\u8282\u70B9\uFF0C\u4E0D\u4EC5\u5982\u6B64\uFF0C\u5B83\u8FD8\u662F\u5F53\u524D Fiber \u6811\u7684\u5934\u90E8\u8282\u70B9</p><p>\u6240\u4EE5\u5728\u6267\u884C <code>unbatchedUpdates()</code> \u4E4B\u524D <code>render</code> \u4E3B\u8981\u662F <strong>\u5B8C\u6210 Fiber \u6811\u4E2D\u57FA\u672C\u5B9E\u4F53\u7684\u521B\u5EFA</strong> \u5176\u4E2D</p><ul><li><p>fiberRoot \u7684\u5173\u8054\u5BF9\u8C61\u662F\u771F\u5B9E DOM \u7684\u5BB9\u5668\u8282\u70B9</p></li><li><p>rootFiber \u5219\u4F5C\u4E3A\u865A\u62DF DOM \u7684\u6839\u8282\u70B9\u5B58\u5728</p></li></ul><p>\u63A5\u4E0B\u6765\uFF0C<code>fiberRoot</code> \u5C06\u548C <code>ReactDOM.render</code> \u65B9\u6CD5\u7684\u5176\u4ED6\u5165\u53C2\u4E00\u8D77\uFF0C\u88AB\u4F20\u5165 <code>updateContainer</code> \u65B9\u6CD5\uFF0C\u4ECE\u800C\u5F62\u6210\u4E00\u4E2A\u56DE\u8C03\u3002\u8FD9\u4E2A\u56DE\u8C03\uFF0C\u6B63\u662F\u63A5\u4E0B\u6765\u8981\u8C03\u7528\u7684 <code>unbatchedUpdates</code> \u65B9\u6CD5\u7684\u5165\u53C2</p><h3 id="unbatchedupdates" tabindex="-1"><a class="header-anchor" href="#unbatchedupdates" aria-hidden="true">#</a> unbatchedUpdates</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">unbatchedUpdates</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">var</span> prevExecutionContext <span class="token operator">=</span> executionContext<span class="token punctuation">;</span>
 <span class="token comment">// \u8FD9\u91CC\u662F\u5BF9\u4E0A\u4E0B\u6587\u7684\u5904\u7406\uFF0C\u4E0D\u7528\u5173\u6CE8</span>
 <span class="token comment">// \u53BB\u9664executionContext\u4E0A\u7684BatchedContext</span>
 executionContext <span class="token operator">&amp;=</span> <span class="token operator">~</span>BatchedContext<span class="token punctuation">;</span>
 <span class="token comment">// \u5F80executionContext\u4E0A\u6DFB\u52A0LegacyUnbatchedContext</span>
 executionContext <span class="token operator">|=</span> LegacyUnbatchedContext<span class="token punctuation">;</span>

 <span class="token keyword">try</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    <span class="token comment">// finally \u903B\u8F91\u91CC\u662F\u5BF9\u56DE\u8C03\u961F\u5217\u7684\u5904\u7406\uFF0C\u6B64\u5904\u4E0D\u7528\u592A\u5173\u6CE8</span>
   executionContext <span class="token operator">=</span> prevExecutionContext<span class="token punctuation">;</span>
   <span class="token keyword">if</span> <span class="token punctuation">(</span>executionContext <span class="token operator">===</span> NoContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5237\u65B0\u540C\u6B65\u4EFB\u52A1\u961F\u5217</span>
     <span class="token function">flushSyncCallbackQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u4FEE\u6539 <code>executionContext</code> \u8FD9\u4E2A\u53D8\u91CF\uFF0C\u8BA9\u4ED6\u542B\u6709 <code>LegacyUnbatchedContext</code>\uFF0C\u4E5F\u5C31\u662F\u975E\u6279\u91CF\u66F4\u65B0\u6A21\u5F0F</p></li><li><p>\u7136\u540E\u5C31\u662F <code>fn()</code> \u6267\u884C\u4F20\u5165\u7684\u56DE\u8C03\u51FD\u6570 <code>updateContainer</code></p></li><li><p>\u6700\u540E\u4F1A\u6267\u884C <code>flushSyncCallbackQueue</code>\uFF0C\u5237\u65B0\u540C\u6B65\u4EFB\u52A1\u961F\u5217</p></li></ul><h3 id="updatecontainer" tabindex="-1"><a class="header-anchor" href="#updatecontainer" aria-hidden="true">#</a> updateContainer</h3><p>\u6B64\u65F6\u53C2\u6570\u4F9D\u6B21\u4E3A\uFF1A</p><ul><li><p><code>children</code>\uFF1AApp \u7EC4\u4EF6</p></li><li><p><code>fiberRoot</code>: \u4E0A\u4E00\u6B65\u521B\u5EFA\u7684 <code>FilberRoot</code></p></li><li><p><code>parentComponent</code>\uFF1A <code>null</code></p></li><li><p><code>callback</code>: <code>undefined</code></p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">updateContainer</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> container<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">{</span>
    <span class="token function">onScheduleRoot</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> current$1 <span class="token operator">=</span> container<span class="token punctuation">.</span>current<span class="token punctuation">;</span>
  <span class="token comment">// \u8BA1\u7B97\u65B0\u5F00\u59CB\u7684\u65F6\u95F4</span>
  <span class="token keyword">var</span> currentTime <span class="token operator">=</span> <span class="token function">requestCurrentTimeForUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token comment">// \u521B\u5EFA\u4F18\u5148\u7EA7</span>
  <span class="token keyword">var</span> suspenseConfig <span class="token operator">=</span> <span class="token function">requestCurrentSuspenseConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u8BA1\u7B97\u8FC7\u671F\u65F6\u95F4</span>
  <span class="token keyword">var</span> expirationTime <span class="token operator">=</span> <span class="token function">computeExpirationForFiber</span><span class="token punctuation">(</span>currentTime<span class="token punctuation">,</span> current$1<span class="token punctuation">,</span> suspenseConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u7531\u4E8EparentComponent\u4E3Anull,\u6240\u4EE5\u8FD4\u56DE\u7A7A\u5BF9\u8C61{}</span>
  <span class="token keyword">var</span> context <span class="token operator">=</span> <span class="token function">getContextForSubtree</span><span class="token punctuation">(</span>parentComponent<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>container<span class="token punctuation">.</span>context <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    container<span class="token punctuation">.</span>context <span class="token operator">=</span> context<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    container<span class="token punctuation">.</span>pendingContext <span class="token operator">=</span> context<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isRendering <span class="token operator">&amp;&amp;</span> current <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>didWarnAboutNestedUpdates<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      didWarnAboutNestedUpdates <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u7ED3\u5408 suspenseConfig\uFF08\u4F18\u5148\u7EA7\uFF09\u4FE1\u606F\uFF0C\u521B\u5EFA update \u5BF9\u8C61\uFF0C\u4E00\u4E2A update \u5BF9\u8C61\u610F\u5473\u7740\u4E00\u4E2A\u66F4\u65B0</span>
  <span class="token keyword">var</span> update <span class="token operator">=</span> <span class="token function">createUpdate</span><span class="token punctuation">(</span>expirationTime<span class="token punctuation">,</span> suspenseConfig<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Caution: React DevTools currently depends on this property</span>

  <span class="token comment">// update \u7684 payload \u5BF9\u5E94\u7684\u662F\u4E00\u4E2A React \u5143\u7D20</span>
  update<span class="token punctuation">.</span>payload <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">element</span><span class="token operator">:</span> element
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u5904\u7406 callback\uFF0C\u8FD9\u4E2A callback \u5176\u5B9E\u5C31\u662F\u6211\u4EEC\u8C03\u7528 ReactDOM.render \u65F6\u4F20\u5165\u7684 callback</span>
  callback <span class="token operator">=</span> callback <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> callback<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>callback <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> callback <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;render(...): Expected the last optional \`callback\` argument to be a &#39;</span> <span class="token operator">+</span> <span class="token string">&#39;function. Instead received: %s.&#39;</span><span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    update<span class="token punctuation">.</span>callback <span class="token operator">=</span> callback<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
 <span class="token comment">// \u5C06 update \u5165\u961F</span>
  <span class="token comment">// \u4E00\u6574\u4E2AReact\u5E94\u7528\u4E2D\uFF0C\u4F1A\u6709\u591A\u6B21\u66F4\u65B0\uFF0C\u800C\u8FD9\u591A\u6B21\u66F4\u65B0\u5747\u5728\u66F4\u65B0\u961F\u5217\u4E2D</span>
  <span class="token function">enqueueUpdate</span><span class="token punctuation">(</span>current$1<span class="token punctuation">,</span> update<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//\u8FDB\u884C\u4EFB\u52A1\u8C03\u5EA6</span>
  <span class="token comment">//\u5F53React\u8FDB\u884CUpdate\u540E\uFF0C\u5C31\u8981\u8FDB\u884C\u8C03\u5EA6</span>
  <span class="token comment">//\u5373 \u6839\u636E\u4EFB\u52A1\u7684\u4F18\u5148\u7EA7\u53BB\u8C03\u5EA6\u4EFB\u52A1</span>
  <span class="token comment">//\u5148\u6267\u884C\u4F18\u5148\u7EA7\u9AD8\u7684\u4EFB\u52A1\uFF0C</span>
  <span class="token function">scheduleWork</span><span class="token punctuation">(</span>current$1<span class="token punctuation">,</span> expirationTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> expirationTime<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>updateContainer</code> \u51FD\u6570\u6700\u5173\u952E\u7684\u4E8B\u60C5\u53EF\u4EE5\u603B\u7ED3\u4E3A\u4E09\u4EF6\uFF1A</p><ol><li><p>\u521B\u5EFA\u5F53\u524D Fiber \u8282\u70B9\u7684 suspenseConfig\uFF08\u4F18\u5148\u7EA7\uFF09</p></li><li><p>\u7ED3\u5408 suspenseConfig\uFF08\u4F18\u5148\u7EA7\uFF09\uFF0C\u521B\u5EFA\u5F53\u524D Fiber \u8282\u70B9\u7684 <code>update</code> \u5BF9\u8C61\uFF0C\u5E76\u5C06\u5176\u5165\u961F</p></li><li><p>\u8C03\u5EA6\u5F53\u524D\u8282\u70B9\uFF08rootFiber\uFF09\u3002</p></li></ol><p><code>scheduleUpdateOnFiber</code> \u51FD\u6570\u7684\u4EFB\u52A1\u662F\u8C03\u5EA6\u5F53\u524D\u8282\u70B9\u7684\u66F4\u65B0\u3002\u5728\u8FD9\u4E2A\u51FD\u6570\u4E2D\uFF0C\u4F1A\u5904\u7406\u4E00\u7CFB\u5217\u4E0E\u4F18\u5148\u7EA7\u3001\u6253\u65AD\u64CD\u4F5C\u76F8\u5173\u7684\u903B\u8F91\u3002\u4F46\u662F\u5728 <code>ReactDOM.render</code> \u53D1\u8D77\u7684\u9996\u6B21\u6E32\u67D3\u94FE\u8DEF\u4E2D\uFF0C\u8FD9\u4E9B\u610F\u4E49\u90FD\u4E0D\u5927\uFF0C\u56E0\u4E3A\u8FD9\u4E2A\u6E32\u67D3\u8FC7\u7A0B\u5176\u5B9E\u662F\u540C\u6B65\u7684</p><p>\u5177\u4F53\u7684\u66F4\u65B0\u8FC7\u7A0B\u53E6\u5916\u653E\u4E2A\u7AE0\u8282\u7814\u7A76</p><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p><strong>ReactDOM.render</strong> \u505A\u7684\u4E8B\u60C5\u6838\u5FC3\u5C31\u505A\u4E24\u4EF6\u4E8B\u4EF6</p><ol><li><p>\u521B\u5EFA FiberNode</p></li><li><p>\u53D1\u5E03\u8C03\u5EA6\u4EFB\u52A1\uFF0C\u8FDB\u884C\u66F4\u65B0</p></li></ol>`,61),k={href:"https://segmentfault.com/a/1190000021883117",target:"_blank",rel:"noopener noreferrer"},v=e("\u6DF1\u5165react-ReactDOM.render"),m=n("br",null,null,-1),b={href:"https://cloud.tencent.com/developer/article/1843869",target:"_blank",rel:"noopener noreferrer"},f=e("\u6DF1\u5165\u7406\u89E3ReactDOM.render \u662F\u5982\u4F55\u4E32\u8054\u6E32\u67D3\u94FE\u8DEF\u7684\u5168\u8FC7\u7A0B");function y(h,g){const a=i("ExternalLinkIcon");return o(),p("div",null,[d,n("blockquote",null,[n("p",null,[n("a",k,[v,s(a)]),m,n("a",b,[f,s(a)])])])])}var w=t(r,[["render",y],["__file","ReactDOM.render.html.vue"]]);export{w as default};
