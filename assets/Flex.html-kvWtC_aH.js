import{_ as o,r as d,o as l,c as i,b as e,d as a,a as n,e as s}from"./app-kv3zS8h1.js";const p={},t=s(`<h1 id="flex" tabindex="-1"><a class="header-anchor" href="#flex" aria-hidden="true">#</a> Flex</h1><p>Flex 是 <code>Flexible Box</code> 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性。</p><p>任何一个容器都可以指定为 Flex 布局。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box</span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>行内元素也可以使用 Flex 布局。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box</span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-flex<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念" aria-hidden="true">#</a> 基本概念</h2><p>采用 Flex 布局的元素，称为 Flex 容器（flex container），简称<code>容器</code></p><p>它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称<code>项目</code></p><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071004.png" alt=""></p><p>容器默认存在两根轴：水平的主轴（<code>main axis</code>）和垂直的交叉轴（<code>cross axis</code>）。主轴的开始位置（与边框的交叉点）叫做<code>main start</code>，结束位置叫做<code>main end</code>；交叉轴的开始位置叫做<code>cross start</code>，结束位置叫做<code>cross end</code>。</p><p>项目默认沿主轴排列。单个项目占据的主轴空间叫做<code>main size</code>，占据的交叉轴空间叫做<code>cross size</code></p><h2 id="容器的属性" tabindex="-1"><a class="header-anchor" href="#容器的属性" aria-hidden="true">#</a> 容器的属性</h2><ul><li><p><code>flex-direction</code>: 决定主轴的方向，即项目的排列方向</p><ul><li><p><code>row</code>: 水平排列，顺序从左到右，<code>flex-direction</code>的默认值</p></li><li><p><code>row-reverse</code>: 水平排列，顺序从右到左</p></li><li><p><code>column</code>: 垂直排列，顺序从上到下</p></li><li><p><code>column-reverse</code>: 垂直排列，顺序从下到上</p></li></ul><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071005.png" alt=""></p></li><li><p><code>flex-wrap</code>: 决定项目在一条轴上排列不下时，如何换行</p><ul><li><p><code>nowrap</code>: 不换行，<code>flex-wrap</code>的默认值</p></li><li><p><code>wrap</code>: 换行，第一行在上方</p></li><li><p><code>wrap-reverse</code>: 换行，第一行在下方</p></li></ul></li><li><p><code>flex-flow</code>: <code>flex-direction</code>和<code>flex-wrap</code>的合并简写方式,默认值为<code>row nowrap</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>flex-flow: &lt;flex-direction&gt;  &lt;flex-wrap&gt;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><code>justify-content</code>: 定义了项目在主轴上的对齐方式</p><ul><li><p><code>flex-start</code>（默认值）: 左对齐</p></li><li><p><code>flex-end</code>: 右对齐</p></li><li><p><code>center</code>: 居中对齐</p></li><li><p><code>space-beteen</code>: 两端对齐，项目之间的间隔都相等</p></li><li><p><code>space-around</code>: 每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍</p></li></ul><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071010.png" alt=""></p></li><li><p><code>align-item</code>: 定义项目在交叉轴上如何对齐</p><ul><li><p><code>stretch</code>（默认值）: 如果项目未设置高度或设为auto，将占满整个容器的高度。</p></li><li><p><code>flex-start</code>: 顶部对齐</p></li><li><p><code>flex-end</code>: 尾部对齐</p></li><li><p><code>center</code>: 居中对齐</p></li><li><p><code>baseline</code>: 项目的第一行文字的基线对齐</p></li></ul><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071011.png" alt=""></p></li><li><p><code>align-content</code>: 属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用</p><ul><li><p><code>flex-start</code>：与交叉轴的起点对齐</p></li><li><p><code>flex-end</code>：与交叉轴的终点对齐</p></li><li><p><code>center</code>：与交叉轴的中点对齐</p></li><li><p><code>space-between</code>：与交叉轴两端对齐，轴线之间的间隔平均分布</p></li><li><p><code>space-around</code>：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍</p></li><li><p><code>stretch</code>（默认值）：轴线占满整个交叉轴</p></li></ul></li></ul><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071012.png" alt=""></p><h2 id="项目上的属性" tabindex="-1"><a class="header-anchor" href="#项目上的属性" aria-hidden="true">#</a> 项目上的属性</h2><ul><li><p><code>order</code>: <code>order</code>属性定义项目的排列顺序。数值越小，排列越靠前，默认为<code>0</code></p></li><li><p><code>flex-grow</code>: 定义项目的放大比例，默认为<code>0</code>，即如果存在剩余空间，也不放大</p></li><li><p><code>flex-shrink</code>: 定义了项目的缩小比例，默认为<code>1</code>，即如果空间不足，该项目将缩小,如果所有项目的<code>flex-shrink</code>属性都为<code>1</code>，当空间不足时，都将等比例缩小。如果一个项目的<code>flex-shrink</code>属性为<code>0</code>，则空间不足时，将不会缩小</p></li><li><p><code>flex-basis</code>: 定义了在分配多余空间之前，项目占据的主轴空间（<code>main size</code>）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为<code>auto</code>，即项目的本来大小</p></li><li><p><code>flex</code>: <code>flex</code>属性是<code>flex-grow</code>, <code>flex-shrink</code> 和 <code>flex-basis</code>的简写，默认值为<code>0 1 auto</code>。后两个属性可选</p></li><li><p><code>align-self</code>: <code>align-self</code>属性允许单个项目有与其他项目不一样的对齐方式，可覆盖<code>align-items</code>属性。默认值为<code>auto</code>，表示继承父元素的<code>align-items</code>属性，如果没有父元素，则等同于<code>stretch</code></p></li></ul><p>该属性可能取6个值，除了<code>auto</code>，其他都与<code>align-items</code>属性完全一致</p><h2 id="q-a" tabindex="-1"><a class="header-anchor" href="#q-a" aria-hidden="true">#</a> Q&amp;A</h2><h3 id="flex-子项元素使用-ellipsis-无效" tabindex="-1"><a class="header-anchor" href="#flex-子项元素使用-ellipsis-无效" aria-hidden="true">#</a> <code>flex</code> 子项元素使用 <code>ellipsis</code> 无效</h3><p>原因： 一般情况下 <code>min-width</code> 属性默认值是 <code>0</code>，但是 Flexbox 容器中的 <code>flex项</code> 的 <code>min-width</code> 属性默认值是 <code>auto</code></p><p>解决方案： 给 <code>flex项</code> 设计样式：<code>min-width：0</code></p>`,22),r={href:"http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html",target:"_blank",rel:"noopener noreferrer"};function u(x,f){const c=d("ExternalLinkIcon");return l(),i("div",null,[t,e("blockquote",null,[e("p",null,[e("a",r,[a("阮一峰的网络日志 - Flex 布局教程"),n(c)])])])])}const m=o(p,[["render",u],["__file","Flex.html.vue"]]);export{m as default};
