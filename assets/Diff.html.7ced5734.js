import{_ as n,o as s,c as a,d as p}from"./app.62075c25.js";var t="/lanjz/assets/diff-2.07fda9ab.jpg",e="/lanjz/assets/diff-4.e6bd7829.jpg",o="/lanjz/assets/diff-3.68f439fc.jpg";const c={},l=p(`<h1 id="diff" tabindex="-1"><a class="header-anchor" href="#diff" aria-hidden="true">#</a> Diff</h1><p>\u4E4B\u524D\u4E86\u89E3\u4E86\u4E0B Vue3 \u5347\u7EA7\u76EE\u7684\uFF0C\u53D1\u73B0\u6709\u4ECB\u7ECD\u5230 Vue3 \u5728 Diff \u65B9\u9762\u505A\u4E86\u4F18\u5316\uFF0C\u6240\u4EE5\u6574\u7406\u4E00\u4E0B Vue3 Diff \u4EE5\u53CA\u5728 Diff \u65B9\u9762\u505A\u4E86\u54EA\u4E9B\u6539\u8FDB</p><h2 id="diff\u8FC7\u7A0B" tabindex="-1"><a class="header-anchor" href="#diff\u8FC7\u7A0B" aria-hidden="true">#</a> Diff\u8FC7\u7A0B</h2><p>Diff \u4E3B\u8981\u662F\u5904\u7406\u65B0\u65E7\u5B50\u8282\u70B9\u7684\u8FC7\u7A0B\uFF0C\u76F4\u63A5\u627E\u5230\u5BF9\u5E94\u4F4D\u7F6E</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">const</span> <span class="token function-variable function">patchChildren</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> isSVG<span class="token punctuation">,</span> optimized <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> c1 <span class="token operator">=</span> n1 <span class="token operator">&amp;&amp;</span> n1<span class="token punctuation">.</span>children<span class="token punctuation">;</span>
      <span class="token keyword">const</span> prevShapeFlag <span class="token operator">=</span> n1 <span class="token operator">?</span> n1<span class="token punctuation">.</span>shapeFlag <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> c2 <span class="token operator">=</span> n2<span class="token punctuation">.</span>children<span class="token punctuation">;</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> patchFlag<span class="token punctuation">,</span> shapeFlag <span class="token punctuation">}</span> <span class="token operator">=</span> n2<span class="token punctuation">;</span>
      <span class="token comment">// fast path</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>patchFlag <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>patchFlag <span class="token operator">&amp;</span> <span class="token number">128</span> <span class="token comment">/* KEYED_FRAGMENT */</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">patchKeyedChildren</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span> c2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> isSVG<span class="token punctuation">,</span> optimized<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>patchFlag <span class="token operator">&amp;</span> <span class="token number">256</span> <span class="token comment">/* UNKEYED_FRAGMENT */</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// unkeyed</span>
          <span class="token function">patchUnkeyedChildren</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span> c2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> isSVG<span class="token punctuation">,</span> optimized<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// children has 3 possibilities: text, array or no children.</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>patchChildren</code> \u6839\u636E\u662F\u5426\u5B58\u5728 <code>key</code> \u6267\u884C <code>patchKeyedChildren</code> \u6216 <code>patchUnkeyedChildren</code></p><h3 id="patchunkeyedchildren" tabindex="-1"><a class="header-anchor" href="#patchunkeyedchildren" aria-hidden="true">#</a> patchUnkeyedChildren</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">const</span> <span class="token function-variable function">patchUnkeyedChildren</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">c1<span class="token punctuation">,</span> c2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> isSVG<span class="token punctuation">,</span> optimized</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      c1 <span class="token operator">=</span> c1 <span class="token operator">||</span> <span class="token constant">EMPTY_ARR</span><span class="token punctuation">;</span>
      c2 <span class="token operator">=</span> c2 <span class="token operator">||</span> <span class="token constant">EMPTY_ARR</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> oldLength <span class="token operator">=</span> c1<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
      <span class="token keyword">const</span> newLength <span class="token operator">=</span> c2<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
      <span class="token keyword">const</span> commonLength <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>oldLength<span class="token punctuation">,</span> newLength<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> i<span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> commonLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> nextChild <span class="token operator">=</span> <span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> optimized
          <span class="token operator">?</span> <span class="token function">cloneIfMounted</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
          <span class="token operator">:</span> <span class="token function">normalizeVNode</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">patch</span><span class="token punctuation">(</span>c1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> nextChild<span class="token punctuation">,</span> container<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> isSVG<span class="token punctuation">,</span> optimized<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>oldLength <span class="token operator">&gt;</span> newLength<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// remove old</span>
        <span class="token function">unmountChildren</span><span class="token punctuation">(</span>c1<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> commonLength<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// mount new</span>
        <span class="token function">mountChildren</span><span class="token punctuation">(</span>c2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> isSVG<span class="token punctuation">,</span> optimized<span class="token punctuation">,</span> commonLength<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u53EF\u4EE5\u5F97\u5230\u7ED3\u8BBA\uFF0C\u5BF9\u4E8E\u4E0D\u5B58\u5728key\u60C5\u51B5</p><ul><li><p>\u53D6\u65B0\u8001 <code>children</code> \u8282\u70B9\u7684 <code>length</code> \u83B7\u53D6\u6700\u5C0F\u503C\uFF0C\u8FDB\u884C <code>patch</code> \u5DE5\u4F5C\u3002</p></li><li><p>\u5982\u679C\u8001\u8282\u70B9\u6570\u91CF\u5927\u4E8E\u65B0\u7684\u8282\u70B9\u6570\u91CF \uFF0C\u79FB\u9664\u591A\u51FA\u6765\u7684\u8282\u70B9\u3002</p></li><li><p>\u5982\u679C\u65B0\u7684\u8282\u70B9\u6570\u91CF\u5927\u4E8E\u8001\u8282\u70B9\u7684\u6570\u91CF\uFF0C\u91CD\u65B0 mountChildren\u65B0\u589E\u7684\u8282\u70B9\u3002</p></li></ul><h3 id="patchkeyedchildren" tabindex="-1"><a class="header-anchor" href="#patchkeyedchildren" aria-hidden="true">#</a> patchKeyedChildren</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u8BB0\u5F55\u7D22\u5F15</span>
<span class="token keyword">const</span> l2 <span class="token operator">=</span> c2<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token comment">// \u65B0vnode\u7684\u6570\u91CF</span>
<span class="token keyword">let</span> e1 <span class="token operator">=</span> c1<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u8001vnode \u6700\u540E\u4E00\u4E2A\u8282\u70B9\u7684\u7D22\u5F15</span>
<span class="token keyword">let</span> e2 <span class="token operator">=</span> l2 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u65B0\u8282\u70B9\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u7684\u7D22\u5F15</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u4E00\u3001\u5F00\u59CB\u7B2C\u4E00\u6B21 <code>while</code> \u5FAA\u73AF\uFF1A</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> e1 <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;=</span> e2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> n1 <span class="token operator">=</span> c1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> n2 <span class="token operator">=</span> <span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> optimized
      <span class="token operator">?</span> <span class="token function">cloneIfMounted</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token operator">:</span> <span class="token function">normalizeVNode</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSameVNodeType</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">patch</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> isSVG<span class="token punctuation">,</span> optimized<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    i<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E00\u6B65\u7684\u4E8B\u60C5\u5C31\u662F\u4ECE\u5934\u5F00\u59CB\u6BD4\u8F83\u65B0\u65E7\u8282\u70B9\uFF0C\u5982\u679C\u76F8\u540C\u7684\u8BDD\u6267\u884C <code>patch</code>\uFF0C\u5982\u679C\u53D1\u73B0\u6709\u4E0D\u76F8\u540C\u7684\u8282\u70B9\uFF0C\u7ACB\u5373\u8DF3\u51FA\u5FAA\u73AF</p><p><strong>\u4E8C\u3001\u4E4B\u540E\u5982\u679C\u53D1\u73B0\u6CA1\u6709 <code>patch</code> \u5B8C\u5219\u518D\u6B21\u8FDB\u5165 <code>while</code> \u5FAA\u73AF\uFF1A</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> e1 <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;=</span> e2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> n1 <span class="token operator">=</span> c1<span class="token punctuation">[</span>e1<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> n2 <span class="token operator">=</span> <span class="token punctuation">(</span>c2<span class="token punctuation">[</span>e2<span class="token punctuation">]</span> <span class="token operator">=</span> optimized
      <span class="token operator">?</span> <span class="token function">cloneIfMounted</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>e2<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token operator">:</span> <span class="token function">normalizeVNode</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>e2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSameVNodeType</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">patch</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> isSVG<span class="token punctuation">,</span> optimized<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    e1<span class="token operator">--</span><span class="token punctuation">;</span>
    e2<span class="token operator">--</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u524D\u5FAA\u73AF\u5219\u662F\u4ECE\u5C3E\u90E8\u5F00\u59CB\u904D\u5386\u4F9D\u6B21\u5411\u524D <code>diff</code>\uFF0C\u5982\u679C\u53D1\u73B0\u4E0D\u662F\u76F8\u540C\u7684\u8282\u70B9\uFF0C\u90A3\u4E48\u7ACB\u5373\u8DF3\u51FA\u5FAA\u73AF</p><p>\u7ECF\u8FC7\u524D\u4E24\u6B21\u7684\u5FAA\u73AF\uFF0C\u5DF2\u5BF9\u9996\u5C3E\u8FDE\u7EED\u76F8\u540C\u7684\u8282\u70B9\u90FD <code>patch</code> \u4E86</p><p><strong>\u4E09-1\u3001\u5982\u679C\u65E7\u8282\u70B9\u90FD\u904D\u5386\u5B8C\u4E86\uFF0C\u65B0\u7684\u8282\u70B9\u8FD8\u6CA1\u6709\u904D\u5386\u5B8C\uFF0C\u8D70\u4E0B\u9762\u7684\u5206\u652F\uFF1A</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> e1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> e2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> nextPos <span class="token operator">=</span> e2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> anchor <span class="token operator">=</span> nextPos <span class="token operator">&lt;</span> l2 <span class="token operator">?</span> c2<span class="token punctuation">[</span>nextPos<span class="token punctuation">]</span><span class="token punctuation">.</span>el <span class="token operator">:</span> parentAnchor<span class="token punctuation">;</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> e2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">patch</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> optimized
          <span class="token operator">?</span> <span class="token function">cloneIfMounted</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
          <span class="token operator">:</span> <span class="token function">normalizeVNode</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> isSVG<span class="token punctuation">)</span><span class="token punctuation">;</span>
        i<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65F6\u8868\u793A\u5728\u65B0\u8282\u70B9\u5E8F\u5217\u4E2D\u5269\u4F59\u7684\u8282\u70B9\u90FD\u662F\u65B0\u589E\u7684\u8282\u70B9</p><p><strong>\u4E09-2\u5982\u679C\u662F\u65B0\u7684\u8282\u70B9\u5B8C\u4E86\uFF0C\u65E7\u7684\u8282\u70B9\u6CA1\u6709\u904D\u5386\u5B8C\uFF0C\u5219\u8D70\u4EE5\u4E0B\u5206\u652F</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> e2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> e1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">unmount</span><span class="token punctuation">(</span>c1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      i<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65F6\u8868\u793A\u5728\u65E7\u8282\u70B9\u5E8F\u5217\u4E2D\u5269\u4F59\u7684\u8282\u70B9\u90FD\u8981\u9664\u79FB\u7684\u8282\u70B9</p><p><strong>\u56DB\u3001\u6CA1\u6709\u6EE1\u8DB3\u6B65\u9AA4\u4E09\u7684\u6761\u4EF6\u5219\u8FDB\u5165\u6700\u540E\u7684 <code>else</code> \u5206\u652F</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5F00\u59CB\u8FDB\u5165 else </span>
<span class="token keyword">const</span> s1 <span class="token operator">=</span> i<span class="token punctuation">;</span> <span class="token comment">// prev starting index</span>
<span class="token keyword">const</span> s2 <span class="token operator">=</span> i<span class="token punctuation">;</span> <span class="token comment">// next starting index</span>
<span class="token comment">// 5.1 build key:index map for newChildren</span>
<span class="token keyword">const</span> keyToNewIndexMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>i</code> \u8868\u793A\u8FD8\u672A\u904D\u5386\u7684\u4F4D\u7F6E\uFF0C<code>keyToNewIndexMap</code> \u7528\u4E8E\u4FDD\u5B58\u65B0\u8282\u70B9</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> s2<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> e2<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> nextChild <span class="token operator">=</span> <span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> optimized
    <span class="token operator">?</span> <span class="token function">cloneIfMounted</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token operator">:</span> <span class="token function">normalizeVNode</span><span class="token punctuation">(</span>c2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>nextChild<span class="token punctuation">.</span>key <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span> keyToNewIndexMap<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>nextChild<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Duplicate keys found during update:</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>nextChild<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Make sure keys are unique.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    keyToNewIndexMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>nextChild<span class="token punctuation">.</span>key<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u904D\u5386\u5269\u4F59\u7684\u65B0\u8282\u70B9\uFF0C\u5982\u679C\u8282\u70B9\u5B58\u5728 <code>key</code>,\u4EE5 <code>key</code> \u4E3A\u952E\u4FDD\u5B58\u5230 <code>keyToNewIndexMap</code> \u4E2D\uFF0C\u540C\u65F6\u5982\u679C\u5B58\u5728\u76F8\u540C\u7684 <code>key</code>\u7684\u8282\u70B9\u7684\uFF0C\u5219\u63D0\u793A <code>warn</code></p><p>\u8FD9\u4E00\u6B65\u4E3B\u8981\u7684\u4F5C\u7528\u5C31\u662F\u5BFB\u627E\u6709 <code>key</code> \u7684\u8282\u70B9</p><p><strong>\u4E94\u3001\u5904\u7406\u5269\u4F59\u6CA1\u6709 patch \u7684\u8282\u70B9</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5904\u7406\u5269\u4F59\u6CA1\u6709 patch \u7684\u8282\u70B9</span>
<span class="token comment">// \u5339\u914D\u8282\u70B9 &amp; \u79FB\u9664\u4E0D\u5B58\u5728\u7684\u8282\u70B9</span>
<span class="token keyword">let</span> j<span class="token punctuation">;</span>
<span class="token keyword">let</span> patched <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> toBePatched <span class="token operator">=</span> e2 <span class="token operator">-</span> s2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u672A patch \u7684\u8282\u70B9\u6570\u91CF</span>
<span class="token keyword">let</span> moved <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// \u7528\u4E8E\u8DDF\u8E2A\u4EFB\u4F55\u8282\u70B9\u662F\u5426\u5DF2\u79FB\u52A8</span>
<span class="token keyword">let</span> maxNewIndexSoFar <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token comment">// works as Map&lt;newIndex, oldIndex&gt;</span>
<span class="token comment">// Note that oldIndex is offset by +1</span>
<span class="token comment">// and oldIndex = 0 is a special value indicating the new node has</span>
<span class="token comment">// no corresponding old node.</span>
<span class="token comment">// used for determining longest stable subsequence</span>
<span class="token keyword">const</span> newIndexToOldIndexMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>toBePatched<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> toBePatched<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
  newIndexToOldIndexMap<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// \u521D\u59CB\u5316\u6240\u6709\u503C\u4E3A 0</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> s1<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> e1<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u904D\u5386\u672A patch \u7684\u65E7\u8282\u70B9\u5E8F\u5217</span>
  <span class="token keyword">const</span> prevChild <span class="token operator">=</span> c1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>patched <span class="token operator">&gt;=</span> toBePatched<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u5F53\u524D\u904D\u5386\u7684\u6570\u91CF\u5DF2\u7ECF\u8D85\u8FC7\u4E86 toBePatched \u957F\u5EA6\uFF0C\u8BF4\u660E\u8FD9\u4E9B\u90FD\u662F\u8981\u79FB\u9664\u7684</span>
    <span class="token function">unmount</span><span class="token punctuation">(</span>prevChild<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">continue</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> newIndex<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>prevChild<span class="token punctuation">.</span>key <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u5B58\u5728 key \u5219\uFF0C\u5219\u4ECE \`keyToNewIndexMap\` \u627E\u51FA\u5BF9\u5E94\u7684\u65B0\u8282\u70B9\u7684\u7D22\u5F15</span>
    newIndex <span class="token operator">=</span> keyToNewIndexMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>prevChild<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// key-less node, try to locate a key-less node of the same type</span>
    <span class="token comment">// \u5426\u5219\u904D\u5386\u672Apatch\u7684\u65E7\u8282\u70B9\uFF0C\u5BFB\u627E\u4E0E\u5F53\u524D\u65E7\u8282\u70B9\u76F8\u540C\u7684\u8282\u70B9\uFF0C\u83B7\u53D6\u7D22\u5F15\u503C   </span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> s2<span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> e2<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>newIndexToOldIndexMap<span class="token punctuation">[</span>j <span class="token operator">-</span> s2<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
        <span class="token function">isSameVNodeType</span><span class="token punctuation">(</span>prevChild<span class="token punctuation">,</span> c2<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        newIndex <span class="token operator">=</span> j<span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>newIndex <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u6CA1\u6709\u627E\u5230\u76F8\u540C\u7684\u8282\u70B9\uFF0C\u90A3\u4E48\u76F4\u63A5\u79FB\u9664\u65E7\u8282\u70B9    </span>
    <span class="token function">unmount</span><span class="token punctuation">(</span>prevChild<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6709\u7684\u8BDD\u5219\u4FDD\u5B58\u5230 newIndexToOldIndexMap \u4E2D    </span>
    newIndexToOldIndexMap<span class="token punctuation">[</span>newIndex <span class="token operator">-</span> s2<span class="token punctuation">]</span> <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newIndex <span class="token operator">&gt;=</span> maxNewIndexSoFar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8868\u793A\u5339\u914D\u7684\u8282\u70B9\u987A\u5E8F\u662F\u4E0D\u53D8\u7684    </span>
      <span class="token comment">// maxNewIndexSoFar \u6307\u5411\u5339\u914D\u5230\u7684\u6700\u5927\u7D22\u5F15\u4F4D\u7F6E</span>
      maxNewIndexSoFar <span class="token operator">=</span> newIndex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8868\u793A\u5B58\u5728\u79FB\u52A8\u7684\u8282\u70B9</span>
      moved <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
   <span class="token comment">// path \u5339\u914D\u5230\u7684\u65B0\u65E7\u8282\u70B9</span>
    <span class="token function">patch</span><span class="token punctuation">(</span>prevChild<span class="token punctuation">,</span> c2<span class="token punctuation">[</span>newIndex<span class="token punctuation">]</span><span class="token punctuation">,</span> container<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> isSVG<span class="token punctuation">,</span> optimized<span class="token punctuation">)</span><span class="token punctuation">;</span>
    patched<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5173\u4E8E\u4E0A\u9762\u51E0\u4E2A\u53D8\u91CF\u7684\u5B9A\u4E49\uFF1A</p><p><strong>toBePatched\uFF1A</strong> \u65B0\u8282\u70B9\u5E8F\u5217\u4E2D\u8FD8\u672A\u5339\u914D\u7684\u8282\u70B9\u6570\u91CF</p><p><strong>newIndexToOldIndexMap\uFF1A</strong></p><ul><li><p><code>newIndexToOldIndexMap</code> \u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C<code>key</code> \u8868\u793A\u5F53\u524D\u65B0\u8282\u70B9\u7684\u7D22\u5F15\uFF0C<code>value</code> \u8868\u793A\u8DDF\u8FD9\u4E2A\u65B0\u8282\u70B9\u76F8\u540C\u7684\u65E7\u8282\u70B9\u7684\u7D22\u5F15\uFF0C\u4E24\u4E2A\u8282\u70B9\u76F8\u540C\u8BF4\u660E\u53EF\u4EE5\u76F4\u63A5\u590D\u7528\u65E7\u8282\u70B9\uFF0C\u5224\u65AD\u8282\u70B9\u662F\u5426\u76F8\u540C\u4E3B\u8981\u8FD8\u662F\u901A\u8FC7\u5224\u65AD\u662F\u5426\u6709\u76F8\u540C\u7684 <code>key</code> \u4E3A\u4E3B</p></li><li><p><code>newIndexToOldIndexMap</code> \u521D\u59CB\u5316\u957F\u5EA6\u5C31\u662F <code>toBePatched</code>\uFF0C\u4E14\u9ED8\u8BA4\u503C\u662F <code>0</code>\uFF0C<code>0</code> \u8868\u793A\u6CA1\u6709\u5BF9\u5E94\u7684\u65E7\u8282\u70B9</p></li><li><p>\u56E0\u4E3A\u7528 <code>0</code> \u8868\u793A\u6CA1\u6709\u5BF9\u5E94\u65E7\u8282\u70B9\uFF0C\u4F46\u662F\u7D22\u5F15 <code>0</code> \u5728\u6570\u7EC4\u662F\u4E2A\u6709\u6548\u7684\u4F4D\u7F6E\uFF0C\u6240\u4EE5\u5BF9\u4E8E\u6709\u5339\u914D\u7684\u65E7\u8282\u70B9\u7684\uFF0C\u89C4\u5219\u5728\u539F\u6765\u7D22\u5F15\u503C + 1</p></li></ul><p>\u904D\u5386\u5269\u4F59\u7684\u65E7\u8282\u70B9\u5E8F\u5217\uFF0C\u5982\u679C\u5F53\u524D\u7684\u65E7\u8282\u70B9\u5B58\u5728 <code>key</code> \uFF0C\u5219\u4ECE <code>keyToNewIndexMap</code> \u4E2D\u627E\u5230\u5BF9\u5E94\u7684\u65B0\u8282\u70B9\u7D22\u5F15\uFF0C\u5426\u5219\u901A\u8FC7 <code>isSameVNodeType</code> \u65B9\u6CD5\u4E24\u4E2A\u4E24\u4E2A\u8282\u70B9\u662F\u5426\u76F8\u540C</p><p>\u5982\u679C\u6CA1\u6709\u627E\u5230\u76F8\u540C\u7684\u8282\u70B9\u5219\u5378\u8F7D\u8FD9\u4E2A\u65E7\u8282\u70B9\uFF0C\u5426\u5219\u901A\u8FC7 <code>patch</code> \u7EE7\u7EED\u5904\u7406\u8FD9\u4E24\u4E2A\u8282\u70B9</p><p>\u5F53\u524D\u6B65\u9AA4\u4E94\u4E3B\u8981\u4F5C\u7528\u5C31\u662F\u5728\u65B0\u65E7\u4E24\u4E2A\u5E8F\u5217\u4E2D\u5BFB\u627E\u76F8\u540C\u7684\u8282\u70B9\uFF0C<strong>\u5982\u679C\u5B58\u5728\u76F8\u540C\u7684\u8282\u70B9\u7EE7\u7EED\u4F7F\u7528 <code>patch</code> \u5904\uFF0C\u5982\u679C\u5B58\u5728\u79FB\u9664\u7684\u8282\u70B9\u5219\u8FDB\u884C\u5378\u8F7D\u5904\u7406</strong>\uFF0C\u4F46\u662F\u8FD8\u6CA1\u505A\u79FB\u52A8\u548C\u65B0\u589E\u5730\u70B9\u7684\u5904\u7406\uFF0C\u6240\u4EE5\u8FD8\u5F97\u7EE7\u7EED\u4E0B\u5F80\u8D70</p><p><strong>\u516D\u3001\u79FB\u52A8\u548C\u65B0\u589E\u8282\u70B9</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 5.3 move and mount</span>
<span class="token comment">// \u53EA\u5728\u8282\u70B9\u79FB\u52A8\u65F6\u751F\u6210\u6700\u957F\u7A33\u5B9A\u5B50\u5E8F\u5217</span>
<span class="token comment">// const EMPTY_ARR =  Object.freeze([])</span>
<span class="token keyword">const</span> increasingNewIndexSequence <span class="token operator">=</span> moved
  <span class="token operator">?</span> <span class="token function">getSequence</span><span class="token punctuation">(</span>newIndexToOldIndexMap<span class="token punctuation">)</span>
  <span class="token operator">:</span> <span class="token constant">EMPTY_ARR</span><span class="token punctuation">;</span>
j <span class="token operator">=</span> increasingNewIndexSequence<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token comment">// looping backwards so that we can use last patched node as anchor</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> toBePatched <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> nextIndex <span class="token operator">=</span> s2 <span class="token operator">+</span> i<span class="token punctuation">;</span>
  <span class="token keyword">const</span> nextChild <span class="token operator">=</span> c2<span class="token punctuation">[</span>nextIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> anchor <span class="token operator">=</span> nextIndex <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> l2 <span class="token operator">?</span> c2<span class="token punctuation">[</span>nextIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>el <span class="token operator">:</span> parentAnchor<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>newIndexToOldIndexMap<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// mount new</span>
    <span class="token function">patch</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> nextChild<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> isSVG<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>moved<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// move if:</span>
    <span class="token comment">// \u6CA1\u6709\u7A33\u5B9A\u7684\u5B50\u5E8F\u5217 (e.g. a reverse)</span>
    <span class="token comment">// \u6216\u8005\u5F53\u524D\u8282\u70B9\u4E0D\u5728\u7A33\u5B9A\u5E8F\u5217\u4E2D</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> i <span class="token operator">!==</span> increasingNewIndexSequence<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">move</span><span class="token punctuation">(</span>nextChild<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">,</span> <span class="token number">2</span> <span class="token comment">/* REORDER */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      j<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7 <code>toBePatched</code> \u904D\u5386\u5269\u4F59\u65B0\u8282\u70B9\u5E8F\u5217\uFF0C\u5982\u679C <code>newIndexToOldIndexMap</code> \u6CA1\u6709\u5339\u914D\u7684\u65E7\u5730\u70B9\uFF0C\u5219\u8868\u793A\u8FD9\u4E2A\u8282\u70B9\u662F\u65B0\u589E\u7684\uFF0C\u5426\u5219\u79FB\u52A8\u8282\u70B9</p><p>\u4E0A\u9762\u4EE3\u7801\u5BF9\u4E8E\u5B58\u5728\u8981\u79FB\u52A8\u7684\u8282\u70B9\uFF0C\u4F1A\u6839\u636E <code>newIndexToOldIndexMap</code> \u751F\u6210\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\uFF0C\u5982\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u5BF9\u4E8E\u539F\u59CB\u5E8F\u5217\uFF1A0, 8, 4, 12, 2, 10, 6, 14, 1, 9, 5, 13, 3, 11, 7, 15
\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u4E3A\uFF1A0, 2, 6, 9, 11, 15
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u957F\u9012\u589E\u5B50\u5E8F\u5217\u7684\u4F5C\u7528\uFF1A\u9700\u8981\u4E00\u4E2A\u5E8F\u5217\u4F5C\u4E3A\u57FA\u7840\u7684\u53C2\u7167\u5E8F\u5217\uFF0C\u5176\u4ED6\u672A\u5728\u7A33\u5B9A\u5E8F\u5217\u7684\u8282\u70B9\uFF0C\u8FDB\u884C\u79FB\u52A8</p><p>\u8868\u793A\u6709\u70B9\u770B\u4E0D\u61C2\u6700\u540E\u79FB\u52A8\u7684\u64CD\u4F5C~</p><h2 id="diff\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#diff\u603B\u7ED3" aria-hidden="true">#</a> Diff\u603B\u7ED3</h2><p>\u7ECF\u8FC7\u4E0A\u8FF0\u6211\u4EEC\u5927\u81F4\u77E5\u9053\u4E86diff\u7B97\u6CD5\u7684\u6D41\u7A0B</p><ol><li><p>\u4ECE\u524D\u5F80\u540E\u904D\u5386\u65B0\u65E7\u5B50\u5E8F\u5217\u627E\u5230\u6709\u76F8\u540C\u7684\u8282\u70B9\u8FDB\u884C <code>patch</code> \u64CD\u4F5C \uFF0C\u5982\u679C\u53D1\u73B0\u4E0D\u540C\u7684\u7ACB\u5373\u8DF3\u51FA\u5FAA\u73AF</p></li><li><p>\u4ECE\u540E\u5F80\u524D\u904D\u5386\u65B0\u65E7\u5B50\u5E8F\u5217\u627E\u5230\u6709\u76F8\u540C\u7684\u8282\u70B9\u8FDB\u884C <code>patch</code> \u64CD\u4F5C \uFF0C\u5982\u679C\u53D1\u73B0\u4E0D\u540C\u7684\u7ACB\u5373\u8DF3\u51FA\u5FAA\u73AF</p></li><li><p>\u5982\u679C\u65E7\u7684\u8282\u70B9\u904D\u5386\u5B8C\uFF0C\u65B0\u7684\u8282\u70B9\u6CA1\u6709\u904D\u5386\u5B8C \uFF0C\u5BF9\u4E8E\u5269\u4E0B\u7684\u65B0\u8282\u70B9\u5168\u90E8\u4EE5\u65B0\u589Evnode\u5904\u7406</p></li><li><p>\u5982\u679C\u65B0\u7684\u8282\u70B9\u904D\u5386\u5B8C\uFF0C\u65E7\u7684\u8282\u70B9\u6CA1\u6709\u904D\u5386\u5B8C\uFF0C\u5BF9\u4E8E\u5269\u4E0B\u7684\u65E7\u8282\u70B9\u8FDB\u884C\u5378\u8F7D\u5904\u7406</p></li><li><p>\u5982\u679C 3\u30014 \u90FD\u4E0D\u6210\u7ACB\u7EE7\u7EED\u505A\u8FDB\u4E00\u6B65\u5904\u7406</p></li><li><p>\u904D\u5386\u5269\u4F59\u7684\u65B0\u8282\u70B9\uFF0C\u5BFB\u627E <code>key</code> \u901A\u8FC7 <code>map \u7ED3\u6784</code>\u4FDD\u5B58\u8D77\u6765</p></li><li><p>\u904D\u5386\u5269\u4F59\u65E7\u8282\u70B9\uFF0C\u67E5\u627E\u662F\u5426\u5B58\u5728\u76F8\u540C\u7684\u8282\u70B9\uFF0C\u6709\u7684\u8BDD\u8DDF\u65B0\u8282\u70B9\u505A\u4E0B\u6620\u5C04\uFF0C\u7528\u4E8E\u5229\u7528\u8282\u70B9\u4F7F\u7528</p></li><li><p>\u5982\u679C\u4E0D\u5B58\u5728\u5982\u679C\u5378\u8F7D\u65E7\u8282\u70B9</p></li><li><p>\u6700\u540E\u5BF9\u5269\u4F59\u65B0\u8282\u70B9\u505A\u4E0B\u904D\u5386\uFF0C\u901A\u8FC7\u524D\u9762\u6620\u5C04\u5173\u7CFB\uFF0C\u5982\u679C\u53EF\u590D\u7528\u7684\u65E7\u8282\u70B9\u5219\u8FDB\u884C\u8282\u70B9\u7684\u79FB\u52A8\u64CD\u4F5C\u5426\u5219\u8FDB\u884C\u65B0\u589E\u8282\u70B9\u7684\u64CD\u4F5C</p></li></ol><h3 id="issamevnodetype" tabindex="-1"><a class="header-anchor" href="#issamevnodetype" aria-hidden="true">#</a> isSameVNodeType</h3><p><code>isSameVNodeType</code> \u65B9\u6CD5\u662F\u7528\u4E8E\u5224\u65AD\u4E24\u4E2A\u8282\u70B9\u662F\u5426\u76F8\u540C\u7684</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">isSameVNodeType</span><span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>
      n2<span class="token punctuation">.</span>shapeFlag <span class="token operator">&amp;</span> <span class="token number">6</span> <span class="token comment">/* COMPONENT */</span> <span class="token operator">&amp;&amp;</span>
      hmrDirtyComponents<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>n2<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// HMR only: if the component has been hot-updated, force a reload.</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> n1<span class="token punctuation">.</span>type <span class="token operator">===</span> n2<span class="token punctuation">.</span>type <span class="token operator">&amp;&amp;</span> n1<span class="token punctuation">.</span>key <span class="token operator">===</span> n2<span class="token punctuation">.</span>key<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EA\u662F\u6839\u636E\u5F53\u524D vnode \u7C7B\u578B\u548C vnode \u7684 <code>key</code> \u662F\u5426\u76F8\u7B49</p><h2 id="\u76F8\u6BD42-0\u505A\u7684\u4F18\u5316" tabindex="-1"><a class="header-anchor" href="#\u76F8\u6BD42-0\u505A\u7684\u4F18\u5316" aria-hidden="true">#</a> \u76F8\u6BD42.0\u505A\u7684\u4F18\u5316</h2><p>3.0\u4E2D\u7684 <code>diff</code> \u9664\u4E86\u903B\u8F91\u91CD\u6784\u4E86\u4E4B\u5916\uFF0C\u5728\u901F\u5EA6\u5728\u6BD4\u505A\u5F88\u591A\u6539\u8FDB\uFF0C\u634A\u4E0B\u8FD9\u4E9B\u6539\u8FDB\u7684\u5730\u65B9</p><h3 id="\u52A8\u6001\u4E0E\u9759\u6001\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u4E0E\u9759\u6001\u8282\u70B9" aria-hidden="true">#</a> \u52A8\u6001\u4E0E\u9759\u6001\u8282\u70B9</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">processFragment</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> container<span class="token punctuation">,</span> anchor<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> isSVG<span class="token punctuation">,</span> optimized</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>patchFlag <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
      patchFlag <span class="token operator">&amp;</span> <span class="token number">64</span> <span class="token comment">/* STABLE_FRAGMENT */</span> <span class="token operator">&amp;&amp;</span>
      dynamicChildren <span class="token operator">&amp;&amp;</span>
      n1<span class="token punctuation">.</span>dynamicChildren<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token function">patchBlockChildren</span><span class="token punctuation">(</span>n1<span class="token punctuation">.</span>dynamicChildren<span class="token punctuation">,</span> dynamicChildren<span class="token punctuation">,</span> container<span class="token punctuation">,</span> parentComponent<span class="token punctuation">,</span> parentSuspense<span class="token punctuation">,</span> isSVG<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span> parentComponent <span class="token operator">&amp;&amp;</span> parentComponent<span class="token punctuation">.</span>type<span class="token punctuation">.</span>__hmrId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">traverseStaticChildren</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>
        n2<span class="token punctuation">.</span>key <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span>
        <span class="token punctuation">(</span>parentComponent <span class="token operator">&amp;&amp;</span> n2 <span class="token operator">===</span> parentComponent<span class="token punctuation">.</span>subTree<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">traverseStaticChildren</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token comment">/* shallow */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE <code>processFragment</code> \u65B9\u6CD5\u53EF\u4EE5\u770B\u5230\uFF0C\u7B26\u5408\u5224\u65AD\u8BED\u53E5\u540E\u5148\u6267\u884C <code>traverseStaticChildren(n1, n2)</code> \u5904\u7406\u52A8\u6001\u8282\u70B9\uFF0C\u7136\u540E\u518D\u6267\u884C <code>traverseStaticChildren(n1, n2, true /* shallow */)</code></p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>counter<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>\u9759\u6001\u8282\u70B9\u4E00\uFF1A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span> 
    Counter:
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in counter<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{item}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!--\u52A8\u6001\u8282\u70B9--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>\u9759\u6001\u8282\u70B9\u4E00\uFF1A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
    {{info}} <span class="token comment">&lt;!--\u52A8\u6001\u8282\u70B9--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u524D\u4F8B\u5B50\u52A8\u6001\u8282\u70B9\u662F <code>&lt;span v-for=&quot;item in counter&quot; :key=&quot;item&quot;&gt;{item}&lt;/span&gt;</code> \u548C <code>{info} </code>\uFF0C\u5BF9\u4E8E\u52A8\u6001\u8282\u70B9\u4ECD\u7136\u4F1A\u8C03\u7528 <code>patch</code> \u505A\u8FDB\u4E00\u6B65\u7684\u6BD4\u8F83</p><p>\u52A8\u6001\u8282\u70B9\u5904\u7406\u5B8C\u4E4B\u540E\uFF0C\u8C03\u7528 <code>traverseStaticChildren</code> \u5904\u7406\u9759\u6001\u8282\u70B9\uFF0C\u9759\u6001\u8282\u70B9\u7684\u5904\u7406\u5219\u662F\u5C06\u65E7\u8282\u70B9\u76F4\u63A5\u8D4B\u503C\u7ED9\u65B0\u8282\u70B9\uFF0C\u4E0D\u9700\u8981\u505A <code>patch</code> \u6BD4\u8F83\u4E86</p><h3 id="\u9759\u6001\u63D0\u5347-hoiststatic" tabindex="-1"><a class="header-anchor" href="#\u9759\u6001\u63D0\u5347-hoiststatic" aria-hidden="true">#</a> \u9759\u6001\u63D0\u5347 hoistStatic</h3><p>\u5728 Vue2.0 \u4E2D\u65E0\u8BBA\u5143\u7D20\u662F\u5426\u53C2\u4E0E\u66F4\u65B0\uFF0C\u6BCF\u6B21\u90FD\u4F1A\u91CD\u65B0\u521B\u5EFA\uFF0C\u7136\u540E\u518D\u6E32\u67D3\uFF0C\u4E0B\u9762\u7684\u4F8B\u5B50\u5C31\u662F 2.0 \u751F\u6210\u7684 <code>render</code> \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">attrs</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span><span class="token string">&quot;app&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;h1&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token string">&quot;\u9759\u6001\u8282\u70B9\u4E00\uFF1A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token string">&quot;\\n      Counter:\\n      &quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">_l</span><span class="token punctuation">(</span><span class="token punctuation">(</span>counter<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;span&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">key</span><span class="token operator">:</span>item<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token function">_s</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;h2&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token string">&quot;\u9759\u6001\u8282\u70B9\u4E00\uFF1A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token string">&quot;\\n      &quot;</span><span class="token operator">+</span><span class="token function">_s</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;\\n  &quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u9759\u6001\u8282\u70B9\u4E3A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;h1&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token string">&quot;\u9759\u6001\u8282\u70B9\u4E00\uFF1A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token function">_v</span><span class="token punctuation">(</span><span class="token string">&quot;\\n      Counter:\\n      &quot;</span><span class="token punctuation">)</span>
<span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;h2&#39;</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">_v</span><span class="token punctuation">(</span><span class="token string">&quot;\u9759\u6001\u8282\u70B9\u4E00\uFF1A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E09\u4E2A\u65B9\u6CD5\u6BCF\u6B21\u6E32\u67D3\u65F6\u90FD\u4F1A\u6267\u884C</p><p>\u800C\u5728 3.0 \u4E2D\u4F7F\u7528\u4E86\u9759\u6001\u63D0\u5347\u540E\uFF0C\u5BF9\u4E8E\u4E0D\u53C2\u4E0E\u66F4\u65B0\u7684\u5143\u7D20\uFF0C\u53EA\u4F1A\u88AB\u521B\u5EFA\u4E00\u6B21\uFF0C\u5728\u6E32\u67D3\u65F6\u76F4\u63A5\u590D\u7528\u5373\u53EF\uFF1A</p><p><img src="`+t+'" alt=""></p><h3 id="\u4E8B\u4EF6\u4FA6\u542C\u5668\u7F13\u5B58-cachehandlers" tabindex="-1"><a class="header-anchor" href="#\u4E8B\u4EF6\u4FA6\u542C\u5668\u7F13\u5B58-cachehandlers" aria-hidden="true">#</a> \u4E8B\u4EF6\u4FA6\u542C\u5668\u7F13\u5B58 cacheHandlers</h3><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0BonClick\u4F1A\u88AB\u89C6\u4E3A\u52A8\u6001\u7ED1\u5B9A\uFF0C\u6240\u4EE5\u6BCF\u6B21\u90FD\u4F1A\u53BB\u8FFD\u8E2A\u5B83\u7684\u53D8\u5316\uFF0C\u4F46\u662F\u56E0\u4E3A\u662F\u540C\u4E00\u4E2A\u51FD\u6570\uFF0C\u6240\u4EE5\u6CA1\u5FC5\u8981\u53BB\u8FFD\u8E2A\u5B83\u7684\u53D8\u5316\uFF0C\u60F3\u529E\u6CD5\u5C06\u5B83\u76F4\u63A5\u7F13\u5B58\u8D77\u6765\u590D\u7528\u5C31\u4F1A\u63D0\u5347\u6027\u80FD</p><p><strong>\u9ED8\u8BA4</strong></p><p><img src="'+e+'" alt=""></p><p><strong>\u5F00\u542FcacheHandlers\u540E</strong></p><p><img src="'+o+'" alt=""></p><p>\u4F46\u662F\u600E\u4E48\u5F00\u542F\u7684\u8FD9\u4E2A\u9009\u9879\uFF0C\u600E\u4E48\u627E\u4E0D\u5230\u5730\u65B9\u4E5F\u4E0D\u61C2</p><h2 id="diff\u6539\u8FDB\u70B9\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#diff\u6539\u8FDB\u70B9\u603B\u7ED3" aria-hidden="true">#</a> Diff\u6539\u8FDB\u70B9\u603B\u7ED3</h2><p>Vue3 \u5728 diff \u65F6\u505A\u4E86\u4F18\u5316\u63AA\u65BD\u6709\uFF1A</p><ul><li><p>\u533A\u522B\u9759\u6001\u8282\u70B9\u548C\u52A8\u6001\u8282\u70B9\uFF0C\u53EA\u5BF9\u52A8\u6001\u8282\u70B9\u505A\u4E86 diff \u6BD4\u8F83</p></li><li><p>\u9759\u6001\u63D0\u5347\uFF0C\u9759\u6001\u8282\u70B9\u7684\u7ED3\u679C\u505A\u4E86\u7F13\u5B58\uFF0C\u4E0D\u7528\u91CD\u590D\u6E32\u67D3</p></li><li><p>\u4E8B\u4EF6\u7F13\u5B58</p></li></ul><blockquote><p>(vue3.0 diff\u7B97\u6CD5\u8BE6\u89E3(\u8D85\u8BE6\u7EC6))[https://zhuanlan.zhihu.com/p/150103393]</p></blockquote>',81),i=[l];function u(k,r){return s(),a("div",null,i)}var v=n(c,[["render",u],["__file","Diff.html.vue"]]);export{v as default};
