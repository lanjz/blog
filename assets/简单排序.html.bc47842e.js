import{_ as t,o as e,c as o,b as n,a as c,d as s,e as a,r as l}from"./app.a61e5c82.js";var u="/lanjz/assets/xuanze.244ba69d.gif",i="/lanjz/assets/kuaisu.83b41f74.gif",r="/lanjz/assets/maopao.70e21ed5.gif",k="/lanjz/assets/charu.c62c0a6c.gif",d="/lanjz/assets/guibing.3d3627e8.jpg";const m={},v=s('<h1 id="\u7B80\u5355\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u7B80\u5355\u6392\u5E8F" aria-hidden="true">#</a> \u7B80\u5355\u6392\u5E8F</h1><p>\u634B\u634B\u57FA\u672C\u6392\u5E8F\u7B97\u6CD5</p><h2 id="\u9009\u62E9\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u9009\u62E9\u6392\u5E8F" aria-hidden="true">#</a> \u9009\u62E9\u6392\u5E8F</h2><p>\u601D\u8DEF\uFF1A</p><ol><li><p>\u7B2C\u4E00\u6B21\u5FAA\u73AF\uFF0C\u7B2C\u4E00\u4E2A\u4F4D\u7F6E\u5F00\u59CB\uFF0C\u627E\u51FA\u6700\u5C0F\u5143\u7D20\u7684\u4F4D\u7F6E\uFF0C\u7136\u540E\u4E0E\u7B2C\u4E00\u4E2A\u4F4D\u7F6E\u8FDB\u884C\u4EA4\u6362</p></li><li><p>\u7B2C\u4E8C\u6B21\u5FAA\u73AF\uFF0C\u7B2C\u4E8C\u4E2A\u4F4D\u7F6E\u5F00\u59CB\uFF0C\u5728\u5269\u4F59\u7684\u5143\u7D20\u4E2D\u6253\u51FA\u6700\u5C0F\u5143\u7D20\u7684\u5143\u7D20\uFF0C\u7136\u540E\u4E0E\u7B2C\u4E8C\u4E2A\u4F4D\u7F6E\u8FDB\u884C\u4EA4\u6362</p></li><li><p>\u4EE5\u6B64\u7C7B\u63A8\uFF0C\u904D\u5386\u5230\u5012\u6570\u7B2C\u4E8C\u4E2A\u5143\u7D20</p></li></ol><p><img src="'+u+`" alt=""></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        a <span class="token operator">=</span> i
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                a <span class="token operator">=</span> j
            <span class="token punctuation">}</span>
            count<span class="token operator">++</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">const</span> tem <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>a<span class="token punctuation">]</span>
        arr<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> tem
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;resultArr&#39;</span><span class="token punctuation">,</span> arr<span class="token punctuation">,</span> count<span class="token punctuation">)</span>
    <span class="token comment">// [1, 10, 11, 12, 20, 22, 24, 30, 31, 40, 50, 55, 88] 78</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u590D\u6742\u5EA6</strong></p><ul><li><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A\u5E73\u5747\u65F6\u95F4\u590D\u6742\u5EA6\u662FO(n^2)\uFF0C\u8FD9\u662F\u4E00\u4E2A\u4E0D\u7A33\u5B9A\u7684\u7B97\u6CD5\uFF0C\u56E0\u4E3A\u6BCF\u6B21\u4EA4\u6362\u4E4B\u540E\uFF0C\u5B83\u90FD\u6539\u53D8\u4E86\u540E\u7EED\u6570\u7EC4\u7684\u987A\u5E8F\u3002</p></li><li><p>\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A\u8F85\u52A9\u7A7A\u95F4\u662F\u5E38\u6570\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3AO(1);</p></li></ul><h2 id="\u5FEB\u901F\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u901F\u6392\u5E8F" aria-hidden="true">#</a> \u5FEB\u901F\u6392\u5E8F</h2><p>\u601D\u8DEF\uFF1A</p><ol><li><p>\u9009\u62E9\u4E00\u4E2A\u6570\u4F5C\u4E3A\u53C2\u7167\u6570\uFF0C\u904D\u5386\u5269\u4F59\u6570\u636E\uFF0C\u6BD4\u53C2\u6570\u7167\u5C0F\u7684\u653E\u5728\u53C2\u7167\u6570\u7684\u5DE6\u8FB9\uFF0C\u53CD\u4E4B\u540E\u5728\u53F3\u8FB9\u3002</p></li><li><p>\u7136\u540E\u7528\u540C\u6837\u7684\u65B9\u5F0F\u9012\u5F52\u90A3\u4E24\u4E2A\u5206\u51FA\u6765\u7684\u6570\u636E\uFF0C\u76F4\u63A5\u5206\u51FA\u6765\u7684\u6570\u7EC4\u6570\u91CF\u4E3A1\u65F6\uFF0C\u505C\u6B62\u5FAA\u73AF</p></li></ol><p><img src="`+i+`" alt=""></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">const</span> data <span class="token operator">=</span>  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">function</span> <span class="token function">quickSort</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> arr
        <span class="token punctuation">}</span>
		<span class="token keyword">const</span> flag <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
		<span class="token keyword">const</span> left <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
		<span class="token keyword">const</span> right <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				right<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				left<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
			count <span class="token operator">+=</span> <span class="token number">1</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;resultArr&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">,</span> count<span class="token punctuation">)</span>
   <span class="token comment">// [1, 10, 11, 12, 20, 22, 24, 30, 31, 40, 50, 55, 88] 41</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u590D\u6742\u5EA6</strong></p><ul><li><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A\u5E73\u5747\u65F6\u95F4\u590D\u6742\u5EA6O(nlogn)\uFF0C\u53EA\u6709\u5728\u7279\u6B8A\u60C5\u51B5\u4E0B\u4F1A\u662FO(n^2)\uFF0C\u4E0D\u8FC7\u8FD9\u79CD\u60C5\u51B5\u975E\u5E38\u5C11</p></li><li><p>\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A\u8F85\u52A9\u7A7A\u95F4\u662Flogn\uFF0C\u6240\u4EE5\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3AO(logn)</p></li></ul><h2 id="\u5192\u6CE1\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5192\u6CE1\u6392\u5E8F" aria-hidden="true">#</a> \u5192\u6CE1\u6392\u5E8F</h2><p>\u601D\u8DEF\uFF1A \u4ECE\u7B2C\u4E00\u4E2A\u5143\u7D20\u5F00\u59CB\u4E0E\u4E0B\u4E00\u4E2A\u5143\u7D20\u76F8\u6BD4\u8F83\uFF0C\u5982\u679C\u5927\u4E8E\u4E0B\u4E00\u4E2A\u5143\u7D20\uFF0C\u5219\u4EA4\u6362\u4E24\u4E2A\u5143\u7D20\u7684\u4F4D\u7F6E\u3002\u5982\u6B64\u6B65\u9AA4\u5FAA\u73AF\u6574\u4E2A\u5143\u7D20</p><p><img src="`+r+`" alt="\u793A\u4F8B\u56FE"></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">;</span> j <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">const</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
                arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span>
                arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp
            <span class="token punctuation">}</span>
			count<span class="token operator">++</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;resultArr&#39;</span><span class="token punctuation">,</span> arr<span class="token punctuation">,</span> count<span class="token punctuation">)</span>
   <span class="token comment">//  [1, 10, 11, 12, 20, 22, 24, 30, 31, 40, 50, 55, 88] 78</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u5F97\u5192\u6CE1\u6392\u5E8F\uFF0C\u5171\u5FAA\u73AF\u4E8678\u6B21</p><p><strong>\u590D\u6742\u5EA6</strong></p><ul><li><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A\u5E73\u5747\u65F6\u95F4\u590D\u6742\u5EA6\u662FO(n^2)</p></li><li><p>\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A\u7531\u4E8E\u8F85\u52A9\u7A7A\u95F4\u4E3A\u5E38\u6570\uFF0C\u6240\u4EE5\u7A7A\u95F4\u590D\u6742\u5EA6\u662FO(1)</p></li></ul><h3 id="\u4F18\u5316\u4E00" tabindex="-1"><a class="header-anchor" href="#\u4F18\u5316\u4E00" aria-hidden="true">#</a> \u4F18\u5316\u4E00</h3><p>\u4EE5\u4E0A\u4EE3\u7801\u6709\u4E2A\u7F3A\u70B9\u5C31\u662F\uFF0C\u65E0\u8BBA\u662F\u6392\u5E8F\u7684\u6570\u7EC4\u539F\u6765\u7684\u6570\u636E\u662F\u4E71\u5E8F\u8FD8\u662F\u6B63\u5E8F\uFF0C\u90FD\u4F1A\u6267\u884C78\u6B21\u624D\u80FD\u7ED3\u675F\uFF0C \u4F46\u5B9E\u9645\u4E0A\uFF0C\u53EA\u8981\u6709\u67D0\u4E00\u6B21\u7684\u5FAA\u73AF\u672A\u8FDB\u884C\u6570\u636E\u4EA4\u6362\uFF0C\u90A3\u4E48\u8FD9\u7EC4\u6570\u636E\u5176\u5B9E\u5DF2\u7ECF\u662F\u6B63\u5E8F\u7684\u72B6\u6001\uFF0C\u6211\u4EEC\u5C31\u53EF\u4EE5\u7ED3\u675F\u6392\u5E8F\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token boolean">false</span>
		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">;</span> j <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">const</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
                arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span>
                arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp
				flag <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token punctuation">}</span>
			count<span class="token operator">++</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">break</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;resultArr&#39;</span><span class="token punctuation">,</span> arr<span class="token punctuation">,</span> count<span class="token punctuation">)</span>
   <span class="token comment">//  [1, 10, 11, 12, 20, 22, 24, 30, 31, 40, 50, 55, 88] 68</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5FAA\u73AF\u6B21\u6570\u51CF\u5C11\u4E8610\u6B21\uFF0C\u5982\u679C\u672C\u6765\u5C31\u662F\u6B63\u5E8F\u7684\u8BDD\uFF0C\u5FAA\u73AF\u6B21\u6570\u5C31\u53EA\u6709\u6570\u7EC4\u7684\u4E2A\u6570</p><h3 id="\u4F18\u5316\u4E8C" tabindex="-1"><a class="header-anchor" href="#\u4F18\u5316\u4E8C" aria-hidden="true">#</a> \u4F18\u5316\u4E8C</h3><p>\u8BB0\u5F55\u6700\u540E\u4E00\u6B21\u4EA4\u6362\u7684\u4F4D\u7F6E\uFF0C\u56E0\u4E3A\u4E4B\u540E\u7684\u6570\u90FD\u662F\u53EF\u4EE5\u4E0D\u7528\u6392\u5E8F\u7684\uFF0C\u53EF\u4EE5\u4E0D\u904D\u5386\u8FD9\u4E9B\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> last <span class="token operator">=</span> arr<span class="token punctuation">.</span>length
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> last <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span>i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">const</span> tem <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
                arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span>
                arr<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> tem
                last <span class="token operator">=</span> j <span class="token operator">+</span> <span class="token number">1</span>
                flag <span class="token operator">=</span> <span class="token boolean">false</span>
            <span class="token punctuation">}</span>
            count <span class="token operator">+=</span> <span class="token number">1</span>

        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">break</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;arr&#39;</span><span class="token punctuation">,</span> arr<span class="token punctuation">,</span> count<span class="token punctuation">)</span>
  <span class="token comment">//  [1, 10, 11, 20, 12, 22, 24, 30, 31, 40, 50, 55, 88] 57</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u63D2\u5165\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u63D2\u5165\u6392\u5E8F" aria-hidden="true">#</a> \u63D2\u5165\u6392\u5E8F</h2><ol><li><p>\u7B2C\u4E00\u6B21\u904D\u5386\uFF0C\u53D6\u7B2C\u4E8C\u4E2A\u5143\u7D20\uFF0C\u90A3\u4E48\u7B2C1\u4E2A\u5143\u7D20\u5C31\u662F\u5DF2\u7ECF\u6392\u597D\u7684\u6570\u7EC4\uFF0C\u5C06\u8FD9\u4E2A\u5143\u7D20\u63D2\u5165\u5230\u5DF2\u6392\u597D\u7684\u6570\u7EC4\u4E2D</p></li><li><p>\u7B2C\u4E8C\u6B21\u904D\u5386\uFF0C\u53D6\u7B2C\u4E09\u4E2A\u5143\u7D20\uFF0C\u90A3\u4E48\u7B2C1\u4E2A\u5143\u7D20\u5230\u7B2C\u4E8C\u4E2A\u5143\u7D20\u5C31\u662F\u5DF2\u7ECF\u6392\u597D\u7684\u6570\u7EC4\uFF0C\u5C06\u8FD9\u4E2A\u5143\u7D20\u63D2\u5165\u5230\u5DF2\u6392\u597D\u7684\u6570\u7EC4\u4E2D</p></li><li><p>\u4EE5\u6B64\u7C7B\u63A8\uFF0C\u76F4\u5230\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u63D2\u5165\u5B8C\u6210</p></li></ol><p><img src="`+k+`" alt=""></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            count <span class="token operator">+=</span> <span class="token number">1</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>temp <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                arr<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>temp <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> temp <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;arr&#39;</span><span class="token punctuation">,</span> arr<span class="token punctuation">,</span> count<span class="token punctuation">)</span>
   <span class="token comment">// [1, 10, 11, 12, 20, 22, 24, 30, 31, 40, 50, 55, 88] 59</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u590D\u6742\u5EA6</strong></p><ul><li><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A\u5E73\u5747\u7B97\u6CD5\u590D\u6742\u5EA6\u4E3AO(n^2)</p></li><li><p>\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1A\u8F85\u52A9\u7A7A\u95F4\u4E3A\u5E38\u6570\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6\u662FO(1)</p></li></ul><h2 id="\u5F52\u5E76\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5F52\u5E76\u6392\u5E8F" aria-hidden="true">#</a> \u5F52\u5E76\u6392\u5E8F</h2><p><img src="`+d+`" alt="\u793A\u4F8B\u56FE"></p><p>\u601D\u8DEF\uFF1A</p><ol><li><p>\u5C06\u6570\u7EC4\u4ECE\u4E2D\u95F4\u5207\u5206\u4E3A\u4E24\u4E2A\u6570\u7EC4</p></li><li><p>\u5207\u5206\u5230\u6700\u5C0F\u4E4B\u540E\uFF0C\u5F00\u59CB\u5F52\u5E76\u64CD\u4F5C\uFF0C\u5373\u5408\u5E76\u4E24\u4E2A\u5DF2\u6392\u5E8F\u7684\u6570\u7EC4</p></li><li><p>\u9012\u5F52\u5408\u5E76\u7684\u8FC7\u7A0B\uFF0C\u7531\u4E8E\u662F\u4ECE\u5C0F\u5230\u5927\u5408\u5E76\uFF0C\u6240\u4EE5\u5F85\u5408\u5E76\u7684\u4E24\u4E2A\u6570\u7EC4\u603B\u662F\u5DF2\u6392\u5E8F\u7684\uFF0C\u4E00\u76F4\u505A\u540C\u6837\u7684\u5F52\u5E76\u64CD\u4F5C\u5C31\u53EF\u4EE5</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span><span class="token parameter">unsorted</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token parameter">leftArr<span class="token punctuation">,</span> rightArr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> lenL <span class="token operator">=</span> leftArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">const</span> lenR <span class="token operator">=</span> rightArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">let</span> indexL <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> indexR <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>indexL <span class="token operator">&lt;</span> lenL <span class="token operator">&amp;&amp;</span> indexR <span class="token operator">&lt;</span> lenR<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>leftArr<span class="token punctuation">[</span>indexL<span class="token punctuation">]</span> <span class="token operator">&lt;</span> rightArr<span class="token punctuation">[</span>indexR<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>leftArr<span class="token punctuation">[</span>indexL<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>rightArr<span class="token punctuation">[</span>indexR<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>indexL <span class="token operator">&lt;</span> lenL<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>leftArr<span class="token punctuation">[</span>indexL<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>indexR <span class="token operator">&lt;</span> lenR<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>rightArr<span class="token punctuation">[</span>indexR<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">split</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> len <span class="token operator">=</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>len <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> array<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>len <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> leftArr <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> rightArr <span class="token operator">=</span> array<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>mid<span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token function">merge</span><span class="token punctuation">(</span> <span class="token function">split</span><span class="token punctuation">(</span>leftArr<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">split</span><span class="token punctuation">(</span>rightArr<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token function">split</span><span class="token punctuation">(</span>unsorted<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">show</span><span class="token punctuation">(</span>mergeSort<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ------------------------------------------</span>
<span class="token comment">// Method: mergeSort</span>
<span class="token comment">// ------------------------------------------</span>
<span class="token comment">// before:</span>
<span class="token comment">// 86,55,0,31,104,6,5,49,89,19,6</span>
<span class="token comment">// after:</span>
<span class="token comment">// 0,5,6,6,19,31,49,55,86,89,104</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u590D\u6742\u5EA6</strong></p><p>\u9009\u62E9\u6392\u5E8F\u548C\u5192\u6CE1\u6392\u5E8F\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u90FD\u662F O(n^2)\uFF0C\u5F88\u5C11\u7528\u5728\u5B9E\u9645\u5DE5\u7A0B\u4E2D\uFF1B\u5F52\u5E76\u6392\u5E8F\u7684\u65F6\u95F4\u590D\u6742\u5EA6\u662F O(nlog(n))\uFF0C\u662F\u5B9E\u9645\u5DE5\u7A0B\u4E2D\u53EF\u9009\u7684\u6392\u5E8F\u65B9\u6848</p><h2 id="array-sort" tabindex="-1"><a class="header-anchor" href="#array-sort" aria-hidden="true">#</a> Array.sort</h2>`,44),b={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/sort",target:"_blank",rel:"noopener noreferrer"},g=a("Array.sort"),y=a(" \u4F1A\u5C06\u5143\u7D20\u7C7B\u578B\u8F6C\u6362\u6210\u5B57\u7B26\u4E32Unicode\u7801\u70B9\u8FDB\u884C\u6392\u5E8F\u3002\u4E0D\u8FC7\u4ED6\u662F\u4E00\u4E2A\u9AD8\u9636\u51FD\u6570\uFF0C\u53EF\u4EE5\u63A5\u53D7\u4E00\u4E2A\u51FD\u6570\u505A\u4E3A\u53C2\u6570\u3002\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u8FD9\u51FD\u6570\uFF0C\u6765\u8C03\u6574\u6570\u7EC4\u7684\u5347\u5E8F\u6216\u964D\u5E8F"),f=s(`<p><code>Array.sort</code> \u6709\u4E00\u4E2A\u7279\u70B9\u5C31\u662F\u9ED8\u8BA4\u6309\u5B57\u7B26\u4E32\u6392\u5E8F\uFF0C\u7C9F\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span>
arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 10, 100, 11, 12, 20, 22, 24, 30, 31, 50, 55, 88]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u7684\u7ED3\u679C\u53EF\u4EE5\u770B\u5230\u56E0\u4E3A\u9ED8\u8BA4\u662F\u6309\u5B57\u7B26\u4E32\u6392\u5E8F\uFF0C\u6240\u4EE5\u6392\u51FA\u6765\u7684\u7ED3\u679C\u6709\u95EE\u9898\u7684</p><p><strong>\u5E26\u51FD\u6570\u53C2\u6570\u6392\u5E8F</strong></p><p><code>Array.sort</code> \u53EF\u4EE5\u63A5\u6536\u4E00\u4E2A\u51FD\u6570\u53C2\u6570\uFF0C<code>sort</code> \u5C06\u6839\u636E\u8FD9\u4E2A\u53C2\u6570\u51FD\u6570\u7684\u8FD4\u56DE\u503C\uFF08return\uFF09\u8FDB\u884C\u6392\u5E8F\uFF0C\u4EE5 <code>compareFunction(a, b)</code> \u4E3A\u4F8B\uFF1A</p><ul><li><p>\u5982\u679C <code>return</code> \u5C0F\u4E8E 0 \uFF0C\u90A3\u4E48 a \u4F1A\u88AB\u6392\u5217\u5230 b \u4E4B\u524D</p></li><li><p>\u5982\u679C <code>return</code> \u5927\u4E8E 0 \uFF0C\u90A3\u4E48 a \u4F1A\u88AB\u6392\u5217\u5230 b \u4E4B\u540E</p></li><li><p>\u5982\u679C <code>return</code> \u7B49\u4E8E 0 \uFF0C a \u548C b \u7684\u4F4D\u7F6E\u4E0D\u53D8</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	 <span class="token keyword">return</span> <span class="token operator">-</span><span class="token punctuation">(</span>a <span class="token operator">-</span> b<span class="token punctuation">)</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// [1, 10, 11, 12, 20, 22, 24, 30, 31, 50, 55, 88, 100]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u53EA\u9002\u7528\u4E8E\u5168\u662F\u6570\u5B57\u7684\u6570\u7EC4\uFF0C\u5982\u679C\u6570\u7EC4\u5143\u7D20\u5305\u542B\u5B57\u7B26\u4E32\u5C31\u4E0D\u884C\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;a&#39;</span>  <span class="token operator">-</span> <span class="token string">&#39;b&#39;</span> <span class="token comment">// NaN</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>\u542B\u6709\u5B57\u7B26\u4E32\u6570\u7EC4\u7684\u5904\u7406</strong></p><p>\u5B57\u7B26\u4E32\u662F\u4E0D\u80FD\u76F8\u51CF\u4F46\u662F\u53EF\u4EE5\u6BD4\u8F83\u5927\u5C0F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span>  <span class="token punctuation">[</span><span class="token string">&#39;wanna&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;take&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;it&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;back&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;and&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;start&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;again&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token keyword">return</span> a <span class="token operator">&lt;</span> b <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span>  
 <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// [&quot;again&quot;, &quot;and&quot;, &quot;back&quot;, &quot;it&quot;, &quot;start&quot;, &quot;take&quot;, &quot;wanna&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5982\u679C\u662F\u5BF9\u8C61\u5143\u7D20\uFF0C\u53EF\u4EE5\u4F7F\u7528\u5C5E\u6027\u8FDB\u884C\u6392\u5E8F</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> items <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Edward&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">21</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Sharpe&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">37</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;And&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">45</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;The&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">12</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Magnetic&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Zeros&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">37</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// sort by value</span>
items<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>value <span class="token operator">-</span> b<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// sort by name</span>
items<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> nameA <span class="token operator">=</span> a<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ignore upper and lowercase</span>
  <span class="token keyword">var</span> nameB <span class="token operator">=</span> b<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ignore upper and lowercase</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>nameA <span class="token operator">&lt;</span> nameB<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>nameA <span class="token operator">&gt;</span> nameB<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  
<span class="token comment">// names must be equal</span>

  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function h(w,j){const p=l("ExternalLinkIcon");return e(),o("div",null,[v,n("p",null,[n("a",b,[g,c(p)]),y]),f])}var _=t(m,[["render",h],["__file","\u7B80\u5355\u6392\u5E8F.html.vue"]]);export{_ as default};
