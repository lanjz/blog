import{_ as p,o as t,c as o,b as n,a,d as c,e,r as i}from"./app.9941db85.js";var l="/lanjz/assets/diff_1.c38b2526.png",u="/lanjz/assets/diff_2.4aa389e8.png",r="/lanjz/assets/diff_3.e8ddf9e7.png";const d={},k=c(`<h1 id="react16-diff" tabindex="-1"><a class="header-anchor" href="#react16-diff" aria-hidden="true">#</a> React16 Diff</h1><p>React \u4EE5\u524D\u7684 Diff \u7B97\u6CD5\u5C31\u662F\u57FA\u4E8E\u6811\u7684\uFF0C\u73B0\u5728\u6574\u4F53\u7684\u6570\u636E\u7ED3\u6784\u6539\u4E3A\u4E86\u94FE\u8868\u7ED3\u6784\uFF0C\u94FE\u8868\u7684\u6BCF\u4E00\u4E2A\u8282\u70B9\u662F Fiber</p><p>React16 \u7684 diff \u7B56\u7565\u91C7\u7528\u4ECE\u94FE\u8868\u5934\u90E8\u5F00\u59CB\u6BD4\u8F83\u7684\u7B97\u6CD5\uFF0C\u662F\u5C42\u6B21\u904D\u5386\uFF0C\u7B97\u6CD5\u662F\u5EFA\u7ACB\u5728\u4E00\u4E2A\u8282\u70B9\u7684\u63D2\u5165\u3001\u5220\u9664\u3001\u79FB\u52A8\u7B49\u64CD\u4F5C\u4E14\u8FD9\u4E9B\u90FD\u662F\u5728\u8282\u70B9\u6811\u7684\u540C\u4E00\u5C42\u7EA7\u4E2D\u8FDB\u884C\u7684</p><p><code>reconcileChildFibers</code> \u65B9\u6CD5\u662F\u5F00\u59CB diff \u7684\u5730\u65B9\uFF0C\u7B80\u5355\u770B\u4E0B\u6E90\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">function</span> <span class="token function">reconcileChildFibers</span><span class="token punctuation">(</span><span class="token parameter">returnFiber<span class="token punctuation">,</span> currentFirstChild<span class="token punctuation">,</span> newChild<span class="token punctuation">,</span> expirationTime</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8FD9\u91CC \u5C31\u662F \u5904\u7406 &lt;&gt;&lt;/&gt; \u8FD9\u6837\u7684\u5B50\u8282\u70B9\u7684\uFF0C\u56E0\u4E3A \u8FD9\u6837\u7684 \u8282\u70B9\u662F \u6CA1\u6709 key \u7684\uFF0C\u5C31\u628A\u5185\u90E8\u7684</span>
      <span class="token comment">// \u5B50\u8282\u70B9 \u7EDF\u4E00\u5904\u7406 \u4E3A \u6570\u7EC4\u5B50\u8282\u70B9</span>
      <span class="token keyword">var</span> isUnkeyedTopLevelFragment <span class="token operator">=</span> <span class="token keyword">typeof</span> newChild <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> newChild <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> newChild<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token constant">REACT_FRAGMENT_TYPE</span> <span class="token operator">&amp;&amp;</span> newChild<span class="token punctuation">.</span>key <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isUnkeyedTopLevelFragment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        newChild <span class="token operator">=</span> newChild<span class="token punctuation">.</span>props<span class="token punctuation">.</span>children<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> 
      <span class="token keyword">var</span> isObject <span class="token operator">=</span> <span class="token keyword">typeof</span> newChild <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> newChild <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5982\u679C\u65B0\u8282\u70B9\u662F\u5BF9\u8C61\u7C7B\u578B\u4E5F\u5C31\u662F  REACT_ELEMENT_TYPE \u6216\u8005 REACT_PORTAL_TYPE</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>newChild<span class="token punctuation">.</span>$$<span class="token keyword">typeof</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">case</span> <span class="token constant">REACT_ELEMENT_TYPE</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token function">placeSingleChild</span><span class="token punctuation">(</span><span class="token function">reconcileSingleElement</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> currentFirstChild<span class="token punctuation">,</span> newChild<span class="token punctuation">,</span> expirationTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">case</span> <span class="token constant">REACT_PORTAL_TYPE</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token function">placeSingleChild</span><span class="token punctuation">(</span><span class="token function">reconcileSinglePortal</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> currentFirstChild<span class="token punctuation">,</span> newChild<span class="token punctuation">,</span> expirationTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5982\u679C\u65B0\u8282\u70B9\u662F\u6587\u672C\u7C7B\u578B</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> newChild <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> newChild <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">placeSingleChild</span><span class="token punctuation">(</span><span class="token function">reconcileSingleTextNode</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> currentFirstChild<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span> <span class="token operator">+</span> newChild<span class="token punctuation">,</span> expirationTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5982\u679C\u65B0\u8282\u70B9\u662F\u6570\u7EC4\u7C7B\u578B</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isArray$1</span><span class="token punctuation">(</span>newChild<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">reconcileChildrenArray</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> currentFirstChild<span class="token punctuation">,</span> newChild<span class="token punctuation">,</span> expirationTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5982\u679C\u65B0\u8282\u70B9\u662F\u5305\u542B\u8FED\u4EE3\u904D\u5386\u5668\u7684\uFF0C\u7C7B\u578B\u6570\u7EC4</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">getIteratorFn</span><span class="token punctuation">(</span>newChild<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">reconcileChildrenIterator</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> currentFirstChild<span class="token punctuation">,</span> newChild<span class="token punctuation">,</span> expirationTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> 
      <span class="token comment">// ....</span>
      <span class="token comment">// \u53EA\u6709\u53EF\u80FDnewChild === null\uFF0C\u8BF4\u660E\u65B0\u7684\u66F4\u65B0\u6E05\u7A7A\u6389\u4E86\u6240\u6709\u5B50\u8282\u70B9\u3002</span>
      <span class="token keyword">return</span> <span class="token function">deleteRemainingChildren</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> currentFirstChild<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>reconcileChildFibers(returnFiber, currentFirstChild, newChild, expirationTime)</code> \u63A5\u6536\u53C2\u6570\u8868\u793A\u5982\u4E0B\uFF1A</p><ul><li><p><code>returnFiber</code>\uFF1A\u662F\u5373\u5C06 Diff \u7684\u8FD9\u5C42\u7684\u7236\u8282\u70B9</p></li><li><p><code>currentFirstChild</code>\uFF1A\u662F\u5F53\u524D\u5C42\u7684\u7B2C\u4E00\u4E2A Fiber \u8282\u70B9</p></li><li><p><code>newChildren</code>\uFF1A\u5373\u5C06\u66F4\u65B0\u7684 vdom \u8282\u70B9(\u53EF\u80FD\u662F TextNode\u3001\u53EF\u80FD\u662F ReactElement\uFF0C\u53EF\u80FD\u662F\u6570\u7EC4)\uFF0C\u4E0D\u662F Fiber \u8282\u70B9</p></li><li><p><code>expirationTime</code>\uFF1A\u8FC7\u671F\u65F6\u95F4\uFF08\u8FD9\u91CC\u4E0D\u8BA8\u8BBA\u8FD9\u4E2A\uFF09</p></li></ul><p>\u4ECE\u4E0A\u9762\u7684\u4EE3\u7801\u53EF\u4EE5\u770B\u51FA diff \u6839\u636E\u65B0\u8282\u70B9\u7684\u7C7B\u578B\u8FDB\u884C\u4E0D\u540C\u5904\u7406\uFF0C\u8FD9\u4E9B\u7C7B\u578B\u4F1A\u6709\u56DB\u79CD\u60C5\u51B5</p><ul><li><p>TextNode(\u5305\u542B\u5B57\u7B26\u4E32\u548C\u6570\u5B57)</p></li><li><p>React Element(\u901A\u8FC7\u8BE5\u8282\u70B9\u662F\u5426\u6709 $$typeof \u533A\u5206)</p></li><li><p>\u6570\u7EC4</p></li><li><p>\u53EF\u8FED\u4EE3\u7684 children\uFF0C\u8DDF\u6570\u7EC4\u7684\u5904\u7406\u65B9\u5F0F\u5DEE\u4E0D\u591A</p></li></ul><p>\u4E0B\u9762\u9488\u5BF9\u4E0D\u540C\u7684\u7C7B\u578B\u770B\u4E0B\u5177\u4F53\u7684 diff \u5B9E\u73B0</p><h2 id="textnode" tabindex="-1"><a class="header-anchor" href="#textnode" aria-hidden="true">#</a> TextNode</h2><p>\u5982\u679C\u65B0\u8282\u70B9\u662F\u6587\u672C\u7C7B\u578B eg:</p><p><img src="`+l+`" alt=""></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> newChild <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> newChild <span class="token operator">===</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">placeSingleChild</span><span class="token punctuation">(</span><span class="token function">reconcileSingleTextNode</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> currentFirstChild<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span> <span class="token operator">+</span> newChild<span class="token punctuation">,</span> expirationTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// reconcileSingleTextNode</span>
<span class="token keyword">function</span> <span class="token function">reconcileSingleTextNode</span><span class="token punctuation">(</span><span class="token parameter">returnFiber<span class="token punctuation">,</span> currentFirstChild<span class="token punctuation">,</span> textContent<span class="token punctuation">,</span> expirationTime</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>currentFirstChild <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> currentFirstChild<span class="token punctuation">.</span>tag <span class="token operator">===</span> HostText<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u4E5F\u662FTextNode</span>
    <span class="token function">deleteRemainingChildren</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> currentFirstChild<span class="token punctuation">.</span>sibling<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5220\u9664\u540E\u9762\u7684\u8282\u70B9</span>
    <span class="token keyword">var</span> existing <span class="token operator">=</span> <span class="token function">useFiber</span><span class="token punctuation">(</span>currentFirstChild<span class="token punctuation">,</span> textContent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    existing<span class="token punctuation">.</span>return <span class="token operator">=</span> returnFiber<span class="token punctuation">;</span>
    <span class="token keyword">return</span> existing<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">deleteRemainingChildren</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> currentFirstChild<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> created <span class="token operator">=</span> <span class="token function">createFiberFromText</span><span class="token punctuation">(</span>textContent<span class="token punctuation">,</span> returnFiber<span class="token punctuation">.</span>mode<span class="token punctuation">,</span> expirationTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
  created<span class="token punctuation">.</span>return <span class="token operator">=</span> returnFiber<span class="token punctuation">;</span>
  <span class="token keyword">return</span> created<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6839\u636E\u4EE3\u7801\u8D70\u4E24\u4E2A\u5206\u652F\uFF1A</p><ol><li>\u5982\u679C\u65E7\u8282\u70B9\u662F <code>TextNode</code> \u5219\u590D\u7528\u5F53\u524D\u8FD9\u4E2A\u65E7\u8282\u70B9\uFF0C\u66F4\u65B0\u65B0\u7684\u6587\u672C\u5185\u5BB9</li></ol><p>\u56E0\u4E3A\u662F\u6587\u672C\u8282\u70B9\uFF0C\u6240\u4EE5\u65E7\u8282\u70B9\u540E\u9762\u7684\u5144\u5F1F\u8282\u70B9\u662F\u8981\u88AB\u79FB\u9664\u7684\u6240\u4EE5\u4F1A\u6267\u884C <code>deleteRemainingChildren(returnFiber, currentFirstChild.sibling)</code> \u5220\u9664\u65E7\u8282\u70B9\u5144\u5F1F\u8282\u70B9<br> \u6700\u540E\u8FD4\u56DE\u8FD9\u4E2A\u8282\u70B9</p><ol start="2"><li>\u5982\u679C\u65E7\u8282\u70B9\u4E0D\u662F\u4E00\u4E2A <code>TextNode</code>\uFF0C\u90A3\u4E48\u5C31\u4EE3\u8868\u8FD9\u4E2A\u8282\u70B9\u4E0D\u80FD\u590D\u7528\uFF0C\u6240\u4EE5\u5C31\u6267\u884C <code>deleteRemainingChildren(returnFiber, currentFirstChild)</code> \u4ECE <code>currentFirstChild</code> \u5F00\u59CB\u5220\u6389\u5269\u4F59\u7684\u8282\u70B9\u3002\u5E76\u901A\u8FC7 <code>createFiberFromText</code> \u521B\u5EFA <code>TextNode</code> \u5E76\u6DFB\u52A0\u5230Fiber\u6811\u4E2D</li></ol><h3 id="\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u5C0F\u7ED3" aria-hidden="true">#</a> \u5C0F\u7ED3</h3><p>\u6587\u5B57\u8282\u70B9\u7684\u5BF9\u6BD4\u6BD4\u8F83\u7B80\u5355\u7C97\u66B4\uFF0C\u76F4\u63A5\u627E\u8001\u7684 <code>children</code> \u4E2D\u7684\u7B2C\u4E00\u4E2A\u8282\u70B9\uFF0C\u5982\u679C\u662F\u6587\u5B57\u8282\u70B9\u5C31\u590D\u7528\uFF0C\u5982\u679C\u4E0D\u662F\u5C31\u5220\u9664\u5168\u90E8\u8001\u7684\u8282\u70B9\uFF0C\u521B\u5EFA\u65B0\u7684\u6587\u5B57\u8282\u70B9</p><h2 id="react-element" tabindex="-1"><a class="header-anchor" href="#react-element" aria-hidden="true">#</a> React.Element</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>isObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token keyword">switch</span> <span class="token punctuation">(</span>newChild<span class="token punctuation">.</span>$$<span class="token keyword">typeof</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">case</span> <span class="token constant">REACT_ELEMENT_TYPE</span><span class="token operator">:</span>
    <span class="token keyword">return</span> <span class="token function">placeSingleChild</span><span class="token punctuation">(</span><span class="token function">reconcileSingleElement</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> currentFirstChild<span class="token punctuation">,</span> newChild<span class="token punctuation">,</span> expirationTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// reconcileSingleElement</span>
<span class="token keyword">function</span> <span class="token function">reconcileSingleElement</span><span class="token punctuation">(</span> <span class="token parameter"><span class="token literal-property property">returnFiber</span><span class="token operator">:</span> Fiber<span class="token punctuation">,</span> <span class="token literal-property property">currentFirstChild</span><span class="token operator">:</span> Fiber <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token literal-property property">element</span><span class="token operator">:</span> ReactElement<span class="token punctuation">,</span> <span class="token literal-property property">lanes</span><span class="token operator">:</span> Lanes<span class="token punctuation">,</span></span> <span class="token punctuation">)</span><span class="token operator">:</span> Fiber <span class="token punctuation">{</span>
    <span class="token keyword">const</span> key <span class="token operator">=</span> element<span class="token punctuation">.</span>key<span class="token punctuation">;</span>
    <span class="token keyword">let</span> child <span class="token operator">=</span> currentFirstChild<span class="token punctuation">;</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>child <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span>key <span class="token operator">===</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">switch</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token literal-property property">Fragment</span><span class="token operator">:</span>
            <span class="token punctuation">{</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token constant">REACT_FRAGMENT_TYPE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">deleteRemainingChildren</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> child<span class="token punctuation">.</span>sibling<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">var</span> existing <span class="token operator">=</span> <span class="token function">useFiber</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> element<span class="token punctuation">.</span>props<span class="token punctuation">.</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>
                existing<span class="token punctuation">.</span>return <span class="token operator">=</span> returnFiber<span class="token punctuation">;</span>
                <span class="token punctuation">{</span>
                  existing<span class="token punctuation">.</span>_debugSource <span class="token operator">=</span> element<span class="token punctuation">.</span>_source<span class="token punctuation">;</span>
                  existing<span class="token punctuation">.</span>_debugOwner <span class="token operator">=</span> element<span class="token punctuation">.</span>_owner<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> existing<span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
              <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token punctuation">{</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span>elementType <span class="token operator">===</span> element<span class="token punctuation">.</span>type <span class="token operator">||</span> <span class="token punctuation">(</span> <span class="token comment">// Keep this check inline so it only runs on the false path:</span>
                <span class="token function">isCompatibleFamilyForHotReloading</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> element<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">deleteRemainingChildren</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> child<span class="token punctuation">.</span>sibling<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">var</span> _existing3 <span class="token operator">=</span> <span class="token function">useFiber</span><span class="token punctuation">(</span>child<span class="token punctuation">,</span> element<span class="token punctuation">.</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
                _existing3<span class="token punctuation">.</span>ref <span class="token operator">=</span> <span class="token function">coerceRef</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> child<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">;</span>
                _existing3<span class="token punctuation">.</span>return <span class="token operator">=</span> returnFiber<span class="token punctuation">;</span>
                <span class="token punctuation">{</span>
                  _existing3<span class="token punctuation">.</span>_debugSource <span class="token operator">=</span> element<span class="token punctuation">.</span>_source<span class="token punctuation">;</span>
                  _existing3<span class="token punctuation">.</span>_debugOwner <span class="token operator">=</span> element<span class="token punctuation">.</span>_owner<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> _existing3<span class="token punctuation">;</span>
              <span class="token punctuation">}</span>

              <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span> <span class="token comment">// Didn&#39;t match.</span>
          <span class="token function">deleteRemainingChildren</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> child<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token function">deleteChild</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> child<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        child <span class="token operator">=</span> child<span class="token punctuation">.</span>sibling<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>React Element Diff\u601D\u8DEF\u548C TextNode \u662F\u4E00\u81F4\u7684\uFF1A\u5148\u627E\u6709\u6CA1\u6709\u53EF\u4EE5\u590D\u7528\u7684\u8282\u70B9\uFF0C\u5982\u679C\u6CA1\u6709\u5C31\u53E6\u5916\u521B\u5EFA\u4E00\u4E2A\u3002\u5982\u4F55\u5224\u65AD\u8FD9\u4E2A\u8282\u70B9\u662F\u5426\u53EF\u4EE5\u590D\u7528\u5462\uFF1F\u9700\u8981\u6EE1\u8DB3\u4E24\u4E2A\u6761\u4EF6\uFF1A</p><ol><li><p><code>key</code> \u76F8\u540C</p></li><li><p>\u8282\u70B9\u7684\u7C7B\u578B\u76F8\u540C</p></li></ol><p>\u6CE8\u610F\u4E0A\u9762\u7684 <code>while</code>\uFF0C\u8BF4\u660E\u67E5\u627E\u53EF\u4EE5\u590D\u7528\u7684 React Element \u8282\u70B9\uFF0C\u4E0D\u662F\u50CF <code>TextNode</code> \u4E00\u6837\u53EA\u662F\u627E\u7B2C\u4E00\u4E2A <code>child</code> \u662F\u5426\u53EF\u4EE5\u590D\u7528\uFF0C\u800C\u662F\u91C7\u7528\u904D\u5386\u67E5\u627E\u7B56\u7565\uFF0C\u5728\u5F53\u524D\u8282\u70B9\u53CA\u5176\u5144\u5F1F\u8282\u70B9\u4E2D\u641C\u7D22\u53EF\u590D\u7528\u7684\u8282\u70B9\uFF0C\u4E4B\u6240\u4EE5\u8FD9\u4E48\u8BBE\u8BA1\u662F\u8003\u8651\u4E0B\u9762\u8FD9\u79CD\u60C5\u51B5</p><p><img src="`+u+`" alt=""></p><p>\u5982\u679C\u6CA1\u6709\u627E\u5230\u53EF\u590D\u7528\u7684\u8282\u70B9\u5219\u91CD\u65B0\u521B\u5EFA\u8282\u70B9</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token constant">REACT_FRAGMENT_TYPE</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> created <span class="token operator">=</span> <span class="token function">createFiberFromFragment</span><span class="token punctuation">(</span>element<span class="token punctuation">.</span>props<span class="token punctuation">.</span>children<span class="token punctuation">,</span> returnFiber<span class="token punctuation">.</span>mode<span class="token punctuation">,</span> expirationTime<span class="token punctuation">,</span> element<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    created<span class="token punctuation">.</span>return <span class="token operator">=</span> returnFiber<span class="token punctuation">;</span>
    <span class="token keyword">return</span> created<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> _created4 <span class="token operator">=</span> <span class="token function">createFiberFromElement</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> returnFiber<span class="token punctuation">.</span>mode<span class="token punctuation">,</span> expirationTime<span class="token punctuation">)</span><span class="token punctuation">;</span>

    _created4<span class="token punctuation">.</span>ref <span class="token operator">=</span> <span class="token function">coerceRef</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> currentFirstChild<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">;</span>
    _created4<span class="token punctuation">.</span>return <span class="token operator">=</span> returnFiber<span class="token punctuation">;</span>
    <span class="token keyword">return</span> _created4<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5C0F\u7ED3-1" tabindex="-1"><a class="header-anchor" href="#\u5C0F\u7ED3-1" aria-hidden="true">#</a> \u5C0F\u7ED3</h3><p>\u8DDF <code>TextNode</code> \u7C7B\u4F3C\u4E5F\u662F\u4F18\u5148\u627E\u53EF\u4EE5\u590D\u7528\u7684\u8282\u70B9\uFF0C\u4F46\u662F\u8981\u6CE8\u610F\u7684\u662F\u4E0A\u9762\u7684 <code>while</code>\uFF0C\u8BF4\u660E\u67E5\u627E\u53EF\u4EE5\u590D\u7528\u7684 React Element \u8282\u70B9\u4E0D\u50CF <code>TextNode</code> \u53EA\u662F\u627E\u7B2C\u4E00\u4E2A <code>child</code> \u662F\u5426\u53EF\u4EE5\u590D\u7528\uFF0C\u800C\u662F\u91C7\u7528\u904D\u5386\u67E5\u627E\u7B56\u7565\uFF0C\u5728\u5F53\u524D\u8282\u70B9\u53CA\u5176\u5144\u5F1F\u8282\u70B9\u4E2D\u641C\u7D22\u53EF\u590D\u7528\u7684\u8282\u70B9\u3002\u5982\u679C\u6CA1\u6709\u627E\u5230\u53EF\u590D\u7528\u7684\u8282\u70B9\u5219\u91CD\u65B0\u521B\u5EFA\u8282\u70B9</p><h2 id="children-diff" tabindex="-1"><a class="header-anchor" href="#children-diff" aria-hidden="true">#</a> children diff</h2><p>\u5B50\u8282\u70B9\u7684 diff \u903B\u8F91\u4E3B\u8981\u5728 <code>reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime)</code> \u65B9\u6CD5\u4E2D\uFF0C\u53C2\u6570\u8868\u793A\u5982\u4E0B\uFF1A</p><ul><li><p>returnFiber\uFF1A\u5F53\u524D\u5B50\u8282\u70B9\u5BF9\u8C61\u7684\u7236\u8282\u70B9</p></li><li><p>currentFirstChild\uFF1A\u65E7\u8282\u70B9</p></li><li><p>newChildren\uFF1A\u65B0\u8282\u70B9</p></li><li><p>expirationTime\uFF1A\u8FC7\u671F\u65F6\u95F4\uFF08\u8FD9\u91CC\u4E0D\u8BA8\u8BBA\u8FD9\u4E2A\uFF09</p></li></ul><p><code>reconcileChildrenArray</code> \u5BF9\u5B50\u8282\u70B9\u7684 diff \u4E3B\u8981\u662F\u901A\u8FC7\u56DB\u6B65\u8FDB\u884C\u5904\u7406</p><p><strong>\u4E00\u3001\u9996\u5148\u5BF9\u65B0\u65E7\u76F8\u540C\u4F4D\u7F6E(index)\u8FDB\u884C\u6BD4\u8F83</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> oldFiber <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> newIdx <span class="token operator">&lt;</span> newChildren<span class="token punctuation">.</span>length<span class="token punctuation">;</span> newIdx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u6BCF\u4E00\u6B21\u7684\u5FAA\u73AF\u90FD\u662F\u5BF9\u76F8\u540C\u4F4D\u7F6E\u7684\u65B0\u65E7\u8282\u70B9\u8FDB\u884C\u6BD4\u8F83</span>
   <span class="token comment">// nextOldFiber \u4FDD\u5B58\u4E0B\u4E00\u6B21\u904D\u5386\u8981\u5BF9\u6BD4\u7684\u65E7\u8282\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldFiber<span class="token punctuation">.</span>index <span class="token operator">&gt;</span> newIdx<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
      nextOldFiber <span class="token operator">=</span> oldFiber<span class="token punctuation">;</span>
      oldFiber <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      nextOldFiber <span class="token operator">=</span> oldFiber<span class="token punctuation">.</span>sibling<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8FD4\u56DE\u590D\u7528\u7684\u8282\u70B9\uFF0C\u5982\u679C\u6CA1\u6709\u53EF\u4EE5\u590D\u7528\u7684\u5C31\u8FD4\u56DE null</span>
    <span class="token keyword">var</span> newFiber <span class="token operator">=</span> <span class="token function">updateSlot</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> oldFiber<span class="token punctuation">,</span> newChildren<span class="token punctuation">[</span>newIdx<span class="token punctuation">]</span><span class="token punctuation">,</span> expirationTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>newFiber <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679CnewFiber\u7684\u503C\u4E3A\u7A7A\u7684\u8BDD\uFF0C\u8BF4\u660E\u8BE5\u8282\u70B9\u4E0D\u80FD\u590D\u7528\uFF0C\u5219\u8DF3\u51FA\u5FAA\u73AF</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>oldFiber <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        oldFiber <span class="token operator">=</span> nextOldFiber<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u662F\u7B2C\u4E00\u6B21\u6E32\u67D3\uFF08\u5373shouldTrackSideEffects\u4E3A true\uFF09\uFF0C\u5E76\u4E14 newFiber \u6CA1\u6709\u8981\u590D\u7528\u7684 oldFiber \u7684\u8BDD\uFF0C\u5219\u5220\u9664\u8BE5 fiber \u4E0B\u7684\u6240\u6709\u5B50\u8282\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>shouldTrackSideEffects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>oldFiber <span class="token operator">&amp;&amp;</span> newFiber<span class="token punctuation">.</span>alternate <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6CA1\u6709fiber</span>
        <span class="token function">deleteChild</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> oldFiber<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u79FB\u9664\u65E7\u8282\u70B9</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5C06 newFiber \u8282\u70B9\u6302\u8F7D\u5230 DOM \u6811\u4E0A\uFF0C\u5E76\u5224\u65AD\u66F4\u65B0\u540E\u662F\u5426\u79FB\u52A8\u8FC7\uFF0C\u5982\u679C\u79FB\u52A8\uFF0C\u5219\u9700\u8981\u91CD\u65B0\u6302\u8F7D\uFF0C\u8FD4\u56DE\u6700\u65B0\u79FB\u52A8\u7684 index\uFF0C\u5E76\u8D4B\u503C\u7ED9lastPlacedIndex</span>
    lastPlacedIndex <span class="token operator">=</span> <span class="token function">placeChild</span><span class="token punctuation">(</span>newFiber<span class="token punctuation">,</span> lastPlacedIndex<span class="token punctuation">,</span> newIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token comment">// \u7EC4\u6210\u5F53\u524D\u94FE</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>previousNewFiber <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      resultingFirstChild <span class="token operator">=</span> newFiber<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      previousNewFiber<span class="token punctuation">.</span>sibling <span class="token operator">=</span> newFiber<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    previousNewFiber <span class="token operator">=</span> newFiber<span class="token punctuation">;</span>
    oldFiber <span class="token operator">=</span> nextOldFiber<span class="token punctuation">;</span> <span class="token comment">// \u6307\u5411\u4E0B\u4E00\u4E2A \u65E7\u8282\u70B9</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u904D\u5386\u65B0\u8282\u70B9\uFF0C\u5BF9\u6BD4\u76F8\u540C\u4F4D\u7F6E\uFF08\u7D22\u5F15index\uFF09\u7684\u65B0\u65E7\u8282\u70B9\uFF0C\u91CD\u70B9\u5728\u4E8E <code>updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime)</code> \u7684\u5904\u7406\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u6267\u884C\u7684\u6D41\u7A0B\u5927\u81F4\u4E3A\uFF1A</p><ol><li><p>\u5C1D\u8BD5\u83B7\u53D6\u5F53\u524D\u65E7\u8282\u70B9\u7684 <code>key</code></p><p><code>var key = oldFiber !== null ? oldFiber.key : null</code></p></li><li><p>\u5982\u679C\u65B0\u8282\u70B9\u662F\u5B57\u7B26\u4E32\u6216\u8005\u6570\u5B57\uFF0C\u90A3\u4E48\u8BF4\u660E\u65B0\u8282\u70B9\u662F\u6587\u672C\u8282\u70B9\uFF0C\u6B64\u65F6\u6839\u636E\u4E0A\u4E00\u6B65 <code>key</code> \u662F\u5426\u4E3A <code>null</code> \u505A\u4E0D\u540C\u7684\u5904\u7406</p><ol><li><p>\u5982\u679C <code>key!==null</code> \u8BF4\u660E\u65E7\u8282\u70B9\u4E4B\u524D\u4E0D\u662F\u6587\u672C\u8282\u70B9\uFF0C\u90A3\u4E48\u8BF4\u660E\u65B0\u65E7\u8282\u70B9\u4E0D\u540C\u65E0\u6CD5\u5229\u7528\uFF0C\u5219\u8FD4\u56DE <code>null</code></p></li><li><p>\u5982\u679C <code>key===null</code>\uFF0C\u5219\u901A\u8FC7 <code>updateTextNode(returnFiber, oldFiber, &#39;&#39; + newChild, expirationTime)</code> \u66F4\u65B0\u6587\u672C</p></li></ol></li><li><p>\u5982\u679C\u65B0\u8282\u70B9\u662F\u5BF9\u8C61\uFF0C\u4E5F\u4F1A\u6839\u636E\u4E0A\u4E00\u6B65\u65B0\u65E7\u8282\u70B9\u7684 <code>key</code> \u662F\u5426\u76F8\u540C\u505A\u4E0D\u540C\u7684\u5904\u7406</p><ol><li><p>\u5982\u679C <code>newChild.key === key</code> \uFF08\u8FD9\u91CC\u53EA\u8003\u8651\u6B63\u5E38\u7684 ReactElement \u5143\u7D20\uFF09\u6B64\u65F6\u6267\u884C <code>updateElement(returnFiber, _matchedFiber, newChild, expirationTime)</code> \u8FDB\u884C\u8282\u70B9\u7684\u590D\u7528</p></li><li><p>\u5982\u679C <code>key</code> \u4E0D\u540C\u5219\u8FD4\u56DE <code>null</code></p></li></ol></li></ol><p>\u6240\u4EE5 <code>updateSlot</code> \u7684\u7ED3\u679C\u8981\u4E48\u4E3A <code>null</code>\uFF0C\u8981\u4E48\u4E3A\u53EF\u590D\u7528\u7684\u7ED3\u679C\uFF0C\u4E4B\u7EE7\u7EED\u505A\u4EE5\u4E0B\u6B65\u9AA4</p><ol><li><p>\u5982\u679C\u65B0\u65E7\u90FD\u4E3A <code>null</code>\uFF0C\u5E94\u8BE5\u8868\u793A\u6CA1\u6709\u9700\u8981 diff \u8282\u70B9\u4E86\uFF0C\u76F4\u63A5\u9000\u51FA\u5F53\u524D\u5FAA\u73AF</p></li><li><p>\u79FB\u9664\u65E7\u8282\u70B9</p></li><li><p>\u4F7F\u7528 <code>newFiber</code> \u751F\u6210\u94FE</p></li></ol><p><strong>\u7ECF\u8FC7\u4E0A\u4E00\u6B65\u7684\u904D\u5386\u540E\uFF0C\u5982\u679C\u65B0\u8282\u70B9\u5DF2\u7ECF\u904D\u5386\u5B8C\u6BD5\uFF0C\u5BF9\u5269\u4F59\u65B0\u8282\u70B9\u6267\u884C\u6DFB\u52A0\u64CD\u4F5C</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>newIdx <span class="token operator">===</span> newChildren<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u65B0\u7684 children \u957F\u5EA6\u5DF2\u7ECF\u591F\u4E86\uFF0C\u6240\u4EE5\u628A\u5269\u4E0B\u7684\u5220\u9664\u6389</span>
  <span class="token function">deleteRemainingChildren</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> oldFiber<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> resultingFirstChild<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// deleteRemainingChildren</span>
<span class="token keyword">function</span> <span class="token function">deleteRemainingChildren</span><span class="token punctuation">(</span><span class="token parameter">returnFiber<span class="token punctuation">,</span> currentFirstChild</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>shouldTrackSideEffects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Noop.</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> 
  <span class="token keyword">var</span> childToDelete <span class="token operator">=</span> currentFirstChild<span class="token punctuation">;</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span>childToDelete <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">deleteChild</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> childToDelete<span class="token punctuation">)</span><span class="token punctuation">;</span>
    childToDelete <span class="token operator">=</span> childToDelete<span class="token punctuation">.</span>sibling<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>returnFiber</code> \u8868\u793A\u5F53\u524D\u8282\u70B9\u7684\u7236\u8282\u70B9\uFF0C<code>oldFiber</code> \u8868\u793A\u8981\u5220\u9664\u7684\u8282\u70B9\uFF0C\u53EF\u4EE5\u770B\u5230 <code>deleteRemainingChildren</code> \u5185\u90E8\u4F7F\u7528 <code>while</code> \u5FAA\u73AF\u5220\u9664\u6240\u6709\u7684 <code>oldFiber</code> \u8282\u70B9</p><p><strong>\u8001\u8282\u70B9\u5DF2\u7ECF\u904D\u5386\u5B8C\u6BD5\u540E\u8FD8\u5B58\u5728\u65B0\u8282\u70B9</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">if</span> <span class="token punctuation">(</span>oldFiber <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> newIdx <span class="token operator">&lt;</span> newChildren<span class="token punctuation">.</span>length<span class="token punctuation">;</span> newIdx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> _newFiber <span class="token operator">=</span> <span class="token function">createChild</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> newChildren<span class="token punctuation">[</span>newIdx<span class="token punctuation">]</span><span class="token punctuation">,</span> expirationTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>_newFiber <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      lastPlacedIndex <span class="token operator">=</span> <span class="token function">placeChild</span><span class="token punctuation">(</span>_newFiber<span class="token punctuation">,</span> lastPlacedIndex<span class="token punctuation">,</span> newIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>previousNewFiber <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u94FE</span>
        resultingFirstChild <span class="token operator">=</span> _newFiber<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        previousNewFiber<span class="token punctuation">.</span>sibling <span class="token operator">=</span> _newFiber<span class="token punctuation">;</span> <span class="token comment">// \u5F80\u8FD9\u4E2A\u94FE\u6DFB\u52A0\u4E00\u4E2A\u5B50\u8282\u70B9</span>
      <span class="token punctuation">}</span>
      previousNewFiber <span class="token operator">=</span> _newFiber<span class="token punctuation">;</span> <span class="token comment">// \u66F4\u6539\u5F53\u524D\u94FE\u7684\u4F4D\u7F6E</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> resultingFirstChild<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u65E7\u8282\u70B9\u904D\u5386\u5B8C\uFF0C\u8FD8\u5B58\u5728\u65B0\u8282\u70B9\uFF0C\u5219\u904D\u5386\u5269\u4F59\u65B0\u8282\u70B9\u901A\u8FC7 <code>createChild</code> \u521B\u5EFA\u65B0\u8282\u70B9\uFF0C\u5E76\u6DFB\u52A0\u5230\u5F53\u524D\u94FE\u5F53\u4E2D</p><p><strong>\u79FB\u52A8\u53EF\u590D\u7528\u7684\u8282\u70B9</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">var</span> existingChildren <span class="token operator">=</span> <span class="token function">mapRemainingChildren</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> oldFiber<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521B\u5EFA Map{key: fiber}\uFF0C\u901A\u8FC7 key\u4E0E fiber\u6620\u5C04\u5728\u4E00\u8D77</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> newIdx <span class="token operator">&lt;</span> newChildren<span class="token punctuation">.</span>length<span class="token punctuation">;</span> newIdx<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> _newFiber2 <span class="token operator">=</span> <span class="token function">updateFromMap</span><span class="token punctuation">(</span>existingChildren<span class="token punctuation">,</span> returnFiber<span class="token punctuation">,</span> newIdx<span class="token punctuation">,</span> newChildren<span class="token punctuation">[</span>newIdx<span class="token punctuation">]</span><span class="token punctuation">,</span> expirationTime<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>_newFiber2 <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>shouldTrackSideEffects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>_newFiber2<span class="token punctuation">.</span>alternate <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u79FB\u9664\u5DF2\u7ECF\u590D\u7528\u7684 map \u503C </span>
          existingChildren<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>_newFiber2<span class="token punctuation">.</span>key <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">?</span> newIdx <span class="token operator">:</span> _newFiber2<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      lastPlacedIndex <span class="token operator">=</span> <span class="token function">placeChild</span><span class="token punctuation">(</span>_newFiber2<span class="token punctuation">,</span> lastPlacedIndex<span class="token punctuation">,</span> newIdx<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>previousNewFiber <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resultingFirstChild <span class="token operator">=</span> _newFiber2<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        previousNewFiber<span class="token punctuation">.</span>sibling <span class="token operator">=</span> _newFiber2<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      previousNewFiber <span class="token operator">=</span> _newFiber2<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>shouldTrackSideEffects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD8\u6709\u5269\u4F59\u7684\u65E7\u8282\u70B9\uFF0C\u5219\u904D\u5386\u4ED6\u4EEC\u8FDB\u884C\u79FB\u9664</span>
    existingChildren<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">child</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">deleteChild</span><span class="token punctuation">(</span>returnFiber<span class="token punctuation">,</span> child<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> resultingFirstChild<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><p>\u8FD9\u4E00\u6B65\u9996\u5148\u662F\u901A\u8FC7 <code>mapRemainingChildren</code> \u904D\u5386\u65E7\u8282\u70B9\uFF0C\u5F97\u5230 <code>{key: fiber}</code> \u7684 <code>map</code> \u7ED3\u679C</p></li><li><p>\u904D\u5386\u5269\u4F59\u65B0\u8282\u70B9\u6267\u884C <code>updateFromMap</code>\uFF0C <code>updateFromMap</code> \u7684\u6709\u4EE5\u4E0B\u51E0\u79CD\u60C5\u51B5</p><ol><li><p>\u5982\u679C\u5F53\u524D\u65B0\u8282\u70B9\u53EA\u662F\u6570\u5B57\u6216\u8005\u5B57\u7B26\u4E32\uFF0C\u5219\u901A\u8FC7 <code>updateTextNode</code> \u521B\u5EFA\u65B0\u7684\u6587\u672C\u8282\u70B9</p></li><li><p>\u5982\u679C\u5F53\u65B0\u8282\u70B9\u662F\u5BF9\u8C61\u4E14 <code>$$typeof===REACT_ELEMENT_TYPE</code> (\u8868\u793A\u662F <code>ReactElement</code> \u521B\u5EFA\u7684\u7C7B\u578B)\uFF0C\u5219\u5C1D\u8BD5\u901A\u8FC7 <code>key</code> \u5728 <code>mapRemainingChildren</code> \u627E\u51FA\u590D\u7528\u7684\u8282\u70B9\uFF0C\u6CA1\u6709\u91CD\u65B0\u521B\u5EFA</p></li><li><p>\u8FD8\u6709\u5176\u5B83\u60C5\u51B5\u6682\u65F6\u5148\u5FFD\u7565</p></li></ol></li><li><p>\u5982\u679C\u5728 <code>mapRemainingChildren</code> \u4E2D\u5F97\u5230\u4E86\u53EF\u5F97\u7528\u7684\u8282\u70B9\uFF0C\u5219\u79FB\u9664\u5F53\u524D <code>key</code> \u7684\u6620\u5C04</p></li><li><p>\u5982\u679C\u904D\u5386\u5B8C\u4E4B\u540E <code>mapRemainingChildren</code> \u8FD8\u6709\u5269\u4F59\u7684\u65E7\u8282\u70B9\uFF0C\u5219\u904D\u5386\u4ED6\u4EEC\u8FDB\u884C\u79FB\u9664</p></li></ol><h3 id="\u5C0F\u7ED3-2" tabindex="-1"><a class="header-anchor" href="#\u5C0F\u7ED3-2" aria-hidden="true">#</a> \u5C0F\u7ED3</h3><ul><li><p>\u9996\u5148\u904D\u5386\u65B0\u6570\u7EC4\uFF0C\u5BF9\u76F8\u540C <code>index</code> \u7684\u65B0\u8001\u8282\u70B9\u8FDB\u884C\u5BF9\u6BD4\uFF0C\u901A\u8FC7 <code>updateSlot</code> \u65B9\u6CD5\u627E\u5230\u53EF\u4EE5\u590D\u7528\u7684\u8282\u70B9\uFF0C\u76F4\u5230\u627E\u5230\u4E0D\u53EF\u4EE5\u590D\u7528\u7684\u8282\u70B9\u5C31\u9000\u51FA\u5FAA\u73AF\u3002</p></li><li><p>\u9996\u6B21\u904D\u5386\u5B8C\u4E4B\u540E\uFF0C\u5C31\u662F\u5220\u9664\u8001\u6570\u7EC4\u4E2D\u5269\u4F59\u7684\u8001\u8282\u70B9\uFF0C\u8FFD\u52A0\u5269\u4F59\u7684\u65B0\u8282\u70B9\u7684\u8FC7\u7A0B\u3002\u5982\u679C\u662F\u65B0\u8282\u70B9\u5DF2\u904D\u5386\u5B8C\u6210\uFF0C\u5C31\u5C06\u5269\u4F59\u7684\u8001\u8282\u70B9\u6279\u91CF\u5220\u9664\uFF1B\u5982\u679C\u662F\u8001\u8282\u70B9\u904D\u5386\u5B8C\u6210\u4ECD\u6709\u65B0\u8282\u70B9\u5269\u4F59\uFF0C\u5219\u5C06\u65B0\u8282\u70B9\u76F4\u63A5\u63D2\u5165\u3002</p></li><li><p>\u4E0A\u8FF0\u904D\u5386\u8FC7\u7A0B\u7ED3\u675F\u540E\uFF0C\u4E3A\u4E86\u5904\u7406\u5143\u7D20\u79FB\u52A8\uFF0C\u6700\u540E\u4F1A\u628A\u6240\u6709\u8001\u6570\u7EC4\u5143\u7D20\u6309 <code>key</code> \u6216 <code>index</code> \u653E <code>Map</code> \u91CC\uFF0C\u7136\u540E\u518D\u904D\u5386\u65B0\u6570\u7EC4\uFF0C\u4ECE\u4E2D\u627E\u5230\u590D\u7528\u7684\u8001\u6570\u7EC4\u5143\u7D20\u63D2\u5165\u5230\u65B0\u6570\u7EC4\u4E2D\uFF0C\u8FBE\u5230\u79FB\u52A8\u5143\u7D20\u76EE\u7684\u3002</p></li></ul><h2 id="placechild" tabindex="-1"><a class="header-anchor" href="#placechild" aria-hidden="true">#</a> placeChild</h2><p>// todo</p><p><code>lastPlacedIndex</code> \u5224\u65AD\u8282\u70B9\u662F\u5426\u53D1\u751F\u4E86\u79FB\u52A8 ?</p><p>\u5F53\u590D\u7528\u7684\u8282\u70B9 <code>oldIndex\u5C0F\u4E8ElastPlacedIndex</code> \u65F6\uFF0C\u5219\u4E3A\u79FB\u52A8\uFF0C\u5982\u679C\u4E0D\u9700\u8981\u79FB\u52A8\uFF0C\u5219\u4F1A\u5C06 <code>lastPlacedIndex</code> \u66F4\u65B0\u4E3A\u8F83\u5927\u7684 <code>oldIndex</code>\uFF0C\u4E0B\u4E00\u4E2A\u8282\u70B9\u4F1A\u4EE5\u65B0\u503C\u5224\u65AD</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">placeChild</span><span class="token punctuation">(</span><span class="token parameter">newFiber<span class="token punctuation">,</span> lastPlacedIndex<span class="token punctuation">,</span> newIndex</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  newFiber<span class="token punctuation">.</span>index <span class="token operator">=</span> newIndex<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>shouldTrackSideEffects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Noop.</span>
    <span class="token keyword">return</span> lastPlacedIndex<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> current <span class="token operator">=</span> newFiber<span class="token punctuation">.</span>alternate<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> oldIndex <span class="token operator">=</span> current<span class="token punctuation">.</span>index<span class="token punctuation">;</span>
     <span class="token comment">// /\u79FB\u52A8\u4E86\u7684\u8282\u70B9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldIndex <span class="token operator">&lt;</span> lastPlacedIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u56E0\u4E3A\u662F\u79FB\u52A8\u7684\u8282\u70B9\uFF0C\u6240\u4EE5\u8981\u91CD\u65B0\u6302\u8F7D\u5230 DOM \u4E0A</span>
      newFiber<span class="token punctuation">.</span>effectTag <span class="token operator">=</span> Placement<span class="token punctuation">;</span>
      <span class="token keyword">return</span> lastPlacedIndex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6CA1\u6709\u79FB\u52A8</span>
      <span class="token keyword">return</span> oldIndex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">//current \u4E3A null \u8BF4\u660E\u8BE5\u8282\u70B9\u6CA1\u6709\u88AB\u6E32\u67D3\u8FC7</span>
    <span class="token comment">//\u6240\u4EE5\u662F\u65B0\u63D2\u5165\u7684\u8282\u70B9</span>
    newFiber<span class="token punctuation">.</span>effectTag <span class="token operator">=</span> Placement<span class="token punctuation">;</span>
    <span class="token keyword">return</span> lastPlacedIndex<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u5982\u679C\u4E0D\u662F\u521D\u6B21\u6E32\u67D3\u7684\u8BDD\uFF08<code>shouldTrackSideEffects</code> \u4E3A <code>true</code> \uFF09\uFF0C\u65E0\u9700\u66F4\u65B0 <code>shouldTrackSideEffects</code></p></li><li><p><code>newFiber.alternate</code> \u6709\u503C\u7684\u8BDD\uFF0C\u8BF4\u660E\u662F\u7531\u65E7\u8282\u70B9\u66F4\u65B0\u6765\u7684\uFF0C\u90A3\u4E48\u5C31\u9700\u8981\u6BD4\u8F83 <code>oldIndex</code> \u548C <code>lastPlacedIndex</code> \uFF0C\u6709\u79FB\u52A8\u8FC7\u7684\u8BDD\uFF0C\u5219\u8FD4\u56DE <code>lastPlacedIndex</code> \uFF0C\u5426\u5219\u8FD4\u56DE <code>oldIndex</code></p></li><li><p><code>newFiber.alternate</code> \u6CA1\u6709\u503C\u7684\u8BDD\uFF0C\u8BF4\u660E\u4E0D\u662F\u7531\u65E7\u8282\u70B9\u66F4\u65B0\u6765\u7684\uFF0C\u800C\u662F\u65B0\u63D2\u5165\u7684\u8282\u70B9\uFF0C\u8FD4\u56DE <code>lastPlacedIndex</code></p></li></ul><p><img src="`+r+`" alt=""></p><p><strong>\u5BF9\u6BD4\u987A\u5E8F</strong></p><ol><li>\u5982\u679C\u53EF\u4EE5\u627E\u5230 <code>key</code> \u5BF9\u5E94\u7684\u8282\u70B9\uFF0C\u518D\u5BF9\u6BD4\u7C7B\u578B\uFF0C\u5982\u679C\u7C7B\u578B\u4E0D\u540C\uFF0C\u5C31\u5220\u9664\u65E7\u8282\u70B9\u91CD\u65B0\u521B\u5EFA\uFF0C</li></ol><p>2\u3001\u7C7B\u578B\u76F8\u540C\uFF0C\u5BF9\u6BD4 <code>lastPlacedIndex</code> \u4E0E <code>oldIndex</code>\uFF0C<code>lastPlacedIndex &lt;= oldIndex</code> \u4E0D\u9700\u8981\u79FB\u52A8\uFF0C\u5426\u5219\u5C31\u9700\u8981\u79FB\u52A8\u4F4D\u7F6E\uFF0C\u5E76\u4E14\u66F4\u65B0\u5C5E\u6027</p><p>\u5C06A B C D E F\u4FEE\u6539\u4E3AA C E B G \u7684\u6267\u884C\u987A\u5E8F</p><ul><li><p>lastPlacedIndex = 0</p></li><li><p>A\u5728map\u91CC\u9762\u5B58\u5728\uFF0C\u800C\u4E14\u4F4D\u7F6E\u76F8\u540C\uFF0C\u590D\u7528\u8282\u70B9\u66F4\u65B0\u5C5E\u6027</p></li><li><p>C \u5BF9\u6BD4 lastPlacedIndex &lt; oldIndex\uFF0ClastPlacedIndex = 2\uFF0C\u4F4D\u7F6E\u4E0D\u52A8\uFF0C\u53EA\u66F4\u65B0\u5C5E\u6027</p></li><li><p>E \u5BF9\u6BD4 lastPlacedIndex &lt; oldIndex\uFF0ClastPlacedIndex = 4\uFF0C\u4F4D\u7F6E\u4E0D\u52A8\uFF0C\u53EA\u66F4\u65B0\u5C5E\u6027</p></li><li><p>B \u5BF9\u6BD4 lastPlacedIndex &gt; oldIndex\uFF0C\u9700\u8981\u79FB\u52A8\u4F4D\u7F6E\u5E76\u66F4\u65B0\u5C5E\u6027</p></li><li><p>G \u5728map\u91CC\u627E\u4E0D\u5230\uFF0C\u9700\u8981\u521B\u5EFA\u5E76\u63D2\u5165</p></li><li><p>\u5C06map\u4E2D\u5269\u4F59\u7684\u5143\u7D20 D F\u6807\u8BB0\u4E3A\u5220\u9664</p></li></ul><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u5BF9\u4E8E\u65B0\u8001\u8282\u70B9\u7684\u5BF9\u6BD4\uFF0CReact \u4EE5\u65B0\u8282\u70B9\u4E3A\u57FA\u7840\u6765\u6784\u5EFA\u6574\u4E2A <code>currentInWorkProgress</code>\uFF0Cdiff \u8FC7\u7A0B\u5BF9\u4E0D\u540C\u7684\u8282\u70B9\u7C7B\u578B\u6267\u884C\u4E0D\u540C\u7684 diff \u5904\u7406\uFF1A</p><p><strong>TextNode</strong></p><p>\u5224\u65AD\u8001\u7684 <code>children</code> \u4E2D\u7684\u7B2C\u4E00\u4E2A\u8282\u70B9\u662F\u5426\u4E5F\u662F\u6587\u5B57\u8282\u70B9\uFF0C\u5982\u679C\u662F\u5C31\u590D\u7528\uFF0C\u5982\u679C\u4E0D\u662F\u5C31\u5220\u9664\u5168\u90E8\u8001\u7684\u8282\u70B9\uFF0C\u521B\u5EFA\u65B0\u7684\u6587\u5B57\u8282\u70B9</p><p><strong>React.Element</strong></p><p>\u4F18\u5148\u5728\u65E7\u8282\u70B9\u94FE\u4E2D\u67E5\u627E\u53EF\u4EE5\u590D\u7528\u7684\u8282\u70B9\uFF0C\u3002\u5982\u679C\u6CA1\u6709\u627E\u5230\u53EF\u590D\u7528\u7684\u8282\u70B9\u5219\u91CD\u65B0\u521B\u5EFA\u8282\u70B9</p><p><strong>children diff</strong></p><ul><li><p>\u9996\u5148\u904D\u5386\u65B0\u6570\u7EC4\uFF0C\u5BF9\u76F8\u540C <code>index</code> \u7684\u65B0\u8001\u8282\u70B9\u8FDB\u884C\u5BF9\u6BD4\uFF0C\u901A\u8FC7 <code>updateSlot</code> \u65B9\u6CD5\u627E\u5230\u53EF\u4EE5\u590D\u7528\u7684\u8282\u70B9\uFF0C\u76F4\u5230\u627E\u5230\u4E0D\u53EF\u4EE5\u590D\u7528\u7684\u8282\u70B9\u5C31\u9000\u51FA\u5FAA\u73AF\u3002</p></li><li><p>\u9996\u6B21\u904D\u5386\u5B8C\u4E4B\u540E\uFF0C\u5C31\u662F\u5220\u9664\u8001\u6570\u7EC4\u4E2D\u5269\u4F59\u7684\u8001\u8282\u70B9\uFF0C\u8FFD\u52A0\u5269\u4F59\u7684\u65B0\u8282\u70B9\u7684\u8FC7\u7A0B\u3002\u5982\u679C\u662F\u65B0\u8282\u70B9\u5DF2\u904D\u5386\u5B8C\u6210\uFF0C\u5C31\u5C06\u5269\u4F59\u7684\u8001\u8282\u70B9\u6279\u91CF\u5220\u9664\uFF1B\u5982\u679C\u662F\u8001\u8282\u70B9\u904D\u5386\u5B8C\u6210\u4ECD\u6709\u65B0\u8282\u70B9\u5269\u4F59\uFF0C\u5219\u5C06\u65B0\u8282\u70B9\u76F4\u63A5\u63D2\u5165\u3002</p></li><li><p>\u4E0A\u8FF0\u904D\u5386\u8FC7\u7A0B\u7ED3\u675F\u540E\uFF0C\u4E3A\u4E86\u5904\u7406\u5143\u7D20\u79FB\u52A8\uFF0C\u6700\u540E\u4F1A\u628A\u6240\u6709\u8001\u6570\u7EC4\u5143\u7D20\u6309 <code>key</code> \u6216 <code>index</code> \u653E <code>Map</code> \u91CC\uFF0C\u7136\u540E\u518D\u904D\u5386\u65B0\u6570\u7EC4\uFF0C\u4ECE\u4E2D\u627E\u5230\u590D\u7528\u7684\u8001\u6570\u7EC4\u5143\u7D20\u63D2\u5165\u5230\u65B0\u6570\u7EC4\u4E2D\uFF0C\u8FBE\u5230\u79FB\u52A8\u5143\u7D20\u76EE\u7684\u3002</p></li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>React diff \u7684\u8FC7\u7A0B\u662F\u5C42\u6B21\u904D\u5386\uFF0C\u7C7B\u4F3C\u8FED\u4EE3\u904D\u5386\uFF0C<code>workLoopSync</code> \u6BCF\u6B21\u90FD\u5904\u7406\u540C\u4E00\u5C42\u7684\u8282\u70B9\uFF0C\u4E4B\u540E\u8FD4\u56DE\u5B50\u8282\u70B9\uFF0C\u5982\u679C\u6709\u5B50\u8282\u70B9\u7EE7\u7EED\u8C03\u7528 <code>performUnitOfWork</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">workLoopSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Already timed out, so perform work without checking if we need to yield.</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>workInProgress <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      workInProgress <span class="token operator">=</span> <span class="token function">performUnitOfWork</span><span class="token punctuation">(</span>workInProgress<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,72),v={href:"http://article.docway.net/details?id=60a094570a6c64093cc74c6c",target:"_blank",rel:"noopener noreferrer"},m=e("React 16\u7684Diff \u8FC7\u7A0B\u8BE6\u89E3"),b={href:"http://kmanong.top/kmn/qxw/form/article?id=72653&cate=85",target:"_blank",rel:"noopener noreferrer"},w=e("K \u7801\u519C");function h(f,y){const s=i("ExternalLinkIcon");return t(),o("div",null,[k,n("blockquote",null,[n("p",null,[n("a",v,[m,a(s)]),n("a",b,[w,a(s)])])])])}var g=p(d,[["render",h],["__file","Diff.html.vue"]]);export{g as default};
