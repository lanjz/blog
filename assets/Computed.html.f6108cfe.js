import{_ as n,o as s,c as a,d as t}from"./app.35d123d0.js";const e={},p=t(`<h1 id="computed" tabindex="-1"><a class="header-anchor" href="#computed" aria-hidden="true">#</a> Computed</h1><p>\u4EE5\u4E0B\u9762\u4F8B\u5B50\u4E3A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;app&quot;</span><span class="token operator">&gt;</span>
  <span class="token punctuation">{</span><span class="token punctuation">{</span> name <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">{</span><span class="token punctuation">{</span>bind<span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
  <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;AA&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u54C8\u54C8&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token function-variable function">handler</span><span class="token operator">:</span>  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> val <span class="token operator">+</span> <span class="token string">&#39;_Watch&#39;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">handler</span><span class="token operator">:</span>  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">bind</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">+</span> <span class="token string">&#39;__________&#39;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name
        <span class="token keyword">return</span> result
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;mounted&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> <span class="token string">&quot;message_B&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6E90\u7801\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u5206\u6790" aria-hidden="true">#</a> \u6E90\u7801\u5206\u6790</h2><p>\u6E90\u7801\u4E2D\u5904\u7406 <code>computed</code> \u5C5E\u6027\u7684\u5730\u65B9\uFF1A<code>initState(vn) =&gt; initComputed(vm, opts.computed)</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">initComputed</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> computed</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5728\u5F53\u6709\u5B9E\u4F8B\u4E0A\u5B9A\u4E49\u4E00\u4E2A_computedWatchers\u5C5E\u6027,\u4FDD\u5B58 conputed Watcher</span>
    <span class="token keyword">var</span> watchers <span class="token operator">=</span> vm<span class="token punctuation">.</span>_computedWatchers <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// computed properties are just getters during SSR</span>
    <span class="token keyword">var</span> isSSR <span class="token operator">=</span> <span class="token function">isServerRendering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u904D\u5386computed</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> computed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u83B7\u53D6computed\u8BA1\u7B97\u65B9\u6CD5</span>
      <span class="token keyword">var</span> userDef <span class="token operator">=</span> computed<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> getter <span class="token operator">=</span> <span class="token keyword">typeof</span> userDef <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> userDef <span class="token operator">:</span> userDef<span class="token punctuation">.</span>get<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>getter <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token punctuation">(</span><span class="token string">&quot;Getter is missing for computed property \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          vm
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isSSR<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5B9E\u4F8B\u5316 Watcher</span>
        watchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span>
          vm<span class="token punctuation">,</span>
          getter <span class="token operator">||</span> noop<span class="token punctuation">,</span>
          noop<span class="token punctuation">,</span>
          computedWatcherOptions <span class="token comment">// { lazy: true }</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token comment">// hllComponent-defined computed properties are already defined on the</span>
      <span class="token comment">// hllComponent prototype. We only need to define computed properties defined</span>
      <span class="token comment">// at instantiation here.</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> vm<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u5F53\u524D\u6CA1\u6709\u8BA1\u7B97\u5C5E\u6027\u5728 data \u5C5E\u6027\u4E0A\uFF0C\u6267\u884C defineComputed \u65B9\u6CD5</span>
        <span class="token comment">// \u914D\u7F6E\u8BBF\u95EE\u8FD9\u4E2A\u5C5E\u6027\u65F6\u8981\u6267\u884C\u5C31\u662F\u8FD9\u4E2A\u8BA1\u7B97\u65B9\u6CD5</span>
        <span class="token function">defineComputed</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> userDef<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u5F53\u524D\u6709\u8BA1\u7B97\u5C5E\u6027\u5728 data \u5C5E\u6027\u4E0A\uFF0C\u5C31\u63D0\u793A\u9519\u8BEF</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> vm<span class="token punctuation">.</span>$data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">warn</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;The computed property \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot; is already defined in data.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props <span class="token operator">&amp;&amp;</span> key <span class="token keyword">in</span> vm<span class="token punctuation">.</span>$options<span class="token punctuation">.</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">warn</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;The computed property \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot; is already defined as a prop.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 <code>initComputed</code> \u4E5F\u5B9E\u4F8B\u5316\u4E86\u4E00\u4E2A <code>Watcher</code> , \u6B64\u65F6\u4F20\u8FDB\u53BB\u53C2\u6570\u5982\u4E0B\uFF1A</p><ul><li><p><code>vm</code>\uFF1A\u5F53\u524D <code>vue</code> \u5B9E\u4F8B</p></li><li><p><code>getter || noop</code>: \u5F53\u524D <code>compunted</code> \u7684 <code>get</code> \u65B9\u6CD5\uFF0C\u4E5F\u5C31\u662F\u5E94\u7684\u8BA1\u7B97\u51FD\u6570</p></li><li><p><code>noop</code>\uFF1A\u7A7A\u51FD\u6570</p></li><li><p><code>computedWatcherOptions</code>: <code> { lazy: true }</code></p></li></ul><p>\u56DE\u987E\u4E00\u4E2A <code>Watcher</code> \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">var</span> <span class="token function-variable function">Watcher</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">Watcher</span> <span class="token punctuation">(</span>
    vm<span class="token punctuation">,</span>
    expOrFn<span class="token punctuation">,</span> <span class="token comment">// \u8FD9\u4E2A\u53C2\u6570\u662F conputed \u5BF9\u5E94\u7684\u8BA1\u7B97\u65B9\u6CD5</span>
    cb<span class="token punctuation">,</span>     <span class="token comment">// \u7A7A\u51FD\u6570</span>
    options <span class="token comment">// { lazy: true }</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vm <span class="token operator">=</span> vm<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isRenderWatcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      vm<span class="token punctuation">.</span>_watcher <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    vm<span class="token punctuation">.</span>_watchers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// options</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>deep <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>deep<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>user<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>lazy <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>lazy<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>sync <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>sync<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>before <span class="token operator">=</span> options<span class="token punctuation">.</span>before<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>deep <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lazy <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sync <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>cb <span class="token operator">=</span> cb<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token operator">++</span>uid$2<span class="token punctuation">;</span> <span class="token comment">// uid for batching</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>active <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lazy<span class="token punctuation">;</span> <span class="token comment">// for lazy watchers</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>deps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDeps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>depIds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">_Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">_Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>expression <span class="token operator">=</span> expOrFn<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// parse expression for getter</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> expOrFn <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> expOrFn<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> <span class="token function">parsePath</span><span class="token punctuation">(</span>expOrFn<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>getter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> noop<span class="token punctuation">;</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token string">&quot;Failed watching path: \\&quot;&quot;</span> <span class="token operator">+</span> expOrFn <span class="token operator">+</span> <span class="token string">&quot;\\&quot; &quot;</span> <span class="token operator">+</span>
          <span class="token string">&#39;Watcher only accepts simple dot-delimited paths. &#39;</span> <span class="token operator">+</span>
          <span class="token string">&#39;For full control, use a function instead.&#39;</span><span class="token punctuation">,</span>
          vm
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lazy
      <span class="token operator">?</span> <span class="token keyword">undefined</span>
      <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0E <code>\u6E32\u67D3 Watcher</code> \u548C <code>watcher Watcher</code> \u4E0D\u540C\u7684\u662F\uFF0C \u6B64\u65F6\u5B9E\u4F8B <code>Watcher</code> \u65F6\u4F20\u7684\u7B2C\u56DB\u4E2A\u53C2\u6570 <code>{ lazy: true }</code> \u6240\u4EE5 <code>options.lazy = true\uFF1Bthis.dirty = true</code> (\u540E\u9762\u8BBF\u95EE <code>computed</code> \u65F6\u6709\u7528) \uFF0C \u6240\u4EE5<code>computed Watcher</code> \u5E76\u6CA1\u6709\u6267\u884C\u6700\u540E\u7684 <code>this.get()</code> \u65B9\u6CD5\u3002</p><p>\u6267\u884C\u5B8C\u4E4B\u540E\u56DE\u5230 <code>initComputed</code> \u4E2D\uFF0C\u628A\u5F53\u524D\u7684 <code>Watcher</code> \u5B9E\u4F8B\u4FDD\u5B58\u5230\u4E86 <code>vm._computedWatchers</code> \u4E2D\u3002 \u4E4B\u540E\u6267\u884C <code>defineComputed(vm, key, userDef)</code> \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">defineComputed</span> <span class="token punctuation">(</span>
    <span class="token parameter">target<span class="token punctuation">,</span>
    key<span class="token punctuation">,</span>
    userDef</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> shouldCache <span class="token operator">=</span> <span class="token operator">!</span><span class="token function">isServerRendering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> userDef <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      sharedPropertyDefinition<span class="token punctuation">.</span>get <span class="token operator">=</span> shouldCache
        <span class="token operator">?</span> <span class="token function">createComputedGetter</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
        <span class="token operator">:</span> <span class="token function">createGetterInvoker</span><span class="token punctuation">(</span>userDef<span class="token punctuation">)</span><span class="token punctuation">;</span>
      sharedPropertyDefinition<span class="token punctuation">.</span>set <span class="token operator">=</span> noop<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      sharedPropertyDefinition<span class="token punctuation">.</span>get <span class="token operator">=</span> userDef<span class="token punctuation">.</span>get
        <span class="token operator">?</span> shouldCache <span class="token operator">&amp;&amp;</span> userDef<span class="token punctuation">.</span>cache <span class="token operator">!==</span> <span class="token boolean">false</span>
          <span class="token operator">?</span> <span class="token function">createComputedGetter</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
          <span class="token operator">:</span> <span class="token function">createGetterInvoker</span><span class="token punctuation">(</span>userDef<span class="token punctuation">.</span>get<span class="token punctuation">)</span>
        <span class="token operator">:</span> noop<span class="token punctuation">;</span>
      sharedPropertyDefinition<span class="token punctuation">.</span>set <span class="token operator">=</span> userDef<span class="token punctuation">.</span>set <span class="token operator">||</span> noop<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sharedPropertyDefinition<span class="token punctuation">.</span>set <span class="token operator">===</span> noop<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      sharedPropertyDefinition<span class="token punctuation">.</span><span class="token function-variable function">set</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token punctuation">(</span><span class="token string">&quot;Computed property \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot; was assigned to but it has no setter.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token keyword">this</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> sharedPropertyDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u4E0D\u662F\u670D\u52A1\u7AEF\u6E32\u67D3\u5219\u6267\u884C <code>sharedPropertyDefinition.get = shouldCache; createComputedGetter(key)</code>\uFF0C<code>createComputedGetter</code> \u7684\u5B9A\u4E49\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">createComputedGetter</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">computedGetter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> watcher <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u6267\u884C\u8BA1\u7B97\u65B9\u6CD5</span>
          watcher<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          watcher<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> watcher<span class="token punctuation">.</span>value
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65F6\u53EA\u662F\u5C06 <code>computedGetter</code> \u65B9\u6CD5\u4FDD\u5B58\u5230 <code>sharedPropertyDefinition.set</code> \u4E2D\uFF0C\u4E4B\u540E\u518D\u8BBE\u7F6E <code>sharedPropertyDefinition.set</code> \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   sharedPropertyDefinition<span class="token punctuation">.</span><span class="token function-variable function">set</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token punctuation">(</span><span class="token string">&quot;Computed property \\&quot;&quot;</span> <span class="token operator">+</span> key <span class="token operator">+</span> <span class="token string">&quot;\\&quot; was assigned to but it has no setter.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token keyword">this</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u540E\u901A\u8FC7 <code>Object.defineProperty</code> \u65B9\u6CD5\u8BBE\u7F6E\u5C5E\u6027\u7684\u8BBF\u95EE\u89C4\u5219</p><p>\u770B\u5230\u8FD9\u4E2A\u539F\u6765\u5F53\u6211\u4EEC\u8BBF\u95EE <code>computed</code> \u4E0A\u7684\u5C5E\u6027\u65F6\uFF0C\u662F\u901A\u8FC7 <code>computedGetter</code> \u65B9\u6CD5\u8FD4\u56DE\u771F\u6B63\u7684\u503C\u7684;</p><p>\u5E76\u4E14\u5982\u679C\u5C1D\u8BD5\u53BB\u4FEE\u6539 <code>computed</code> \u4E0A\u7684\u5C5E\u6027\uFF0C\u5C06\u4F1A\u89E6\u53D1\u4E0A\u9762\u7684 <code>set</code> \u4E2D\u7684 <code>warn</code> \u63D0\u793A</p><p>\u5230\u6B64 <code>compunted</code> \u7684\u521D\u59CB\u5316\u5C31\u5B8C\u6210\u4E86\uFF0C\u63A5\u4E0B\u5C31\u662F\u770B\u770B\u5F53\u8BBF\u95EE <code>computed</code> \u65F6\u505A\u4E86\u4EC0\u4E48</p><h2 id="\u8BBF\u95EEcomputed\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#\u8BBF\u95EEcomputed\u5C5E\u6027" aria-hidden="true">#</a> \u8BBF\u95EEcomputed\u5C5E\u6027</h2><p>\u5047\u8BBE\u5F53\u524D\u7EC4\u4EF6\u8FDB\u5165\u6E32\u67D3\u9636\u6BB5\uFF08\u6CE8\u610F\uFF1A\u8FDB\u5165\u6E32\u67D3\u9636\u6BB5\u65F6\uFF0C\u6267\u884C\u7684\u662F<code>redner Watcher</code>\uFF0C\u5E76\u4E14\u5728\u6E32\u67D3\u5B8C\u6210\u524D\uFF0C\u8FD9\u4E2A <code>redner Watcher</code> \u4E00\u76F4\u5B58\u5728\u4E8E\u5168\u5C40\u5C5E\u6027 <code>Dep.target</code> \u4E2D\uFF09\uFF0C\u6B64\u65F6\u5982\u679C\u6709\u7528\u5230 <code>computed</code> \u5C5E\u6027\u5E76\u4E14\u5728\u8BBF\u95EE\u5F53\u524D <code>compuntd</code> \u5C5E\u6027\u65F6\uFF0C\u5C06\u4F1A\u6267\u884C\u4E0B\u9762\u4EE3\u7801\u5757\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">createComputedGetter</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">computedGetter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> watcher <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          watcher<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          watcher<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> watcher<span class="token punctuation">.</span>value
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\u6839\u636E <code>computed key</code> \u4ECE <code>this._computedWatchers</code> \u53D6\u51FA\u5BF9\u5E94\u7684 <code>Watcher</code>\uFF0C\u4E0A\u6587\u521D\u59CB\u5316 <code>computed</code> \u65F6 <code>dirty = true</code> \u6240\u4EE5\u4F1A\u6267\u884C <code>watcher.evaluate()</code> \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token class-name">Watcher</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">evaluate</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">evaluate</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// Watcher.prototype.get</span>
<span class="token class-name">Watcher</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">get</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">get</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">pushTarget</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> value<span class="token punctuation">;</span>
    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;getter for watcher \\&quot;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>expression<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> e
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      <span class="token comment">// &quot;touch&quot; every property so they are all tracked as</span>
      <span class="token comment">// dependencies for deep watching</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>deep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token function">popTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cleanupDeps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> value
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>watcher.evaluate()</code> \u65B9\u6CD5\u5C31\u4F1A\u6267\u884C <code>this.get()</code> \u65B9\u6CD5\uFF0C\u9996\u5148\u662F <code>pushTarget(this)</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">pushTarget</span> <span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   targetStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
   Dep<span class="token punctuation">.</span>target <span class="token operator">=</span> target<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6CE8\u610F\u5728\u6267\u884C<code>pushTarget()</code>\u524D\uFF0C<code>targetStack</code> \u961F\u5217\u4E2D\u5DF2\u7ECF\u5B58\u5728\u4E00\u4E2A <code>render Watcher</code> \u4E14 <code>Dep.target</code> \u4E3A <code>render Watcher</code></strong></p><p><code>pushTarget</code> \u6267\u884C\u4E24\u6B65\uFF1A</p><ol><li><p>\u5C06\u5F53\u524D <code>Watcher</code> \u6DFB\u52A0\u5230 <code>targetStack</code> \u4E2D\uFF0C\u6B64\u65F6 <code>targetStack</code> \u5C31\u5B58\u5728\u4E24\u4E2A <code>Watcher</code>, \u4E00\u4E2A\u662F <code>render Watcher</code>\uFF0C \u53E6\u4E00\u4E2A\u662F <code>computed Watcher</code>\u3002</p></li><li><p>\u5C06\u5F53\u524D <code>computed Watcher</code> \u6DFB\u52A0\u5230\u5168\u5C40 <code>Dep.targer</code> \u4E2D</p></li></ol><p>\u7136\u540E\u6267\u884C <code>this.getter</code> \u65B9\u6CD5\u65F6\u5C31\u4F1A\u53BB\u6267\u884C\u5BF9\u5E94\u7684\u8BA1\u7B97\u65B9\u6CD5\uFF0C\u6B64\u65F6\u5C31\u4F1A\u8BBF\u95EE\u5230\u6211\u4EEC\u8BA1\u7B97\u65B9\u6CD5\u4F9D\u8D56\u7684 <code>data</code> \u5C5E\u6027\uFF08\u4E0A\u6587\u4E2D\u7684 <code>this.message</code> \u548C <code>this.name</code> \u5C5E\u6027\uFF09\uFF0C\u7136\u540E\u5C31\u4F1A\u628A\u5F53\u524D\u8FD9\u4E2A <code>conputed Watcher</code> \u6DFB\u52A0\u5230\u5C5E\u6027\u7684\u6536\u96C6\u5668 <code>dep</code> \u4E2D\u3002\u6267\u884C\u5B8C <code>value = this.getter.call(vm, vm)</code> \u540E\uFF0C\u5F97\u5230\u8BA1\u7B97\u7ED3\u679C\u3002\u7136\u540E\u7EE7\u7EED\u5F80\u4E0B\u6267\u884C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">popTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cleanupDeps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// popTarget();</span>
 <span class="token keyword">function</span> <span class="token function">popTarget</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   targetStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   Dep<span class="token punctuation">.</span>target <span class="token operator">=</span> targetStack<span class="token punctuation">[</span>targetStack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u4E5F\u662F\u505A\u4E24\u4E2A\u4E8B\uFF1A</p><ol><li><p>\u9996\u5148\u79FB\u51FA <code>targetStack</code> \u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20\uFF0C\u4E5F\u5C31\u662F\u5F53\u524D\u8FD9\u4E2A <code>computed Watcher</code>\uFF0C\u79FB\u51FA\u540E <code>targetStack</code> \u4E2D\u8FD8\u5269\u4E0B <code>render Watcher</code></p></li><li><p>\u5E76\u5C06 <code>targetStack</code> \u6700\u540E\u4E00\u4E2A <code>Watcher</code> \u4FDD\u5B58\u5168\u5C40\u5C5E\u6027 <code>Dep.target</code> \u4E2D\uFF0C\u4E5F\u5C31\u662F <code>render Watcher</code></p></li></ol><p>\u53EF\u4EE5\u770B\u5230 <code>targetStack</code> \u662F\u4E00\u4E2A\u6808\u5F0F\u7684\u5B58\u50A8\u7ED3\u6784</p><p>\u6267\u884C\u5B8C <code>watcher.evaluate();</code> \u65B9\u6CD5\u540E\u56DE\u5230 <code>createComputedGetter</code> \u65B9\u6CD5\u4E2D\uFF0C\u7EE7\u7EED\u5F80\u4E0B\u6267\u884C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    watcher<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Watcher.prototype.depend</span>
  <span class="token class-name">Watcher</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">depend</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">depend</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>deps<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u77E5\u9053\u6BCF\u4E2A\u5C5E\u6027\u7684\u6536\u96C6\u5668 <code>Dep</code> \u6536\u96C6\u7740 <code>Watcher</code>\uFF0C\u4F46\u5176\u5B9E\u6BCF\u4E2A <code>Watcher.deps</code> \u5C5E\u6027\u4E5F\u4FDD\u5B58\u6536\u96C6\u4E86\u8BE5 <code>Watcher</code> \u7684 <code>Dep</code>, \u4E5F\u5C31\u662F\u76F8\u4E92\u6536\u96C6\u4E86\u3002\u5728\u5F53\u524D\u4F8B\u5B50\u4E2D <code>Watcher.deps</code> \u6709\u4E24\u4E2A <code>Dep</code>\uFF0C\u4E00\u4E2A\u662F <code>name</code> \u5C5E\u6027\u7684 <code>Dep</code>\uFF0C\u4E00\u4E2A\u662F <code>message</code> \u5C5E\u6027\u7684 <code>Dep</code></p><p>\u4E0A\u9762\u904D\u5386 <code>deps</code>\uFF0C \u6267\u884C\u6BCF\u4E2A <code>Dep</code> \u7684 <code>depend()</code> \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token class-name">Dep</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">depend</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">depend</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      Dep<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">addDep</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">//  Watcher.prototype.addDep</span>
  <span class="token class-name">Watcher</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">addDep</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">addDep</span> <span class="token punctuation">(</span><span class="token parameter">dep</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> id <span class="token operator">=</span> dep<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>newDeps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>depIds<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dep<span class="token punctuation">.</span><span class="token function">addSub</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u6587\u5206\u6790\u5230\u6B64\u65F6\u7684 <code>Dep.target</code> \u4E3A\u5F53\u524D\u7EC4\u4EF6\u7684 <code>render Watcher</code>\uFF0C\u56E0\u6B64\u4E0A\u9762\u4EE3\u7801\u5C31\u662F\u5C06\u5F53\u524D <code>render Watcher</code> \u6DFB\u52A0\u5230 <code>Dep</code> \u4E2D\uFF0C\u5F53\u7136\u5982\u679C\u5F53\u524D <code>Dep</code> \u5DF2\u7ECF\u5305\u542B\u4E86\u8FD9\u4E2A <code>Watcher</code>\uFF0C\u5C06\u4E0D\u4F1A\u91CD\u590D\u6DFB\u52A0\u3002</p><p>\u4EE5\u4E0A\u9762\u4F8B\u5B50\u4E3A\u4F8B\uFF0C \u56E0\u4E3A\u7EC4\u4EF6\u6E32\u67D3\u65F6\u6709\u7528\u5230 <code>name</code> \u5C5E\u6027\uFF08\u4E14\u5728 <code>bind</code> \u8BBF\u95EE\u4E4B\u524D\uFF09\uFF0C\u6240\u4EE5 <code>name</code> \u5C5E\u6027\u5BF9\u5E94\u7684 <code>Dep</code> \u5DF2\u7ECF\u6709\u4E86 <code>render Watcher</code>\uFF0C\u6B64\u65F6\u5C31\u4F1A\u4E0D\u91CD\u590D\u6DFB\u52A0\u4E86\uFF0C\u800C <code>message</code> \u5C5E\u6027\u7684 <code>Dep</code> \u4E2D\u5E76\u6CA1\u6709 <code>render Watcher</code> \uFF0C\u6240\u4EE5\u4F1A\u6DFB\u52A0\u5F53\u524D\u7684 <code>render Watcher</code>, \u90A3\u4E48\u95EE\u9898\u6765\u4E86\u65E2\u7136\u6E32\u67D3\u6CA1\u6709\u7528\u5230\u8FD9\u4E2A\u5C5E\u6027\uFF0C\u4E3A\u4EC0\u4E48\u8981\u6DFB\u52A0 <code>render Watcher</code> \u5462\uFF1F</p><h2 id="\u66F4\u65B0computed\u4F9D\u8D56" tabindex="-1"><a class="header-anchor" href="#\u66F4\u65B0computed\u4F9D\u8D56" aria-hidden="true">#</a> \u66F4\u65B0computed\u4F9D\u8D56</h2><p>\u6309\u4E4B\u524D <code>render Watcher</code> \u548C <code>watch Watcher</code> \u7684\u66F4\u65B0\u673A\u5236\uFF0C\u5F53\u4F9D\u8D56\u7684\u5C5E\u6027\u66F4\u65B0\u65F6\uFF0C\u8FD9\u4E9B <code>Watcher</code> \u5C06\u88AB\u6536\u96C6\u5230\u5230\u4E00\u4E2A\u5FAE\u4EFB\u52A1\u961F\u5217\u4E2D\uFF0C\u5E76\u4E14\u4F1A\u6309 <code>watcher id</code> \u4F5C\u4E3A\u5347\u5E8F\u6392\u5E8F\u6765\u89E6\u53D1\u8FD9\u4E9B <code>Watcher run</code> \u65B9\u6CD5</p><p>\u4F46\u662F <code>computed Watcher</code> \u4F9D\u8D56\u7684\u8BA1\u7B97\u5C5E\u6027\u66F4\u65B0\u65F6\u5E76\u4E0D\u4F1A\u5C06\u5F53\u524D\u7684 <code>conputed Watcher</code> \u6DFB\u52A0\u5230\u5FAE\u4EFB\u52A1\u961F\u5217\u4E2D\uFF0C\u4EE5\u4E0A\u9762\u4F8B\u5B50\u4E3A\u4F8B\uFF0C\u5F53 <code>this.message = &quot;message_B&quot;</code> \u6267\u884C\u540E\uFF0C<code>meaaage</code> \u5C5E\u6027 <code>Dep</code> \u6B64\u65F6\u6709\u4E24\u4E2A Watcher: <code>render Watcher</code> \u548C <code>conputed Watcher</code>\uFF0C\u6240\u4EE5\u4F1A\u904D\u5386\u8FD9\u4E24\u4E2A\u4F9D\u6B21\u6267\u884C <code>watcher.update</code> \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token class-name">Watcher</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">update</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">update</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">/* istanbul ignore else */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>lazy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sync<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">queueWatcher</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\u8981\u6CE8\u610F\u7684\u662F<code>computed Watcher</code> \u7684 <code>this.lazy = true</code>\uFF0C\u6839\u636E\u4E0A\u9762\u7684\u4EE3\u7801\u4E0D\u4F1A\u6267\u884C <code>queueWatcher(this)</code>\uFF0C\u6240\u4EE5 <code>computed Watcher</code> \u4E0D\u4F1A\u6DFB\u52A0\u5230\u66F4\u65B0\u961F\u5217\u4E2D</p><p>\u6240\u4EE5\u53EA\u4F1A\u6267\u884C <code>render Watcher</code>\u7684 <code>update</code> \uFF0C\u7136\u540E\u5728\u66F4\u65B0\u7EC4\u4EF6\u7684\u65F6\u5019\u4F1A\u8BBF\u95EE\u5230 <code>computed</code> \u5C5E\u6027\uFF0C\u6B64\u65F6\u4F1A\u91CD\u65B0\u6267\u884C\u8BA1\u7B97\u51FD\u6570\u5F97\u5230\u65B0\u503C\u3002\u8FD9\u4E5F\u5C31\u53EF\u4EE5\u7406\u89E3\u4E3A\u4EC0\u4E48\u5373\u4F7F\u8BA1\u7B97\u4F9D\u8D56\u7684\u5C5E\u6027\u6CA1\u6709\u5728\u6E32\u67D3\u4E2D\u7528\u5230\u4E5F\u4F1A\u5C06 <code>render Watcher</code> \u6DFB\u52A0\u5230 <code>Dep</code> \u7684\u539F\u56E0\u3002</p><p><strong>\u5982\u679C <code>watch</code> \u4E2D\u6709\u76D1\u542C <code>computed</code> \u5C5E\u6027\u65F6\uFF0C\u66F4\u65B0\u673A\u5236\u53C8\u662F\u600E\u6837\u7684\u5462\uFF1F</strong></p><p>\u901A\u8FC7\u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50\u5206\u6790\u4E00\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&quot;app&quot;</span><span class="token operator">&gt;</span>
  <span class="token punctuation">{</span><span class="token punctuation">{</span> name <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>br<span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">{</span><span class="token punctuation">{</span>bind<span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
  <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#app&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;AA&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u54C8\u54C8&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// message:{</span>
        <span class="token comment">// handler:  function (val) {</span>
          <span class="token comment">// console.log(val)</span>
          <span class="token comment">// this.name = val + &#39;_Watch&#39;</span>
        <span class="token comment">// }</span>
      <span class="token comment">// },</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">handler</span><span class="token operator">:</span>  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">bind</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">handler</span><span class="token operator">:</span>  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;this.name&#39;</span> <span class="token operator">+</span> val
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">computed</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">bind</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">debugger</span>
        <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">+</span> <span class="token string">&#39;__________&#39;</span>
        <span class="token keyword">return</span> result
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">debugger</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;mounted&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> <span class="token string">&quot;message_B&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\u770B\u4E0B\u521D\u59CB\u5316 <code>watch bind</code> \u7684\u65F6\u5019\u505A\u4E86\u4EC0\u4E48\u4E8B\u60C5\uFF1A</p><ol><li><p>\u5B9E\u73B0\u4E00\u4E2A <code>Watcher</code> \u5B9E\u4F8B</p></li><li><p>\u8BBF\u95EE <code>this.bind</code> \u5C5E\u6027\u4E4B\u524D\u5C06\u5F53\u524D <code>watch Watcher</code> \u4FDD\u5B58\u5230 <code>targetStack</code> \u6808\u4E2D\uFF0C\u7136\u540E\u5168\u5C40\u5C5E\u6027 <code>Dep.targe</code> \u6307\u5411\u5F53\u524D <code>watch Watcher</code></p></li><li><p>\u56E0\u4E3A <code>this.bind</code> \u662F <code>computed</code> \u5C5E\u6027\uFF0C\u6240\u4EE5\u4F1A\u89E6\u53D1\u4E0B\u9762\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createComputedGetter</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">computedGetter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> watcher <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        watcher<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        watcher<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> watcher<span class="token punctuation">.</span>value
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F97\u5230\u5F53\u524D\u7684 <code>compunted Watcher</code>, \u7136\u540E\u901A\u8FC7 <code>watcher.evaluate()</code> \u5F97\u5230\u8BA1\u7B97\u7ED3\u679C\uFF0C\u6CE8\u610F <code>evaluate</code> \u7684\u4EE3\u7801\u5185\u5BB9\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Watcher</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">evaluate</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">evaluate</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u6267\u884C <code>compunted Watcher</code> \u7684 <code>get</code> \u65B9\u6CD5\u5F97\u5230 <code>computed</code> \u7ED3\u679C\u7684\u540C\u65F6\u5C06\u5F53\u524D <code>compunted Watcher</code> \u4FDD\u5B58\u5230 <code>targetStack</code> \u6808\u4E2D\uFF0C\u7136\u540E\u5168\u5C40\u5C5E\u6027 <code>Dep.targe</code> \u6307\u5411\u5F53\u524D <code>compunted Watcher</code></p><p>\u4E4B\u540E\u8FD8\u4F1A\u5C06 <code>dirty</code> \u8BBE\u4E3A <code>false</code>\uFF08\u9632\u6B62\u540E\u9762\u91CD\u590D\u8BA1\u7B97\uFF09</p></li><li><p>\u6CE8\u610F\u8BA1\u7B97\u7684\u65F6\u5019\u4F1A\u8BBF\u95EE <code>this.message</code> \u5C5E\u6027\uFF0C\u5E76\u4E14\u6B64\u65F6\u7684\u5168\u5C40 <code>Dep.target</code> \u4E3A\u5F53\u524D <code>compunted Watcher</code>\uFF0C\u6240\u4EE5 <code>compunted Watcher</code> \u4F1A\u88AB <code>message</code> \u5C5E\u6027\u6536\u96C6</p></li><li><p><code>compunted Watcher</code> \u6536\u96C6\u5B8C\u4E4B\u540E\uFF0C\u5F53\u524D <code>compunted Watcher</code> \u4F1A\u88AB <code>targetStack</code> \u63A8\u51FA\uFF0C\u5C06 <code>Dep.target</code> \u6307\u5411 <code>targetStack</code> \u6700\u540E\u4E00\u4E2A <code>Watcher</code>\uFF0C\u4E5F\u5C31\u662F <code>watch Watcher</code></p></li><li><p>\u6267\u884C\u5B8C <code>watcher.evaluate()</code>\uFF0C\u6267\u884C <code>watcher.depend();</code>,\u4E0A\u6587\u5206\u6790\u8FC7\u8FD9\u4E2A\u65B9\u6CD5\u7684\u4F5C\u7528\u5C31\u662F\u904D\u5386\u5F53\u524D <code>Watcher</code> \u7684 <code>deps</code> \u5C5E\u6027\uFF0C\u6536\u96C6\u5F53\u524D\u7684 <code>Dep.target</code> \u4FDD\u5B58\u7684 <code>Watcher</code>\u3002 \u4E5F\u5C31\u610F\u5473\u7740\u8FD9\u91CC\u7684 <code>watch Watcher</code> \u4E5F\u4F1A\u88AB <code>meaaage</code> \u5C5E\u6027\u6536\u96C6</p></li></ol><p>\u4E0A\u9762\u4F8B\u5B50\u4E2D\u5F53\u6267\u884C <code>this.message = &quot;message_B&quot;</code> \u65F6\uFF0C\u6267\u884C\u7684\u6B65\u9AA4\u5982\u4E0B\uFF1A</p><ul><li>\u904D\u5386 <code>message</code> \u6536\u96C6\u7684 <code>Watcher</code> \uFF0C\u5E76\u6267\u884C\u5BF9\u5E94\u7684 <code>update</code> \u65B9\u6CD5\uFF0C\u9996\u5148\u6267\u884C\u7684\u662F <code>watch bind Watcher</code>, \u6267\u884C\u5BF9\u5E94\u7684 <code>run</code> \u65B9\u6CD5</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token class-name">Watcher</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">run</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">run</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>active<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>
        value <span class="token operator">!==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">||</span>
        <span class="token comment">// Deep watchers and watchers on Object/Arrays should fire even</span>
        <span class="token comment">// when the value is the same, because the value may</span>
        <span class="token comment">// have mutated.</span>
        <span class="token function">isObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>deep
      <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// set new value</span>
        <span class="token keyword">var</span> oldValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;callback for watcher \\&quot;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>expression<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u5148\u6267\u884C <code>var value = this.get();</code> \u8BBF\u95EE\u5C5E\u6027 <code>bind</code>\uFF0C \u6B64\u65F6\u4F1A\u6267\u884C\u5BF9\u5E94\u5728\u7684 <code>computed bind Watcher</code>\uFF0C\u5F97\u5230 <code>computed</code> \u7ED3\u679C\u7684\u540C\u65F6\u4E5F\u4F1A\u5F53\u524D\u7684 <code>computed Watcher</code> \u7684 <code>dirty</code> \u8BBE\u4E3A <code>false</code></p></li><li><p>\u4E0A\u4E00\u6B65\u6267\u884C\u5B8C\u4E4B\u540E\u8FD0\u884C <code>this.cb.call(this.vm, value, oldValue)</code> \u6267\u884C\u5BF9\u5E94\u7684 <code>watch Handler</code></p></li><li><p>\u4FEE\u6539 <code>this.name = &#39;this.name&#39; + val</code>\uFF0C\u89E6\u53D1\u5BF9\u5E94\u7684 <code>watch name handle</code></p></li><li><p>\u6700\u540E\u89E6\u53D1 <code>render Watche</code> , \u6B64\u65F6\u8BBF\u95EE <code>this.bind</code> \uFF0C\u5C06\u6267\u884C\u4EE5\u4E0B\u8BED\u53E5\uFF1A</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">function</span> <span class="token function">createComputedGetter</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">computedGetter</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">var</span> watcher <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_computedWatchers<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         watcher<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span>Dep<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         watcher<span class="token punctuation">.</span><span class="token function">depend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
       <span class="token keyword">return</span> watcher<span class="token punctuation">.</span>value
     <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\u6B64\u65F6 <code>watcher.dirty</code> \u4E3A <code>false</code>\uFF0C\u6240\u4EE5\u4E0D\u4F1A\u91CD\u590D\u6267\u884C <code>computed</code> \u8BF7\u95EE\uFF0C\u800C\u662F\u76F4\u63A5\u8FD4\u56DE <code>watcher.value</code> \uFF0C\u4E5F\u5C31\u662F\u4E4B\u524D\u5F97\u5230\u7684\u503C</p><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u5BF9\u4E8E <code>cmpunted</code> \u4E5F\u4F1A\u521B\u5EFA\u4E00\u4E2A <code>Watcher</code>\uFF0C\u5E76\u4EE5 <code>key-conputedWatcher</code> \u7684\u5F62\u5F0F\u4FDD\u5B58\u5230 <code>computedWatchers</code> \u4E2D</p><p>\u7136\u540E\u8DDF <code>data</code> \u5C5E\u6027\u7C7B\u4F3C\uFF0C<code>computed</code> \u5C5E\u6027\u7684\u8BBF\u95EE\u4E5F\u662F\u901A\u8FC7 <code>Object.defineProperty(target, key, sharedPropertyDefinition);</code> \u65B9\u6CD5\u505A\u4E86\u4E00\u5C42\u4EE3\u7406\uFF0C\u5F53\u524D\u8BBF\u95EE <code>compunted</code> \u4E0A\u7684\u5C5E\u6027\u65F6\uFF0C\u5C06\u88AB\u4EE3\u7406\u5230\u8FD9\u4E2A <code>_computedWatchers </code> \u5C5E\u6027\u5BF9\u5E94\u7684 <code>computedWatchers</code> \u4E0A\uFF0C\u7136\u540E\u901A\u8FC7 <code> watcher.evaluate()</code> \u6267\u884C\u5BF9\u5E94\u539F <code>compunted</code> \u8BA1\u7B97\u65B9\u6CD5\u6C42\u503C</p><p><code>conputed</code> \u4F9D\u8D56\u7684\u5C5E\u6027\u4F1A\u6536\u96C6 <code>render Watcher</code>\uFF0C\u6240\u4EE5\u8FD9\u4E9B\u4F9D\u8D56\u7684\u5C5E\u6027\u66F4\u65B0\u65F6\u4F1A\u91CD\u65B0\u6E32\u67D3\u7EC4\u4EF6\uFF0C\u5728\u6E32\u67D3\u7EC4\u4EF6\u7684\u8FC7\u7A0B\u4E2D\u4F1A\u8BBF\u95EE\u5230 <code>computed</code> \u5C5E\u6027\uFF0C\u518D\u8BA1\u7B97\u5BF9\u5E94\u7684\u65B9\u6CD5\u8FD4\u56DE\u5F97\u5230\u503C</p>`,64),o=[p];function c(i,l){return s(),a("div",null,o)}var d=n(e,[["render",c],["__file","Computed.html.vue"]]);export{d as default};
