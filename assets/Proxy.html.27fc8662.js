import{_ as a,o as p,c as e,b as n,a as t,d as o,e as c,r as l}from"./app.85c8df44.js";const i={},u=o(`<h1 id="proxy" tabindex="-1"><a class="header-anchor" href="#proxy" aria-hidden="true">#</a> Proxy</h1><p>Proxy \u7528\u4E8E\u4FEE\u6539\u67D0\u4E9B\u64CD\u4F5C\u7684\u9ED8\u8BA4\u884C\u4E3A, Proxy \u53EF\u4EE5\u7406\u89E3\u6210\uFF0C\u5728\u76EE\u6807\u5BF9\u8C61\u4E4B\u524D\u67B6\u8BBE\u4E00\u5C42\u201C\u62E6\u622A\u201D\uFF0C\u5916\u754C\u5BF9\u8BE5\u5BF9\u8C61\u7684\u8BBF\u95EE\uFF0C\u90FD\u5FC5\u987B\u5148\u901A\u8FC7\u8FD9\u5C42\u62E6\u622A\uFF0C\u56E0\u6B64\u63D0\u4F9B\u4E86\u4E00\u79CD\u673A\u5236\uFF0C\u53EF\u4EE5\u5BF9\u5916\u754C\u7684\u8BBF\u95EE\u8FDB\u884C\u8FC7\u6EE4\u548C\u6539\u5199</p><p>\u8BED\u6CD5\uFF1A <code>new Proxy(target, handler)</code></p><ul><li><p><code>new Proxy()</code> \u8868\u793A\u751F\u6210\u4E00\u4E2A Proxy \u5B9E\u4F8B</p></li><li><p><code>target</code> \u53C2\u6570\u8868\u793A\u6240\u8981\u62E6\u622A\u7684\u76EE\u6807\u5BF9\u8C61</p></li><li><p><code>handler</code> \u53C2\u6570\u4E5F\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u7528\u6765\u5B9A\u5236\u62E6\u622A\u884C\u4E3A,\u5BF9\u4E8E\u6BCF\u4E00\u4E2A\u88AB\u4EE3\u7406\u7684\u64CD\u4F5C\uFF0C\u9700\u8981\u63D0\u4F9B\u4E00\u4E2A\u5BF9\u5E94\u7684\u5904\u7406\u51FD\u6570\uFF0C\u8BE5\u51FD\u6570\u5C06\u62E6\u622A\u5BF9\u5E94\u7684\u64CD\u4F5C</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> propKey</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">35</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

proxy<span class="token punctuation">.</span>time <span class="token comment">// 35</span>
proxy<span class="token punctuation">.</span>name <span class="token comment">// 35</span>
proxy<span class="token punctuation">.</span>title <span class="token comment">// 35</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u914D\u7F6E\u5BF9\u8C61\u6709\u4E00\u4E2A <code>get</code> \u65B9\u6CD5\uFF0C\u7528\u6765\u62E6\u622A\u5BF9\u76EE\u6807\u5BF9\u8C61\u5C5E\u6027\u7684\u8BBF\u95EE\u8BF7\u6C42\u3002<code>get</code> \u65B9\u6CD5\u7684\u4E24\u4E2A\u53C2\u6570\u5206\u522B\u662F\u76EE\u6807\u5BF9\u8C61\u548C\u6240\u8981\u8BBF\u95EE\u7684\u5C5E\u6027\u3002\u53EF\u4EE5\u770B\u5230\uFF0C\u7531\u4E8E\u62E6\u622A\u51FD\u6570\u603B\u662F\u8FD4\u56DE <code>35</code>\uFF0C\u6240\u4EE5\u8BBF\u95EE\u4EFB\u4F55\u5C5E\u6027\u90FD\u5F97\u5230 <code>35</code></p><p><strong>\u6CE8\u610F\uFF0C\u8981\u4F7F\u5F97 Proxy \u8D77\u4F5C\u7528\uFF0C\u5FC5\u987B\u9488\u5BF9 Proxy \u5B9E\u4F8B\uFF08\u4E0A\u4F8B\u662F <code>proxy</code> \u5BF9\u8C61\uFF09\u8FDB\u884C\u64CD\u4F5C\uFF0C\u800C\u4E0D\u662F\u9488\u5BF9\u76EE\u6807\u5BF9\u8C61\uFF08\u4E0A\u4F8B\u662F\u7A7A\u5BF9\u8C61\uFF09\u8FDB\u884C\u64CD\u4F5C</strong></p><p>Proxy \u5B9E\u4F8B\u4E5F\u53EF\u4EE5\u4F5C\u4E3A\u5176\u4ED6\u5BF9\u8C61\u7684\u539F\u578B\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> propKey</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">35</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>proxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>time <span class="token comment">// 35</span>
<span class="token comment">// obj\u5BF9\u8C61\u672C\u8EAB\u5E76\u6CA1\u6709time\u5C5E\u6027\uFF0C\u6240\u4EE5\u6839\u636E\u539F\u578B\u94FE\uFF0C\u4F1A\u5728proxy\u5BF9\u8C61\u4E0A\u8BFB\u53D6\u8BE5\u5C5E\u6027\uFF0C\u5BFC\u81F4\u88AB\u62E6\u622A</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 Proxy \u62E6\u622A\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">===</span> <span class="token string">&#39;prototype&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token string">&#39;Hello, &#39;</span> <span class="token operator">+</span> name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function-variable function">apply</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> thisBinding<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function-variable function">construct</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> args<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> fproxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">fproxy</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>
<span class="token keyword">new</span> <span class="token class-name">fproxy</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// {value: 2}</span>
fproxy<span class="token punctuation">.</span>prototype <span class="token operator">===</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype <span class="token comment">// true</span>
fproxy<span class="token punctuation">.</span>foo <span class="token operator">===</span> <span class="token string">&quot;Hello, foo&quot;</span> <span class="token comment">// true</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Proxy \u652F\u6301\u7684\u62E6\u622A\u64CD\u4F5C\uFF1A</p><ul><li><p><code>get(target, propKey, receiver)</code>\uFF1A\u62E6\u622A\u5BF9\u8C61\u5C5E\u6027\u7684\u8BFB\u53D6\uFF0C\u6BD4\u5982 <code>proxy.foo</code> \u548C <code>proxy[&#39;foo&#39;]</code></p></li><li><p><code>set(target, propKey, value, receiver)</code>: \u62E6\u622A\u5BF9\u8C61\u5C5E\u6027\u7684\u8BBE\u7F6E, \u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C</p></li><li><p><code>has(target, propKey)</code>\uFF1A\u62E6\u622A <code>propKey in proxy</code> \u7684\u64CD\u4F5C\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C</p></li><li><p><code>deleteProperty(target, propKey)</code>\uFF1A\u62E6\u622A <code>delete proxy[propKey]</code> \u7684\u64CD\u4F5C\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C</p></li><li><p><code>ownKeys(target)</code>\uFF1A\u62E6\u622A <code>Object.getOwnPropertyNames(proxy)</code> \u3001 <code>Object.getOwnPropertySymbols(proxy)</code> \u3001<code>Object.keys(proxy)</code> \u3001<code>for...in</code>\u5FAA\u73AF\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\u3002\u8BE5\u65B9\u6CD5\u8FD4\u56DE\u76EE\u6807\u5BF9\u8C61\u6240\u6709\u81EA\u8EAB\u7684\u5C5E\u6027\u7684\u5C5E\u6027\u540D\uFF0C\u800C <code>Object.keys()</code> \u7684\u8FD4\u56DE\u7ED3\u679C\u4EC5\u5305\u62EC\u76EE\u6807\u5BF9\u8C61\u81EA\u8EAB\u7684\u53EF\u904D\u5386\u5C5E\u6027</p></li><li><p><code>getOwnPropertyDescriptor(target, propKey)</code>\uFF1A\u62E6\u622A <code>Object.getOwnPropertyDescriptor(proxy, propKey)</code> \uFF0C\u8FD4\u56DE\u5C5E\u6027\u7684\u63CF\u8FF0\u5BF9\u8C61</p></li><li><p><code>defineProperty(target, propKey, propDesc)</code>\uFF1A\u62E6\u622A <code>Object.defineProperty(proxy, propKey, propDesc\uFF09</code> \u3001<code>Object.defineProperties(proxy, propDescs)</code>\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C</p></li><li><p><code>preventExtensions(target)</code>\uFF1A\u62E6\u622A <code>Object.preventExtensions(proxy)</code>\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C</p></li><li><p><code>getPrototypeOf(target)</code>\uFF1A\u62E6\u622A<code>Object.getPrototypeOf(proxy)</code>\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61</p></li><li><p><code>isExtensible(target)</code>\uFF1A\u62E6\u622A <code>Object.isExtensible(proxy)</code>\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002</p></li><li><p><code>setPrototypeOf(target, proto)</code>\uFF1A\u62E6\u622A <code>Object.setPrototypeOf(proxy, proto)</code> \uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002\u5982\u679C\u76EE\u6807\u5BF9\u8C61\u662F\u51FD\u6570\uFF0C\u90A3\u4E48\u8FD8\u6709\u4E24\u79CD\u989D\u5916\u64CD\u4F5C\u53EF\u4EE5\u62E6\u622A</p></li><li><p><code>apply(target, object, args)</code>\uFF1A\u62E6\u622A Proxy \u5B9E\u4F8B\u4F5C\u4E3A\u51FD\u6570\u8C03\u7528\u7684\u64CD\u4F5C\uFF0C\u6BD4\u5982 <code>proxy(...args)</code>\u3001 <code>proxy.call(object, ...args)</code> \u3001<code>proxy.apply(...)</code></p></li><li><p><code>construct(target, args)</code>\uFF1A\u62E6\u622A Proxy \u5B9E\u4F8B\u4F5C\u4E3A\u6784\u9020\u51FD\u6570\u8C03\u7528\u7684\u64CD\u4F5C\uFF0C\u6BD4\u5982 <code>new proxy(...args)</code></p></li></ul><h2 id="proxy-\u5B9E\u4F8B\u7684\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#proxy-\u5B9E\u4F8B\u7684\u65B9\u6CD5" aria-hidden="true">#</a> Proxy \u5B9E\u4F8B\u7684\u65B9\u6CD5</h2><h2 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> get()</h2><p><code>get</code> \u65B9\u6CD5\u7528\u4E8E\u62E6\u622A\u67D0\u4E2A\u5C5E\u6027\u7684\u8BFB\u53D6\u64CD\u4F5C\uFF0C\u53EF\u4EE5\u63A5\u53D7\u4E09\u4E2A\u53C2\u6570\uFF0C\u4F9D\u6B21\u4E3A\u76EE\u6807\u5BF9\u8C61\u3001\u5C5E\u6027\u540D\u548C <code>proxy</code> \u5B9E\u4F8B\u672C\u8EAB\uFF08\u4E25\u683C\u5730\u8BF4\uFF0C\u662F\u64CD\u4F5C\u884C\u4E3A\u6240\u9488\u5BF9\u7684\u5BF9\u8C61\uFF09\uFF0C\u5176\u4E2D\u6700\u540E\u4E00\u4E2A\u53C2\u6570\u53EF\u9009</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>person<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> propKey</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>propKey <span class="token keyword">in</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> target<span class="token punctuation">[</span>propKey<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ReferenceError</span><span class="token punctuation">(</span><span class="token string">&quot;Prop name \\&quot;&quot;</span> <span class="token operator">+</span> propKey <span class="token operator">+</span> <span class="token string">&quot;\\&quot; does not exist.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

proxy<span class="token punctuation">.</span>name <span class="token comment">// &quot;\u5F20\u4E09&quot;</span>
proxy<span class="token punctuation">.</span>age <span class="token comment">// \u629B\u51FA\u4E00\u4E2A\u9519\u8BEF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Proxy \u5BF9\u8C61\u4F5C\u4E3A\u5176\u5B83\u5BF9\u8C61\u7684 <code>prototype</code> \u65F6\uFF0C\u5F53\u8BBF\u95EE\u8FD9\u4E2A\u5BF9\u8C61\u7684 <code>prototype</code> \u65F6\u4E5F\u88AB\u4F1A\u88AB\u62E6\u622A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> proto <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> propertyKey<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;GET &#39;</span> <span class="token operator">+</span> propertyKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> target<span class="token punctuation">[</span>propertyKey<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>proto<span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>foo <span class="token comment">// &quot;GET foo&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5229\u7528 Proxy\uFF0C\u53EF\u4EE5\u5C06\u8BFB\u53D6\u5C5E\u6027\u7684\u64CD\u4F5C\uFF08<code>get</code>\uFF09\uFF0C\u8F6C\u53D8\u4E3A\u6267\u884C\u67D0\u4E2A\u51FD\u6570\uFF0C\u4ECE\u800C\u5B9E\u73B0\u5C5E\u6027\u7684\u94FE\u5F0F\u64CD\u4F5C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">pipe</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> funcStack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> oproxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">get</span> <span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">pipeObject<span class="token punctuation">,</span> fnName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>fnName <span class="token operator">===</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> funcStack<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      funcStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>window<span class="token punctuation">[</span>fnName<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> oproxy<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> oproxy<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> <span class="token function-variable function">double</span> <span class="token operator">=</span> <span class="token parameter">n</span> <span class="token operator">=&gt;</span> n <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token function-variable function">pow</span>    <span class="token operator">=</span> <span class="token parameter">n</span> <span class="token operator">=&gt;</span> n <span class="token operator">*</span> n<span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token function-variable function">reverseInt</span> <span class="token operator">=</span> <span class="token parameter">n</span> <span class="token operator">=&gt;</span> n<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token function">pipe</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span>double<span class="token punctuation">.</span>pow<span class="token punctuation">.</span>reverseInt<span class="token punctuation">.</span>get<span class="token punctuation">;</span> <span class="token comment">// 63</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u4E00\u4E2A\u5C5E\u6027\u4E0D\u53EF\u914D\u7F6E\uFF08configurable\uFF09\u4E14\u4E0D\u53EF\u5199\uFF08writable\uFF09\uFF0C\u5219 Proxy \u4E0D\u80FD\u4FEE\u6539\u8BE5\u5C5E\u6027\uFF0C\u5426\u5219\u901A\u8FC7 Proxy \u5BF9\u8C61\u8BBF\u95EE\u8BE5\u5C5E\u6027\u4F1A\u62A5\u9519</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> target <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span>
    <span class="token literal-property property">writable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> propKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>

proxy<span class="token punctuation">.</span>foo
<span class="token comment">// TypeError: Invariant check failed</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set" tabindex="-1"><a class="header-anchor" href="#set" aria-hidden="true">#</a> set()</h3><p><code>set</code> \u65B9\u6CD5\u7528\u6765\u62E6\u622A\u67D0\u4E2A\u5C5E\u6027\u7684\u8D4B\u503C\u64CD\u4F5C\uFF0C\u53EF\u4EE5\u63A5\u53D7\u56DB\u4E2A\u53C2\u6570\uFF0C\u4F9D\u6B21\u4E3A\u76EE\u6807\u5BF9\u8C61\u3001\u5C5E\u6027\u540D\u3001\u5C5E\u6027\u503C\u548C Proxy \u5B9E\u4F8B\u672C\u8EAB\uFF0C\u5176\u4E2D\u6700\u540E\u4E00\u4E2A\u53C2\u6570\u53EF\u9009</p><p>\u5047\u5B9A <code>Person</code> \u5BF9\u8C61\u6709\u4E00\u4E2A <code>age</code> \u5C5E\u6027\uFF0C\u8BE5\u5C5E\u6027\u5E94\u8BE5\u662F\u4E00\u4E2A\u4E0D\u5927\u4E8E <code>200</code> \u7684\u6574\u6570\uFF0C\u90A3\u4E48\u53EF\u4EE5\u4F7F\u7528 <code>Proxy</code> \u4FDD\u8BC1 <code>age</code> \u7684\u5C5E\u6027\u503C\u7B26\u5408\u8981\u6C42</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> validator <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>prop <span class="token operator">===</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;The age is not an integer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&gt;</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RangeError</span><span class="token punctuation">(</span><span class="token string">&#39;The age seems invalid&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5BF9\u4E8E\u6EE1\u8DB3\u6761\u4EF6\u7684 age \u5C5E\u6027\u4EE5\u53CA\u5176\u4ED6\u5C5E\u6027\uFF0C\u76F4\u63A5\u4FDD\u5B58</span>
    obj<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> validator<span class="token punctuation">)</span><span class="token punctuation">;</span>

person<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>

person<span class="token punctuation">.</span>age <span class="token comment">// 100</span>
person<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token string">&#39;young&#39;</span> <span class="token comment">// \u62A5\u9519</span>
person<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">300</span> <span class="token comment">// \u62A5\u9519</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u5982\u679C\u76EE\u6807\u5BF9\u8C61\u81EA\u8EAB\u7684\u67D0\u4E2A\u5C5E\u6027\uFF0C\u4E0D\u53EF\u5199\u4E14\u4E0D\u53EF\u914D\u7F6E\uFF0C\u90A3\u4E48 <code>set</code> \u65B9\u6CD5\u5C06\u4E0D\u8D77\u4F5C\u7528\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">writable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    obj<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;baz&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
proxy<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token string">&#39;baz&#39;</span><span class="token punctuation">;</span>
proxy<span class="token punctuation">.</span>foo <span class="token comment">// &quot;bar&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="apply" tabindex="-1"><a class="header-anchor" href="#apply" aria-hidden="true">#</a> apply()</h3><p><code>apply</code> \u65B9\u6CD5\u62E6\u622A\u51FD\u6570\u7684\u8C03\u7528\u3001<code>call</code> \u548C <code>apply</code> \u64CD\u4F5C</p><p><code>apply</code> \u65B9\u6CD5\u53EF\u4EE5\u63A5\u53D7\u4E09\u4E2A\u53C2\u6570\uFF0C\u5206\u522B\u662F\u76EE\u6807\u5BF9\u8C61\u3001\u76EE\u6807\u5BF9\u8C61\u7684\u4E0A\u4E0B\u6587\u5BF9\u8C61\uFF08 <code>this</code> \uFF09\u548C\u76EE\u6807\u5BF9\u8C61\u7684\u53C2\u6570\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">apply</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> ctx<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">Reflect</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">target</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token string">&#39;I am the target&#39;</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">apply</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;I am the proxy&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">p</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// &quot;I am the proxy&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F8B\u5B502\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> twice <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">apply</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> ctx<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">Reflect</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">sum</span> <span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> left <span class="token operator">+</span> right<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>sum<span class="token punctuation">,</span> twice<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">proxy</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// 6</span>
<span class="token function">proxy</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token comment">// 22</span>
<span class="token function">proxy</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 30</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u6BCF\u5F53\u6267\u884C <code>proxy</code> \u51FD\u6570\uFF08\u76F4\u63A5\u8C03\u7528\u6216 <code>call</code> \u548C <code>apply</code> \u8C03\u7528\uFF09\uFF0C\u5C31\u4F1A\u88AB <code>apply</code> \u65B9\u6CD5\u62E6\u622A</p><p>\u53E6\u5916\uFF0C\u76F4\u63A5\u8C03\u7528 <code>Reflect.apply</code> \u65B9\u6CD5\uFF0C\u4E5F\u4F1A\u88AB\u62E6\u622A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">Reflect</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>proxy<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// 38</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="has" tabindex="-1"><a class="header-anchor" href="#has" aria-hidden="true">#</a> has()</h3><p><code>has</code> \u65B9\u6CD5\u7528\u6765\u62E6\u622A <code>HasProperty</code> \u64CD\u4F5C\uFF0C\u5373\u5224\u65AD\u5BF9\u8C61\u662F\u5426\u5177\u6709\u67D0\u4E2A\u5C5E\u6027\u65F6\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u4F1A\u751F\u6548\u3002\u5178\u578B\u7684\u64CD\u4F5C\u5C31\u662F <code>in</code> \u8FD0\u7B97\u7B26</p><p><code>has</code> \u65B9\u6CD5\u53EF\u4EE5\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\uFF0C\u5206\u522B\u662F\u76EE\u6807\u5BF9\u8C61\u3001\u9700\u67E5\u8BE2\u7684\u5C5E\u6027\u540D</p><p>\u4E0B\u9762\u7684\u4F8B\u5B50\u4F7F\u7528 <code>has</code> \u65B9\u6CD5\u9690\u85CF\u67D0\u4E9B\u5C5E\u6027\uFF0C\u4E0D\u88AB <code>in</code> \u8FD0\u7B97\u7B26\u53D1\u73B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">has</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;_&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> key <span class="token keyword">in</span> target<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> target <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">_prop</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">prop</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token string">&#39;_prop&#39;</span> <span class="token keyword">in</span> proxy <span class="token comment">// false</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,45),r={href:"https://es6.ruanyifeng.com/#docs/proxy",target:"_blank",rel:"noopener noreferrer"},k=c("more");function d(v,m){const s=l("ExternalLinkIcon");return p(),e("div",null,[u,n("blockquote",null,[n("p",null,[n("a",r,[k,t(s)])])])])}var y=a(i,[["render",d],["__file","Proxy.html.vue"]]);export{y as default};
