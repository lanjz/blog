import{_ as n,o as s,c as a,e as t}from"./app-ly5YjvTc.js";const e={},p=t(`<h1 id="换肤" tabindex="-1"><a class="header-anchor" href="#换肤" aria-hidden="true">#</a> 换肤</h1><p>目前换肤方案：</p><ul><li><p>利用 <code>class</code> 命名空间</p></li><li><p>准备多套CSS主题</p></li><li><p>动态换肤</p></li><li><p>CSS变量换肤</p></li></ul><h2 id="利用-class-命名空间" tabindex="-1"><a class="header-anchor" href="#利用-class-命名空间" aria-hidden="true">#</a> 利用 class 命名空间</h2><p>利用 <code>class</code> 名称准备两个主题：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">&lt;style&gt;
  .red-theme p</span><span class="token punctuation">{</span>
    <span class="token selector">color: red
  ｝
  .blue-theme p</span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> blue
  ｝
&lt;/style&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过修改 <code>body</code> 的类名来修改元素的样式</p><h2 id="准备多套css主题" tabindex="-1"><a class="header-anchor" href="#准备多套css主题" aria-hidden="true">#</a> 准备多套CSS主题</h2><ol><li><p>准备多套样式文件</p></li><li><p>页面加载后，根据用户需求加载不同的样式文件</p></li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> link <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;link&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
link<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&#39;text/css&#39;</span><span class="token punctuation">;</span>
link<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">&quot;theme-blue&quot;</span><span class="token punctuation">;</span>  
link<span class="token punctuation">.</span>rel <span class="token operator">=</span> <span class="token string">&#39;stylesheet&#39;</span><span class="token punctuation">;</span>
link<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">&#39;/css/theme-blue.css&#39;</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;head&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>link<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="动态换肤" tabindex="-1"><a class="header-anchor" href="#动态换肤" aria-hidden="true">#</a> 动态换肤</h2><p>生成一套主题，将主题配色配置写在 js 中，在浏览器中用 js 动态修改 <code>style</code> 标签覆盖原有的 CSS。</p><ol><li>准备一套默认 <code>theme.css</code> 样式</li></ol><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* theme.css */</span>
<span class="token selector">.title</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #FF0000
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>准备主题色配置</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> colors <span class="token operator">=</span> <span class="token punctuation">{</span>
     <span class="token literal-property property">red</span><span class="token operator">:</span> <span class="token punctuation">{</span>
       <span class="token literal-property property">themeColor</span><span class="token operator">:</span> <span class="token string">&#39;#FF0000&#39;</span>
     <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token literal-property property">blue</span><span class="token operator">:</span> <span class="token punctuation">{</span>
       <span class="token literal-property property">themeColor</span><span class="token operator">:</span> <span class="token string">&#39;#0000FF&#39;</span>
     <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>异步获取 <code>theme.css</code> ，将颜色值替换为关键词,关键字可以确保以后能多次换色</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> styles <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;theme.css&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resp</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
 <span class="token keyword">const</span> colorMap <span class="token operator">=</span> <span class="token punctuation">{</span>
   <span class="token string-property property">&#39;#FF0000&#39;</span><span class="token operator">:</span> <span class="token string">&#39;themeColor&#39;</span>
 <span class="token punctuation">}</span>
 styles <span class="token operator">=</span> resp<span class="token punctuation">.</span>data
 Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>colorMap<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
   <span class="token keyword">const</span> value <span class="token operator">=</span> colorMap<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
   styles <span class="token operator">=</span> styles<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">&#39;ig&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>style 变为：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">.</span>title <span class="token punctuation">{</span>
  <span class="token literal-property property">color</span><span class="token operator">:</span> theme<span class="token operator">-</span>color
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>把关键词再换回刚刚生成的相应的颜色值，并在页面上添加 style 标签</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// console 中执行 writeNewStyle (styles, colors.blue)  即可变色</span>
 <span class="token keyword">function</span> <span class="token function">writeNewStyle</span> <span class="token punctuation">(</span><span class="token parameter">originalStyle<span class="token punctuation">,</span> colors</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> oldEl <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;temp-style&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> cssText <span class="token operator">=</span> originalStyle
     <span class="token comment">// 替换颜色值</span>
    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>colors<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      cssText <span class="token operator">=</span> cssText<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">&#39;ig&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> colors<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> style <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;style&#39;</span><span class="token punctuation">)</span>
    style<span class="token punctuation">.</span>innerText <span class="token operator">=</span> cssText
    style<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">&#39;temp-style&#39;</span>

    oldEl <span class="token operator">?</span> document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">replaceChild</span><span class="token punctuation">(</span>style<span class="token punctuation">,</span> oldEl<span class="token punctuation">)</span> <span class="token operator">:</span> 
    document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span>  <span class="token comment">// 将style写入页面</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时style 变为：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.title</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token string">&#39;#0000FF&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="css-变量换肤" tabindex="-1"><a class="header-anchor" href="#css-变量换肤" aria-hidden="true">#</a> CSS 变量换肤</h2><p>利用 CSS 变量设置颜色， 用 js 动态修改 CSS 变量，进而换色</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>CSS varies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
      <span class="token selector">:root</span> <span class="token punctuation">{</span>
        <span class="token property">--theme-color</span><span class="token punctuation">:</span> red <span class="token comment">/* css 变量赋值位置 */</span>
      <span class="token punctuation">}</span>
      <span class="token selector">.title</span> <span class="token punctuation">{</span>
        <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--theme-color<span class="token punctuation">)</span> <span class="token comment">/* 用css变量标记颜色 */</span>
      <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>CSS 变量换肤<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
      <span class="token comment">// console 中执行 changceColor(&#39;blue&#39;) 即可变色</span>
      <span class="token keyword">function</span> <span class="token function">changeColor</span><span class="token punctuation">(</span>color <span class="token operator">=</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;--theme-color&quot;</span><span class="token punctuation">,</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>优点：只需一套 CSS 文件； 换肤不需要延迟等候；对浏览器性能要求低；可自动适配多种主题色；</p></li><li><p>缺点： 不支持IE， 2016年前的 chrome，safari</p></li></ul><h2 id="css-in-js" tabindex="-1"><a class="header-anchor" href="#css-in-js" aria-hidden="true">#</a> css in js</h2>`,29),c=[p];function o(l,i){return s(),a("div",null,c)}const r=n(e,[["render",o],["__file","换肤.html.vue"]]);export{r as default};
