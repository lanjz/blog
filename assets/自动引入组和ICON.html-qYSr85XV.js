import{_ as p,r as o,o as c,c as l,b as n,d as s,a as e,e as t}from"./app-VicZdUS9.js";const i="/lanjz/assets/auto-icon-1-4ZcCekvU.png",u="/lanjz/assets/auto-icon-2-mhjc3n9E.png",r={},d=n("h1",{id:"自动引入组件和icon",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#自动引入组件和icon","aria-hidden":"true"},"#"),s(" 自动引入组件和ICON")],-1),k=n("p",null,"当前配置例子以 Vue3(webpack) 为例",-1),v=n("h2",{id:"自动引入icon",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#自动引入icon","aria-hidden":"true"},"#"),s(" 自动引入icon")],-1),m={href:"https://icon-sets.iconify.design/",target:"_blank",rel:"noopener noreferrer"},b=t(`<h3 id="首页-webpack-配置" tabindex="-1"><a class="header-anchor" href="#首页-webpack-配置" aria-hidden="true">#</a> 首页 Webpack 配置</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@vue/cli-service&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> Icons <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;unplugin-icons/webpack&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> IconsResolver <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;unplugin-icons/resolver&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> Components <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;unplugin-vue-components/webpack&#39;</span><span class="token punctuation">)</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>

  <span class="token literal-property property">configureWebpack</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token function">Components</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">resolvers</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token comment">// 自动注册图标组件</span>
          <span class="token function">IconsResolver</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token comment">// 使用element-plus的图标库</span>
            <span class="token comment">// 其他图标库请到 https://icon-sets.iconify.design/</span>
            <span class="token literal-property property">enabledCollections</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;ep&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;carbon&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&#39;icon&#39;</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">Icons</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">autoInstall</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">compiler</span><span class="token operator">:</span> <span class="token string">&#39;vue3&#39;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查找图标" tabindex="-1"><a class="header-anchor" href="#查找图标" aria-hidden="true">#</a> 查找图标</h3>`,3),g={href:"https://icon-sets.iconify.design/",target:"_blank",rel:"noopener noreferrer"},y=t('<p>假如我想用这个 <code>Material Symbols</code> 里的图标</p><p><img src="'+i+'" alt=""></p><p>然后随便选一个图片，底部会出现图标信息</p><p><img src="'+u+`" alt=""></p><p>注意这个图片的名称为 <code>material-symbols:14mp-rounded</code>，冒号前表前的图标集，冒号后表示图标名，这个图标信名称是需要配置到 Webpack 中的，如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token literal-property property">resolvers</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// 自动注册图标组件</span>
    <span class="token function">IconsResolver</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// 使用element-plus的图标库</span>
      <span class="token comment">// 其他图标库请到 https://icon-sets.iconify.design/</span>
      <span class="token literal-property property">enabledCollections</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;ep&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;carbon&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;material-symbols&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 添加 material-symbols</span>
      <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&#39;icon&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用图标" tabindex="-1"><a class="header-anchor" href="#使用图标" aria-hidden="true">#</a> 使用图标</h3><p>然后就可以在项目中使用的，使用的规则为：[prefix]-图标集名称-图标名. 如要使用上面图标时代码就写为： <code>icon-material-symbols-14mp-rounded</code></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>icon-material-symbols-14mp-rounded</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>icon-material-symbols-14mp-rounded</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="自动化引入-vue-常用的-api" tabindex="-1"><a class="header-anchor" href="#自动化引入-vue-常用的-api" aria-hidden="true">#</a> 自动化引入 Vue 常用的 api</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@vue/cli-service&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> Components <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;unplugin-vue-components/webpack&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> ElementPlusResolver <span class="token punctuation">}</span>  <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;unplugin-vue-components/resolvers&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> pathSrc <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;src&#39;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">configureWebpack</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token function">AutoImport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token comment">// 自动导入 Vue 相关函数，如：ref, reactive, toRef 等</span>
        <span class="token literal-property property">imports</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;vue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token comment">// 自动导入 Element Plus 相关函数，如：ElMessage, ElMessageBox... (带样式)</span>
        <span class="token literal-property property">resolvers</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token function">ElementPlusResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dts</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>pathSrc<span class="token punctuation">,</span> <span class="token string">&#39;auto-imports.d.ts&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token comment">// eslint报错解决</span>
        <span class="token literal-property property">eslintrc</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">enabled</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// Default \`false\`</span>
          <span class="token comment">// filepath: &#39;./.eslintrc-auto-import.json&#39;, // Default \`./.eslintrc-auto-import.json\`</span>
          <span class="token comment">// globalsPropValue: true, // Default \`true\`, (true | false | &#39;readonly&#39; | &#39;readable&#39; | &#39;writable&#39; | &#39;writeable&#39;)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">Components</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">resolvers</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token comment">// 自动导入 Element Plus 组件</span>
          <span class="token function">ElementPlusResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ts-类型处理" tabindex="-1"><a class="header-anchor" href="#ts-类型处理" aria-hidden="true">#</a> TS 类型处理</h3><p>上面配置，项目运行后将在 src 目录下生成一个 <code>auto-imports.d.ts</code> 文件，将这个文件配置到 <code>tsconfig.json</code> 的 <code>exclude</code></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// tsconfig.json</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esnext&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;module&quot;</span><span class="token operator">:</span> <span class="token string">&quot;esnext&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;strict&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;jsx&quot;</span><span class="token operator">:</span> <span class="token string">&quot;preserve&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;moduleResolution&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;skipLibCheck&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;esModuleInterop&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;allowSyntheticDefaultImports&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;forceConsistentCasingInFileNames&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;useDefineForClassFields&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;sourceMap&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;baseUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;types&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;webpack-env&quot;</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;paths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;@/*&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token string">&quot;src/*&quot;</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;lib&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token string">&quot;esnext&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;dom&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;dom.iterable&quot;</span><span class="token punctuation">,</span>
      <span class="token string">&quot;scripthost&quot;</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;include&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;src/**/*.ts&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;src/**/*.tsx&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;src/**/*.vue&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;tests/**/*.ts&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;tests/**/*.tsx&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;./src/auto-imports.d.ts&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;exclude&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;node_modules&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="处理-eslint-提示" tabindex="-1"><a class="header-anchor" href="#处理-eslint-提示" aria-hidden="true">#</a> 处理 eslint 提示</h3><p>上面有个 <code>eslintrc</code> 配置，项目运行后将在目录下自动生成一个 <code>.eslintrc-auto-import.json</code> 文件</p><p>然后在 <code>.eslintrc.js</code> 文件中配置上面成的文件名</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// .eslintrc.js</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">env</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">node</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;extends&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&#39;plugin:vue/vue3-essential&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;eslint:recommended&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;@vue/typescript/recommended&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;.eslintrc-auto-import.json&#39;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">parserOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">ecmaVersion</span><span class="token operator">:</span> <span class="token number">2020</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;no-console&#39;</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;warn&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;off&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;no-debugger&#39;</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;production&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;warn&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;off&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样项目就是可以直接 vue 的 api 了</p><h2 id="自动引入-elementui-之后-如何进行进行样式覆盖" tabindex="-1"><a class="header-anchor" href="#自动引入-elementui-之后-如何进行进行样式覆盖" aria-hidden="true">#</a> 自动引入 ElementUI 之后，如何进行进行样式覆盖</h2>`,20),h={href:"https://element-plus.gitee.io/zh-CN/guide/theming.html#%E9%80%9A%E8%BF%87-scss-%E5%8F%98%E9%87%8F",target:"_blank",rel:"noopener noreferrer"},f=t(`<ol><li>新建 <code>element-cover.scss</code> 文件</li></ol><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code>  <span class="token keyword">@forward</span> <span class="token string">&#39;~element-plus/theme-chalk/src/common/var.scss&#39;</span> <span class="token module-modifier keyword">with</span> <span class="token punctuation">(</span>
      <span class="token property"><span class="token variable">$colors</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
          <span class="token string">&#39;primary&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>
          <span class="token string">&#39;base&#39;</span><span class="token punctuation">:</span> green<span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>@forward</code> 语句可以引入另一个模块的所有变量、mixins和函数，将它们直接作为当前模块的 API 暴露出去，而不会真的在当前模块增加代码，而添加 通过 <code>with</code> 函数可以改变模块内部变量的初始值</p><ol start="2"><li><p>配置 vue.config.js</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@vue/cli-service&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> AutoImport <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;unplugin-auto-import/webpack&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> Components <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;unplugin-vue-components/webpack&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> ElementPlus <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;unplugin-element-plus/webpack&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> ElementPlusResolver <span class="token punctuation">}</span>  <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;unplugin-vue-components/resolvers&#39;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">transpileDependencies</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">loaderOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">scss</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">additionalData</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">@use &quot;src/assets/styles/element-ui/element-cover.scss&quot; as *;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">configureWebpack</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token function">AutoImport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token comment">// 注意要添加  importStyle 属性，表示 Element 样式引入方式</span>
        <span class="token literal-property property">resolvers</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token function">ElementPlusResolver</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">importStyle</span><span class="token operator">:</span> <span class="token string">&quot;sass&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">Components</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">resolvers</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token comment">// 注意要添加  importStyle 属性，表示 Element 样式引入方式</span>
          <span class="token function">ElementPlusResolver</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">importStyle</span><span class="token operator">:</span> <span class="token string">&quot;sass&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">ElementPlus</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">useSource</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p><code>css.loaderOptions.scss.additionalData</code> 表示通过给各个 scss 文件头部添加一条导包语句，进而实现将预置好的 scss 变量引入到每个 scss 文件的目的</p><p>配置完之后项目中也不需要手动引入 <code>element-cover.scss</code> 文件</p><p>也就意味着项目中所有的 scss 文件可以直接直接使用 <code>element-cover.scss</code> 中的变量，<strong>包括 vue 文件中 <code>lang=scss</code> 中的样式</strong></p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>style-resources-loader 的配置会与上面的配置冲突，他们功能类似，所以可以不用配置 style-resources-loader</p></div>`,8);function q(_,x){const a=o("ExternalLinkIcon");return c(),l("div",null,[d,k,v,n("p",null,[s("自动引入收录到 "),n("a",m,[s("iconify"),e(a)]),s(" 中的图标")]),b,n("p",null,[s("前往 "),n("a",g,[s("iconify"),e(a)]),s(" 查找图片")]),y,n("p",null,[n("a",h,[s("通过 SCSS 变量"),e(a)]),s(" 进行样式覆盖")]),f])}const j=p(r,[["render",q],["__file","自动引入组和ICON.html.vue"]]);export{j as default};
