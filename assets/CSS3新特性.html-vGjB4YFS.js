import{_ as e,o as i,c as l,e as o}from"./app-tEWqIxV0.js";const d={},c=o('<h1 id="css3新特性" tabindex="-1"><a class="header-anchor" href="#css3新特性" aria-hidden="true">#</a> CSS3新特性</h1><h2 id="布局" tabindex="-1"><a class="header-anchor" href="#布局" aria-hidden="true">#</a> 布局</h2><ul><li><p>flex</p></li><li><p>多列布局（column-count）</p></li><li><p>box-sizing</p></li></ul><h2 id="选择器" tabindex="-1"><a class="header-anchor" href="#选择器" aria-hidden="true">#</a> 选择器</h2><p>CSS3中新添加了很多选择器，解决了很多之前需要用javascript才能解决的布局问题。</p><ul><li><p><code>element1~element2</code>: 选择前面有 <code>element1</code> 元素的每个 <code>element2</code> 元素</p></li><li><p><code>[attribute^=value]</code>: 选择某元素 <code>attribute</code> 属性是以 <code>value</code> 开头的</p></li><li><p><code>[attribute$=value]</code>: 选择某元素 <code>attribute</code> 属性是以 <code>value</code> 结尾的</p></li><li><p><code>[attribute*=value]</code>: 选择某元素 <code>attribute</code> 属性包含 <code>value</code> 字符串的</p></li><li><p><code>E:first-of-type</code>: 选择属于其父元素的首个E元素的每个E元素</p></li><li><p><code>E:last-of-type</code>: 选择属于其父元素的最后E元素的每个E元素。</p></li><li><p><code>E:only-of-type:</code> 选择属于其父元素唯一的E元素的每个E元素。</p></li><li><p><code>E:only-child:</code> 选择属于其父元素的唯一子元素的每个E元素。</p></li><li><p><code>E:nth-child(n):</code> 选择属于其父元素的第n个子元素的每个E元素。</p></li><li><p><code>E:nth-last-child(n):</code> 选择属于其父元素的倒数第n个子元素的每个E元素。</p></li><li><p><code>E:nth-of-type(n):</code> 选择属于其父元素第n个E元素的每个E元素。</p></li><li><p><code>E:nth-last-of-type(n):</code> 选择属于其父元素倒数第n个E元素的每个E元素。</p></li><li><p><code>E:last-child:</code> 选择属于其父元素最后一个子元素每个E元素。</p></li><li><p><code>:root:</code> 选择文档的根元素。</p></li><li><p><code>E:empty:</code> 选择没有子元素的每个E元素（包括文本节点)。</p></li><li><p><code>E:target:</code> 选择当前活动的E元素。</p></li><li><p><code>E:enabled:</code> 选择每个启用的E元素。</p></li><li><p><code>E:disabled:</code> 选择每个禁用的E元素。</p></li><li><p><code>E:checked:</code> 选择每个被选中的E元素。</p></li><li><p><code>E:not(selector):</code> 选择非selector元素的每个元素。</p></li><li><p><code>E::selection:</code> 选择被用户选取的元素部分。</p></li></ul><h2 id="动画" tabindex="-1"><a class="header-anchor" href="#动画" aria-hidden="true">#</a> 动画</h2><ul><li><p>transition</p></li><li><p>transform</p></li><li><p>Animation</p></li></ul><p><strong>文字样式</strong></p><ul><li><p>word-wrap</p></li><li><p>text-overflow</p></li><li><p>text-shadow</p></li><li><p>text-decoration</p></li></ul><h2 id="其它" tabindex="-1"><a class="header-anchor" href="#其它" aria-hidden="true">#</a> 其它</h2><ul><li><p>box-shadow</p></li><li><p>@font-face</p></li><li><p>渐变</p></li></ul><h2 id="布局单位" tabindex="-1"><a class="header-anchor" href="#布局单位" aria-hidden="true">#</a> 布局单位</h2><ul><li><p>vw：根据窗口大小分成100份为基础进行布局</p></li><li><p>rem：根据 HTML <code>font-size</code> 值进行相对转换</p></li><li><p>em: 根据父级 <code>font-size</code> 值进行相对转换</p></li></ul>',14),t=[c];function p(a,n){return i(),l("div",null,t)}const h=e(d,[["render",p],["__file","CSS3新特性.html.vue"]]);export{h as default};
