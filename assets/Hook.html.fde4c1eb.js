import{_ as p,o,c,b as n,a,d as e,e as t,r as l}from"./app.910feec5.js";var i="/lanjz/assets/useState_1.9954381a.png",u="/lanjz/assets/queue_1.75ae7938.png",r="/lanjz/assets/queue_2.122dbcde.png",k="/lanjz/assets/queue_3.a02e811f.png",d="/lanjz/assets/hook.83ea6db5.jpeg",v="/lanjz/assets/useState_2.9dad34fc.png";const m={},b=e(`<h1 id="hook" tabindex="-1"><a class="header-anchor" href="#hook" aria-hidden="true">#</a> Hook</h1><p>Hook \u662F React16 \u5F15\u5165\u7684\u65B0\u7279\u6027\uFF0C \u662F React \u56E2\u961F\u5728 React \u7EC4\u4EF6\u5F00\u53D1\u5B9E\u8DF5\u4E2D\uFF0C\u9010\u6E10\u8BA4\u77E5\u5230\u7684\u4E00\u4E2A\u6539\u8FDB\u70B9\uFF0C\u8FD9\u80CC\u540E\u5176\u5B9E\u6D89\u53CA\u5BF9\u7C7B\u7EC4\u4EF6\u548C\u51FD\u6570\u7EC4\u4EF6\u4E24\u79CD\u7EC4\u4EF6\u5F62\u5F0F\u7684\u601D\u8003\u548C\u4FA7\u91CD\u3002</p><h2 id="\u7C7B\u7EC4\u4EF6vs\u51FD\u6570\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u7EC4\u4EF6vs\u51FD\u6570\u7EC4\u4EF6" aria-hidden="true">#</a> \u7C7B\u7EC4\u4EF6VS\u51FD\u6570\u7EC4\u4EF6</h2><h3 id="\u7C7B\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u7EC4\u4EF6" aria-hidden="true">#</a> \u7C7B\u7EC4\u4EF6</h3><p>\u6240\u8C13\u7C7B\u7EC4\u4EF6\uFF0C\u5C31\u662F\u57FA\u4E8E ES6 Class \u8FD9\u79CD\u5199\u6CD5\uFF0C\u901A\u8FC7\u7EE7\u627F <code>React.Component</code> \u5F97\u6765\u7684 React \u7EC4\u4EF6\u3002\u4EE5\u4E0B\u662F\u4E00\u4E2A\u7C7B\u7EC4\u4EF6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">DemoClass</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  state <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//...</span>
  <span class="token punctuation">}</span>
  <span class="token function-variable function">changeText</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">newText</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">text</span><span class="token operator">:</span> newText
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;demoClass&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>text<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>changeText<span class="token punctuation">}</span><span class="token operator">&gt;</span>\u4FEE\u6539<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u51FA\uFF0CReact \u7C7B\u7EC4\u4EF6\u5185\u90E8\u9884\u7F6E\u4E86\u76F8\u5F53\u591A\u7684\u201C\u73B0\u6210\u7684\u4E1C\u897F\u201D\u7B49\u7740\u6211\u4EEC\u53BB\u8C03\u5EA6/\u5B9A\u5236\uFF0C<code>state</code> \u548C\u751F\u547D\u5468\u671F\u5C31\u662F\u8FD9\u4E9B\u201C\u73B0\u6210\u4E1C\u897F\u201D\u4E2D\u7684\u5178\u578B\u3002\u8981\u60F3\u5F97\u5230\u8FD9\u4E9B\u4E1C\u897F\uFF0C\u96BE\u5EA6\u4E5F\u4E0D\u5927\uFF0C\u53EA\u9700\u8981\u7EE7\u627F\u4E00\u4E2A <code>React.Component</code> \u5373\u53EF\u3002<br> \u5F53\u7136\uFF0C\u8FD9\u4E5F\u662F\u7C7B\u7EC4\u4EF6\u7684\u4E00\u4E2A\u4E0D\u4FBF\uFF0C\u5B83\u592A\u7E41\u6742\u4E86\uFF0C\u5BF9\u4E8E\u89E3\u51B3\u8BB8\u591A\u95EE\u9898\u6765\u8BF4\uFF0C\u7F16\u5199\u4E00\u4E2A\u7C7B\u7EC4\u4EF6\u5B9E\u5728\u662F\u4E00\u4E2A\u8FC7\u4E8E\u590D\u6742\u7684\u59FF\u52BF\u3002\u590D\u6742\u7684\u59FF\u52BF\u5FC5\u7136\u5E26\u6765\u9AD8\u6602\u7684\u7406\u89E3\u6210\u672C\uFF0C\u8FD9\u4E5F\u662F\u6211\u4EEC\u6240\u4E0D\u60F3\u770B\u5230\u7684\u3002\u9664\u6B64\u4E4B\u5916\uFF0C\u7531\u4E8E\u5F00\u53D1\u8005\u7F16\u5199\u7684\u903B\u8F91\u5728\u5C01\u88C5\u540E\u662F\u548C\u7EC4\u4EF6\u7C98\u5728\u4E00\u8D77\u7684\uFF0C\u8FD9\u5C31\u4F7F\u5F97\u7C7B\u7EC4\u4EF6\u5185\u90E8\u7684\u903B\u8F91\u96BE\u4EE5\u5B9E\u73B0\u62C6\u5206\u548C\u590D\u7528</p><h3 id="\u51FD\u6570\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u7EC4\u4EF6" aria-hidden="true">#</a> \u51FD\u6570\u7EC4\u4EF6</h3><p>\u51FD\u6570\u7EC4\u4EF6\u5C31\u662F\u4EE5\u51FD\u6570\u7684\u5F62\u6001\u5B58\u5728\u7684 React \u7EC4\u4EF6\u3002\u65E9\u671F\u5E76\u6CA1\u6709 React-Hooks\uFF0C\u51FD\u6570\u7EC4\u4EF6\u5185\u90E8\u65E0\u6CD5\u5B9A\u4E49\u548C\u7EF4\u62A4 state\uFF0C\u56E0\u6B64\u5B83\u8FD8\u6709\u4E00\u4E2A\u522B\u540D\u53EB\u201C\u65E0\u72B6\u6001\u7EC4\u4EF6\u201D\u3002\u4EE5\u4E0B\u662F\u4E00\u4E2A\u51FD\u6570\u7EC4\u4EF6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">DemoFunction</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> text <span class="token punctuation">}</span> <span class="token operator">=</span> props
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;demoFunction&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u51FD\u6570\u7EC4\u4EF6\u63A5\u6536\u7684\u5185\u5BB9\uFF1A[</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>text<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u76F8\u6BD4\u4E8E\u7C7B\u7EC4\u4EF6\uFF0C\u51FD\u6570\u7EC4\u4EF6\u8089\u773C\u53EF\u89C1\u7684\u7279\u8D28\u81EA\u7136\u5305\u62EC\u8F7B\u91CF\u3001\u7075\u6D3B\u3001\u6613\u4E8E\u7EC4\u7EC7\u548C\u7EF4\u62A4\u3001\u8F83\u4F4E\u7684\u5B66\u4E60\u6210\u672C\u7B49\u3002</p><p>\u901A\u8FC7\u5BF9\u6BD4\uFF0C\u4ECE\u5F62\u6001\u4E0A\u53EF\u4EE5\u5BF9\u4E24\u79CD\u7EC4\u4EF6\u505A\u533A\u5206\uFF0C\u5B83\u4EEC\u4E4B\u95F4\u7684\u533A\u522B\u5982\u4E0B\uFF1A</p><ul><li><p>\u7C7B\u7EC4\u4EF6\u9700\u8981\u7EE7\u627F<code> class</code>\uFF0C\u51FD\u6570\u7EC4\u4EF6\u4E0D\u9700\u8981</p></li><li><p>\u7C7B\u7EC4\u4EF6\u53EF\u4EE5\u8BBF\u95EE\u751F\u547D\u5468\u671F\u65B9\u6CD5\uFF0C\u51FD\u6570\u7EC4\u4EF6\u4E0D\u80FD</p></li><li><p>\u7C7B\u7EC4\u4EF6\u4E2D\u53EF\u4EE5\u83B7\u53D6\u5230\u5B9E\u4F8B\u5316\u540E\u7684 <code>this</code>\uFF0C\u5E76\u57FA\u4E8E\u8FD9\u4E2A <code>this</code> \u505A\u5404\u79CD\u5404\u6837\u7684\u4E8B\u60C5\uFF0C\u800C\u51FD\u6570\u7EC4\u4EF6\u4E0D\u53EF\u4EE5</p></li><li><p>\u7C7B\u7EC4\u4EF6\u4E2D\u53EF\u4EE5\u5B9A\u4E49\u5E76\u7EF4\u62A4\u72B6\u6001 \uFF08state\uFF09\uFF0C\u800C\u51FD\u6570\u7EC4\u4EF6\u4E0D\u53EF\u4EE5</p></li></ul><p>\u6240\u4EE5\u5728 React-Hooks \u51FA\u73B0\u4E4B\u524D\uFF0C\u7C7B\u7EC4\u4EF6\u7684\u80FD\u529B\u8FB9\u754C\u660E\u663E\u5F3A\u4E8E\u51FD\u6570\u7EC4\u4EF6</p><p>\u7EC4\u4EF6\u672C\u8EAB\u7684\u5B9A\u4F4D\u5C31\u662F\u51FD\u6570\uFF0C\u4E00\u4E2A\u8F93\u5165\u6570\u636E\u3001\u8F93\u51FA UI \u7684\u51FD\u6570\u3002\u4F5C\u4E3A\u5F00\u53D1\u8005\uFF0C\u6211\u4EEC\u7F16\u5199\u7684\u662F\u58F0\u660E\u5F0F\u7684\u4EE3\u7801\uFF0C\u800C React \u6846\u67B6\u7684\u4E3B\u8981\u5DE5\u4F5C\uFF0C\u5C31\u662F\u53CA\u65F6\u5730\u628A\u58F0\u660E\u5F0F\u7684\u4EE3\u7801\u8F6C\u6362\u4E3A\u547D\u4EE4\u5F0F\u7684 DOM \u64CD\u4F5C\uFF0C\u628A\u6570\u636E\u5C42\u9762\u7684\u63CF\u8FF0\u6620\u5C04\u5230\u7528\u6237\u53EF\u89C1\u7684 UI \u53D8\u5316\u4E2D\u53BB\u3002<br> \u4F46\u51FD\u6570\u7EC4\u4EF6\u6BD4\u8D77\u7C7B\u7EC4\u4EF6\u5C11\u4E86\u5F88\u591A\u4E1C\u897F\uFF0C\u6BD4\u5982\u751F\u547D\u5468\u671F\u3001\u5BF9 <code>state</code> \u7684\u7BA1\u7406\u7B49\u3002\u8FD9\u5C31\u7ED9\u51FD\u6570\u7EC4\u4EF6\u7684\u4F7F\u7528\u5E26\u6765\u4E86\u975E\u5E38\u591A\u7684\u5C40\u9650\u6027\uFF0C\u5BFC\u81F4\u6211\u4EEC\u5E76\u4E0D\u80FD\u4F7F\u7528\u51FD\u6570\u8FD9\u79CD\u5F62\u5F0F\uFF0C\u5199\u51FA\u4E00\u4E2A\u771F\u6B63\u7684\u5168\u529F\u80FD\u7684\u7EC4\u4EF6\u3002\u800C React-Hooks \u7684\u51FA\u73B0\uFF0C\u5C31\u662F\u4E3A\u4E86\u5E2E\u52A9\u51FD\u6570\u7EC4\u4EF6\u8865\u9F50\u8FD9\u4E9B\uFF08\u76F8\u5BF9\u4E8E\u7C7B\u7EC4\u4EF6\u6765\u8BF4\uFF09\u7F3A\u5931\u7684\u80FD\u529B\u3002</p><p>React-Hooks \u662F\u4E00\u5957\u80FD\u591F\u4F7F\u51FD\u6570\u7EC4\u4EF6\u66F4\u5F3A\u5927\u3001\u66F4\u7075\u6D3B\u7684\u201C\u94A9\u5B50\u201D\u3002</p><h2 id="usestate" tabindex="-1"><a class="header-anchor" href="#usestate" aria-hidden="true">#</a> useState</h2><p>\u4F7F\u7528\u5B98\u65B9\u7684\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">Example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u53EB &quot;count&quot; \u7684 state \u53D8\u91CF</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>You clicked <span class="token punctuation">{</span>count<span class="token punctuation">}</span> times<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
        Click me
      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4F7F\u7528Hook\u4F8B\u5B50 <code>const [count, setCount] = useState(0)</code> \u5305\u542B\u4EE5\u4E0B\u4FE1\u606F\uFF1A</p><ul><li><p>\u58F0\u660E\u4E00\u4E2A\u53EB <code>count</code> \u7684 <code>state</code> \u53D8\u91CF</p></li><li><p>\u8FD9\u4E2A <code>count</code> \u7684\u521D\u59CB\u503C\u662F <code>0</code></p></li><li><p>\u4F7F\u7528 <code>setCount</code> \u65B9\u6CD5\u8FDB\u884C\u4FEE\u6539\u8FD9\u4E2A <code>count</code> \u7684\u503C</p></li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u66F4\u65B0 <code>state</code> \u53D8\u91CF\u7684\u65B9\u6CD5\uFF0C\u5E76\u4E0D\u4F1A\u50CF <code>this.setState</code> \u4E00\u6837\uFF0C\u5408\u5E76 <code>state</code> \u3002\u800C\u662F\u66FF\u6362 <code>state</code> \u53D8\u91CF</p></div><h3 id="\u624B\u5199usestate" tabindex="-1"><a class="header-anchor" href="#\u624B\u5199usestate" aria-hidden="true">#</a> \u624B\u5199useState</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> lastState
<span class="token keyword">function</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token parameter">initState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    lastState <span class="token operator">=</span> lastState <span class="token operator">||</span> initState<span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">setState</span><span class="token punctuation">(</span><span class="token parameter">newState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        lastState <span class="token operator">=</span> newState
        <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>lastState<span class="token punctuation">,</span>setState<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
            <span class="token punctuation">{</span>count<span class="token punctuation">}</span>
            <span class="token operator">&lt;</span>button
                onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                    <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">}</span>
            <span class="token operator">&gt;</span>
                \u589E\u52A0
            <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u65B0\u589E\u65B9\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4EE3\u7801\u6240\u793A\uFF0C\u6211\u4EEC\u81EA\u5DF1\u521B\u5EFA\u4E86\u4E00\u4E2A <code>useState</code> \u65B9\u6CD5</p><ul><li><p>\u5982\u679C\u662F\u7B2C\u4E00\u6B21\u4F7F\u7528\uFF0C\u5219\u53D6 <code>initState</code> \u7684\u503C\uFF0C\u5426\u5219\u5C31\u53D6\u4E0A\u4E00\u6B21\u7684\u503C <code>laststate</code></p></li><li><p>\u5185\u90E8\u521B\u5EFA\u4E86\u4E00\u4E2A <code>setState</code> \u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u7528\u4E8E\u66F4\u65B0 <code>state</code> \u7684\u503C\u548C\u89E6\u53D1 <code>render</code> \u66F4\u65B0</p></li><li><p>\u6700\u540E\u8FD4\u56DE\u4E00\u4E2A <code>lastSate</code> \u5C5E\u6027\u548C <code>setState</code> \u65B9\u6CD5</p></li></ul><p>\u8FD9\u91CC\u53EA\u662F\u7528\u4E86\u4E00\u4E2A <code>useState</code>\uFF0C\u8981\u662F\u6211\u4EEC\u4F7F\u7528\u4E86\u5F88\u591A\u4E2A\u5462\uFF1F\u96BE\u9053\u8981\u58F0\u660E\u5F88\u591A\u4E2A\u5168\u5C40\u53D8\u91CF\u5417\uFF1F\u8FD9\u663E\u7136\u662F\u4E0D\u884C\u7684\uFF0C\u6240\u4EE5\uFF0C\u6211\u4EEC\u53EF\u4EE5\u8BBE\u8BA1\u4E00\u4E2A\u5168\u5C40\u6570\u7EC4\u6765\u4FDD\u5B58\u8FD9\u4E9B <code>state</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> lastState <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> stateIndex <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">function</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token parameter">initState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    lastState<span class="token punctuation">[</span>stateIndex<span class="token punctuation">]</span> <span class="token operator">=</span> lastState<span class="token punctuation">[</span>stateIndex<span class="token punctuation">]</span> <span class="token operator">||</span> initState<span class="token punctuation">;</span>
    <span class="token keyword">const</span> currentIndex <span class="token operator">=</span> stateIndex
    <span class="token keyword">function</span> <span class="token function">setState</span><span class="token punctuation">(</span><span class="token parameter">newState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        lastState<span class="token punctuation">[</span>currentIndex<span class="token punctuation">]</span> <span class="token operator">=</span> newState
        <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>lastState<span class="token punctuation">[</span>stateIndex<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">,</span>setState<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u7684 <code>currentIndex</code> \u662F\u5229\u7528\u4E86\u95ED\u5305\u7684\u601D\u60F3\uFF0C\u5C06\u67D0\u4E2A <code>state</code> \u76F8\u5E94\u7684 <code>index</code> \u8BB0\u5F55\u4E0B\u6765\u4E86</p><h2 id="usestate\u6E90\u7801\u7B80\u6790" tabindex="-1"><a class="header-anchor" href="#usestate\u6E90\u7801\u7B80\u6790" aria-hidden="true">#</a> useState\u6E90\u7801\u7B80\u6790</h2><p>\u9996\u5148\u770B\u4E0B Fiber \u548C hook \u662F\u600E\u4E48\u5BF9\u5E94\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fiberNode <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">tag</span><span class="token operator">:</span> xxx<span class="token punctuation">,</span> <span class="token comment">// \u6807\u8BB0\u4E0D\u540C\u7684\u7EC4\u4EF6\u7C7B\u578B</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> xxx<span class="token punctuation">,</span>
    <span class="token literal-property property">memoizedState</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// hooks</span>
        <span class="token literal-property property">baseState</span><span class="token operator">:</span> xxx<span class="token punctuation">,</span> <span class="token comment">// \u521D\u59CB\u5316 initialState\uFF0C \u6BCF\u6B21 dispatch \u4E4B\u540E\u7684newState</span>
        <span class="token literal-property property">memoizedState</span><span class="token operator">:</span> xxx<span class="token punctuation">,</span> <span class="token comment">// \u4E0A\u6B21\u66F4\u65B0\u5B8C\u4E4B\u540E\u7684\u6700\u7EC8\u503C</span>
        <span class="token literal-property property">queue</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// \u66F4\u65B0\u961F\u5217\uFF0C</span>
            <span class="token literal-property property">lastRenderedReducer</span><span class="token operator">:</span> <span class="token function">basicStateReducer</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token literal-property property">lastRenderedState</span><span class="token operator">:</span> xxx<span class="token punctuation">,</span> <span class="token comment">// \u4E0A\u6B21state\u7684\u503C</span>
            <span class="token literal-property property">pending</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token comment">// \u5B58\u653E\u5373\u5C06\u66F4\u65B0\u7684newState\u4FE1\u606F</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// link\u5230\u4E0B\u4E00\u4E2Ahooks\uFF0C\u901A\u8FC7next\u4E32\u8054\u6BCF\u4E00\u4E2Ahooks</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>useState</code> \u5B9A\u4E49\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token comment">// useState</span>
  <span class="token keyword">function</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token parameter">initialState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> dispatcher <span class="token operator">=</span> <span class="token function">resolveDispatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> dispatcher<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span>initialState<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">resolveDispatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> dispatcher <span class="token operator">=</span> ReactCurrentDispatcher<span class="token punctuation">.</span>current<span class="token punctuation">;</span>
    <span class="token keyword">return</span> dispatcher<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE\u4E0A\u9762\u4EE3\u7801\u53D1\u73B0 <code>useStata(initialState)</code> = <code>ReactCurrentDispatcher.current.userSata(initialState)</code>\uFF0C\u6240\u4EE5\u63A5\u4E0B\u6765\u5C31\u662F\u627E\u627E <code>ReactCurrentDispatcher.current</code> \u662F\u4EC0\u4E48\u4E1C\u897F</p><p>\u770B\u4E0B\u6267\u884C\u5230 <code>useState</code> \u65B9\u6CD5\u65F6\u7684\u6267\u884C\u6808</p><p><img src="`+i+`" alt=""></p><p>\u4E8E\u662F\u5728 <code>renderWithHooks</code> \u65B9\u6CD5\u53D1\u73B0\u4E86\u8FD9\u4E48\u51E0\u884C\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> current<span class="token punctuation">.</span>memoizedState <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u66F4\u65B0\u6E32\u67D3</span>
    ReactCurrentDispatcher<span class="token punctuation">.</span>current <span class="token operator">=</span> HooksDispatcherOnUpdateInDEV<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>hookTypesDev <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u5FFD\u7565</span>
    ReactCurrentDispatcher<span class="token punctuation">.</span>current <span class="token operator">=</span> HooksDispatcherOnMountWithHookTypesInDEV<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u9996\u6B21\u6E32\u67D3</span>
    ReactCurrentDispatcher<span class="token punctuation">.</span>current <span class="token operator">=</span> HooksDispatcherOnMountInDEV<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>HooksDispatcherOnUpdateInDEV</code>\u3001<code>HooksDispatcherOnMountWithHookTypesInDEV</code>\u3001 <code>HooksDispatcherOnMountInDEV</code> \u662F\u957F\u5F97\u5DEE\u4E0D\u591A\u7684\u5BF9\u8C61\uFF0C\u4EE5 <code>HooksDispatcherOnMountInDEV</code> \u4E3A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    HooksDispatcherOnMountInDEV <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">readContext</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> observedBits</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*...*/</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">useCallback</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> observedBits</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*...*/</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">useContext</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> observedBits</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*...*/</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">useEffect</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> observedBits</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*...*/</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">useImperativeHandle</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> observedBits</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*...*/</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">useLayoutEffect</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> observedBits</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*...*/</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">useMemo</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> observedBits</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*...*/</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">useReducer</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> observedBits</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*...*/</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">useRef</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> observedBits</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*...*/</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">useState</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> observedBits</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*...*/</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">useDebugValue</span><span class="token operator">:</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> observedBits</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*...*/</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">useResponder</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> observedBits</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*...*/</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">useDeferredValue</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> observedBits</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*...*/</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">useTransition</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> observedBits</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/*...*/</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E09\u4E2A\u5BF9\u8C61\u7684 <code>key</code> \u662F\u4E00\u6837\u7684\uFF0C\u4E0D\u540C\u7684\u662F\u5177\u4F53\u65B9\u6CD5\u7684\u5B9E\u73B0\uFF0C\u6BD4\u5982 <code>HooksDispatcherOnMountInDEV.useState</code> \u5185\u5BB9\u4E3A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function-variable function">useState</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">initialState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  currentHookNameInDev <span class="token operator">=</span> <span class="token string">&#39;useState&#39;</span><span class="token punctuation">;</span>
  <span class="token function">mountHookTypesDev</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> prevDispatcher <span class="token operator">=</span> ReactCurrentDispatcher<span class="token punctuation">.</span>current<span class="token punctuation">;</span>
  ReactCurrentDispatcher<span class="token punctuation">.</span>current <span class="token operator">=</span> InvalidNestedHooksDispatcherOnMountInDEV<span class="token punctuation">;</span>
  
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">mountState</span><span class="token punctuation">(</span>initialState<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    ReactCurrentDispatcher<span class="token punctuation">.</span>current <span class="token operator">=</span> prevDispatcher<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>HooksDispatcherOnMountWithHookTypesInDEV.useState</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token function-variable function">useState</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">initialState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    currentHookNameInDev <span class="token operator">=</span> <span class="token string">&#39;useState&#39;</span><span class="token punctuation">;</span>
    <span class="token function">warnInvalidHookAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">updateHookTypesDev</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> prevDispatcher <span class="token operator">=</span> ReactCurrentDispatcher<span class="token punctuation">.</span>current<span class="token punctuation">;</span>
    ReactCurrentDispatcher<span class="token punctuation">.</span>current <span class="token operator">=</span> InvalidNestedHooksDispatcherOnUpdateInDEV<span class="token punctuation">;</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">updateState</span><span class="token punctuation">(</span>initialState<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      ReactCurrentDispatcher<span class="token punctuation">.</span>current <span class="token operator">=</span> prevDispatcher<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4EE3\u7801\u6267\u884C\u8FC7\u7A0B\u6839\u636E\u662F\u5426\u9996\u6B21\u6E32\u67D3\u7ED9 <code>ReactCurrentDispatcher.current</code> \u8D4B\u503C\u4E0D\u540C\u7684\u5BF9\u8C61</p><h3 id="\u9996\u6B21\u6E32\u67D3" tabindex="-1"><a class="header-anchor" href="#\u9996\u6B21\u6E32\u67D3" aria-hidden="true">#</a> \u9996\u6B21\u6E32\u67D3</h3><p>\u5148\u770B\u9996\u6B21\u6E32\u67D3\u65F6\u505A\u7684\u4E8B\u60C5\uFF0C\u6B64\u65F6\u7684 <code>useState()</code> \u6267\u884C\u7684\u662F <code>HooksDispatcherOnMountInDEV.useState()</code>\u4EE3\u7801\u4E3A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">mountState</span><span class="token punctuation">(</span><span class="token parameter">initialState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> hook <span class="token operator">=</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u65B0\u7684 Hook\uFF0C\u5E76\u8FD4\u56DE\u5F53\u524D workInProgressHook</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> initialState <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      initialState <span class="token operator">=</span> <span class="token function">initialState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> hook<span class="token punctuation">.</span>baseState <span class="token operator">=</span> initialState<span class="token punctuation">;</span>
    <span class="token keyword">var</span> queue <span class="token operator">=</span> hook<span class="token punctuation">.</span>queue <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">// \u66F4\u65B0\u961F\u5217</span>
      <span class="token literal-property property">pending</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// \u5F85\u66F4\u65B0</span>
      <span class="token literal-property property">dispatch</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// \u66F4\u65B0\u51FD\u6570</span>
      <span class="token literal-property property">lastRenderedReducer</span><span class="token operator">:</span> basicStateReducer<span class="token punctuation">,</span> <span class="token comment">// \u901A\u8FC7\u8FD9\u4E2A\u65B9\u6CD5\u5F97\u5230\u6700\u65B0\u7684state</span>
      <span class="token literal-property property">lastRenderedState</span><span class="token operator">:</span> initialState<span class="token punctuation">,</span> <span class="token comment">// \u6700\u540E\u4E00\u6B21\u7684state</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// dispatchAction\u8D1F\u8D23\u66F4\u65B0 state \u7684\u51FD\u6570</span>
    <span class="token comment">// \u7ED1\u5B9A\u5F53\u524D fiber \u548C queue \u5230 dispatchAction \u4E0A</span>
    <span class="token comment">// currentlyRenderingFiber$1\u662F\u4E00\u4E2A\u5168\u5C40\u53D8\u91CF\uFF0C\u8868\u793A\u5F53\u524D\u6B63\u5728\u6E32\u67D3\u7684Fiber\u8282\u70B9</span>
    <span class="token keyword">var</span> dispatch <span class="token operator">=</span> queue<span class="token punctuation">.</span>dispatch <span class="token operator">=</span> <span class="token function">dispatchAction</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> currentlyRenderingFiber$1<span class="token punctuation">,</span> queue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>hook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>mountWorkInProgressHook</code> \u65B9\u6CD5\u7684\u4F5C\u7528\u662F\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684 hook\uFF0C\u5E76\u8FD4\u56DE\u5F53\u524D <code>workInProgressHook</code> . \u5B9A\u4E49\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> hook <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">memoizedState</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span><span class="token comment">// \u4E0D\u540C\u7684hook\u4FDD\u5B58\u7684\u4E0D\u540C\u503C\uFF0C useState\u4FDD\u5B58\u7684\u662Fstate\uFF1B useEffect\u4FDD\u5B58\u7684\u662Feffect\u5BF9\u8C61</span>
      <span class="token literal-property property">baseState</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// \u6700\u65B0\u7684\u503C</span>
      <span class="token literal-property property">baseQueue</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// \u6700\u65B0\u7684\u961F\u5217</span>
      <span class="token literal-property property">queue</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// \u5F85\u66F4\u65B0\u961F\u5217</span>
      <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// \u6307\u5411\u4E0B\u4E00\u4E2Ahook\u5BF9\u8C61</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
   
    <span class="token comment">// react hooks\u7684\u6570\u636E\u7ED3\u6784\u662F\u94FE\u8868\u7684\u65B9\u5F0F</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>workInProgressHook <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6709\u5728\u7B2C\u4E00\u6B21\u6253\u5F00\u9875\u9762\u7684\u65F6\u5019\uFF0CworkInProgressHook \u4E3A\u7A7A</span>
      currentlyRenderingFiber$1<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> workInProgressHook <span class="token operator">=</span> hook<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5DF2\u7ECF\u5B58\u5728 workInProgressHook \u5C31\u5C06\u65B0\u521B\u5EFA\u7684\u8FD9\u4E2A Hook \u63A5\u5728 workInProgressHook \u7684\u5C3E\u90E8</span>
      workInProgressHook <span class="token operator">=</span> workInProgressHook<span class="token punctuation">.</span>next <span class="token operator">=</span> hook<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> workInProgressHook<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BCF\u6B21 <code>useState</code> \u90FD\u4F1A\u6267\u884C\u4E00\u4E2A <code>mountState</code> \u51FD\u6570\uFF0C\u505A\u4EE5\u4E0B\u4E8B\u60C5\uFF1A</p><ol><li><p>\u90FD\u4F1A\u8C03\u7528 <code>mountWorkInProgressHook</code> \u65B9\u6CD5\u6765\u521B\u5EFA\u4E00\u4E2A hook \u5BF9\u8C61\u5E76\u4FDD\u5B58\u5230 <code>workInProgressHook</code> \u4E2D</p></li><li><p>\u5982\u679C\u9996\u6B21\u521B\u5EFA hook \u5219\u5C06\u5F53\u524D hook \u5BF9\u8C61\u4FDD\u5B58\u5230 <code>currentlyRenderingFiber$1.memoizedState</code> \u4E2D\uFF0C<code>currentlyRenderingFiber$1</code> \u4EE3\u8868\u5373\u5C06\u66F4\u65B0\u7684 Fiber \u8282\u70B9\uFF1B\u5982\u679C\u975E\u9996\u6B21\u521B\u5EFA hook\uFF0C\u5219\u4FDD\u5B58\u5230\u4E0A\u4E00 hook\u7684 <code>next</code> \u5C5E\u6027\u4E2D\uFF0C<strong>\u8FD9\u6837\u591A\u4E2A hook \u5C31\u5F62\u6210\u4E86\u4E00\u4E2A\u94FE\u8868\u7684\u7ED3\u6784</strong></p></li><li><p>\u540C\u65F6 hook \u5BF9\u8C61\u4FDD\u5B58 <code>initialState</code> (useState \u7684\u503C) \u5230 <code>hook.memoizedState = hook.baseState = initialState</code></p></li><li><p>\u7ED9 <code>hook.queue</code> \u8D4B\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> queue <span class="token operator">=</span> hook<span class="token punctuation">.</span>queue <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">// \u66F4\u65B0\u961F\u5217</span>
  <span class="token literal-property property">pending</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// \u5F85\u66F4\u65B0</span>
  <span class="token literal-property property">dispatch</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// \u66F4\u65B0\u51FD\u6570</span>
  <span class="token literal-property property">lastRenderedReducer</span><span class="token operator">:</span> basicStateReducer<span class="token punctuation">,</span> <span class="token comment">// \u5F53\u66F4\u65B0 state \u65F6\u4F1A\u901A\u8FC7\u8FD9\u4E2A\u65B9\u6CD5\u5F97\u5230\u6700\u65B0\u7684state</span>
  <span class="token literal-property property">lastRenderedState</span><span class="token operator">:</span> initialState<span class="token punctuation">,</span> <span class="token comment">// \u6700\u540E\u4E00\u6B21\u7684\u4FDD\u5B58\u7684state\uFF08\u4E0D\u662F\u6B63\u5728\u66F4\u65B0\u7684 state\uFF09</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>\u6700\u540E\u521B\u5EFA\u66F4\u65B0 <code>state</code> \u7684\u51FD\u6570 <code>dispatch</code></p><p><code>var dispatch = queue.dispatch = dispatchAction.bind(null, currentlyRenderingFiber$1, queue);</code></p><h4 id="\u7C9F\u5B50" tabindex="-1"><a class="header-anchor" href="#\u7C9F\u5B50" aria-hidden="true">#</a> \u7C9F\u5B50</h4><p>\u7B2C\u4E00\u6B21 <code>const [name, setName] = useState(&#39;king&#39;)</code>\uFF0C<code>mountWorkInProgressHook()</code> \u540E\uFF0C<code>hook</code> \u7684\u503C\u4E3A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>hook <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">baseQueue</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">baseState</span><span class="token operator">:</span> <span class="token string">&#39;king&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">memoizedState</span><span class="token operator">:</span> <span class="token string">&#39;king&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">queue</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">dispatch</span><span class="token operator">:</span> fucntion<span class="token punctuation">,</span>
            <span class="token literal-property property">lastRenderedReducer</span><span class="token operator">:</span> <span class="token function">basicStateReducer</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token literal-property property">lastRenderedState</span><span class="token operator">:</span> <span class="token string">&#39;king&#39;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">pending</span><span class="token operator">:</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E8C\u6B21 <code>const [count, setCount] = useState(0)\uFF0CmountWorkInProgressHook()</code> \u540E\uFF0C<code>hook</code> \u7684\u503C\u4E3A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>hook <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">baseQueue</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">baseState</span><span class="token operator">:</span> <span class="token string">&#39;king&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">memoizedState</span><span class="token operator">:</span> <span class="token string">&#39;king&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">queue</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">dispatch</span><span class="token operator">:</span> fucntion<span class="token punctuation">,</span>
        <span class="token literal-property property">lastRenderedReducer</span><span class="token operator">:</span> <span class="token function">basicStateReducer</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">lastRenderedState</span><span class="token operator">:</span> <span class="token string">&#39;king&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">pending</span><span class="token operator">:</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">baseQueue</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
        <span class="token literal-property property">baseState</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token literal-property property">memoizedState</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token literal-property property">queue</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">dispatch</span><span class="token operator">:</span> fucntion<span class="token punctuation">,</span>
            <span class="token literal-property property">lastRenderedReducer</span><span class="token operator">:</span> <span class="token function">basicStateReducer</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token literal-property property">lastRenderedState</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token literal-property property">pending</span><span class="token operator">:</span> <span class="token keyword">null</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="dispatch\u9636\u6BB5" tabindex="-1"><a class="header-anchor" href="#dispatch\u9636\u6BB5" aria-hidden="true">#</a> dispatch\u9636\u6BB5</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 15564</span>
<span class="token keyword">function</span> <span class="token function">dispatchAction</span><span class="token punctuation">(</span><span class="token parameter">fiber<span class="token punctuation">,</span> queue<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// action \u5C31\u662F\u4F20\u8FDB\u6765\u8981\u66F4\u65B0\u7684 state-&gt;&#39;queen&#39;</span>
  <span class="token keyword">var</span> update <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">expirationTime</span><span class="token operator">:</span> expirationTime<span class="token punctuation">,</span>
    <span class="token literal-property property">suspenseConfig</span><span class="token operator">:</span> suspenseConfig<span class="token punctuation">,</span>
    <span class="token literal-property property">action</span><span class="token operator">:</span> action<span class="token punctuation">,</span>
    <span class="token literal-property property">eagerReducer</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">eagerState</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token comment">// \u8FD9\u91CC\u7684queue\uFF0C\u662F\u4E4B\u524D\u4F20\u5165\u7684hook\u5BF9\u8C61\u4E2D\u7684queue\uFF0C\u8FD9\u91CC\u4FDD\u7559\u4E86\u4E00\u4E2A\u5F15\u7528\uFF01\uFF01\uFF08\u5373queue\u53D1\u751F\u53D8\u5316\uFF0C\u5F53\u524Dfiber\u8282\u70B9\u7684hook\u6570\u636E\u4E5F\u662F\u540C\u6B65\u53D8\u66F4\u7684\uFF09</span>
  <span class="token keyword">var</span> pending <span class="token operator">=</span> queue<span class="token punctuation">.</span>pending<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>pending <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// This is the first update. Create a circular list.</span>
    update<span class="token punctuation">.</span>next <span class="token operator">=</span> update<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    update<span class="token punctuation">.</span>next <span class="token operator">=</span> pending<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    pending<span class="token punctuation">.</span>next <span class="token operator">=</span> update<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//  \u5C06update\u5BF9\u8C61\u52A0\u81F3hook.queue\u7684\u672B\u5C3Epending\u4E2D</span>
  queue<span class="token punctuation">.</span>pending <span class="token operator">=</span> update<span class="token punctuation">;</span>

  <span class="token keyword">var</span> currentState <span class="token operator">=</span> queue<span class="token punctuation">.</span>lastRenderedState<span class="token punctuation">;</span>
  <span class="token comment">// currentState: king\uFF0Caction: queen</span>
  <span class="token comment">// \u5C06\u65B0\u7684state queen \u8D4B\u503C\u5230 update.eagerState</span>
  <span class="token keyword">var</span> eagerState <span class="token operator">=</span> <span class="token function">lastRenderedReducer</span><span class="token punctuation">(</span>currentState<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span> 
  update<span class="token punctuation">.</span>eagerReducer <span class="token operator">=</span> lastRenderedReducer<span class="token punctuation">;</span>
  update<span class="token punctuation">.</span>eagerState <span class="token operator">=</span> eagerState<span class="token punctuation">;</span>
  <span class="token comment">// ...</span>
  <span class="token function">scheduleWork</span><span class="token punctuation">(</span>fiber<span class="token punctuation">,</span> expirationTime<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u6267\u884C <code>hook</code> \u66F4\u65B0\u7684\u65F6\u5019\uFF0C\u4F1A\u6267\u884C\u4E0A\u9762\u6240\u8BF4\u7684 <code>dispatchAction(fiber, queue, action)</code> \u65B9\u6CD5\uFF0C\u5148\u770B\u4E0B\u53C2\u6570</p><ul><li><p>fiber\uFF1A\u5F53\u524D Fiber \u8282\u70B9</p></li><li><p>queue\uFF1A\u65E7\u7684 hook state \u7684\u4FE1\u606F</p></li><li><p>action\uFF1A\u65B0\u503C</p></li></ul><p>\u51FD\u7EC4\u5185\u4F1A\u4F7F\u7528 <code>action</code> \u521B\u5EFA\u4E00\u4E2A <code>update</code> \u5BF9\u8C61\uFF0C\u6267\u884C\u4EE5\u4E0B\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> pending <span class="token operator">=</span> queue<span class="token punctuation">.</span>pending<span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>pending <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// This is the first update. Create a circular list.</span>
  update<span class="token punctuation">.</span>next <span class="token operator">=</span> update<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  update<span class="token punctuation">.</span>next <span class="token operator">=</span> pending<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
  pending<span class="token punctuation">.</span>next <span class="token operator">=</span> update<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

queue<span class="token punctuation">.</span>pending <span class="token operator">=</span> update<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6BB5\u4EE3\u7801\u770B\u4F8B\u5B50\u6765\u7406\u89E3,\u5047\u8BBE\u6211\u4EEC\u6709\u4EE5\u4E0B\u4EE3\u7801:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> setData<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&#39;first&#39;</span><span class="token punctuation">)</span>
<span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&#39;second&#39;</span><span class="token punctuation">)</span>
<span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&#39;third&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u7B2C\u4E00\u6B21 <code>setData</code> \u540E\uFF0C hooks \u7684\u7ED3\u6784\u5982\u4E0B\u56FE\uFF1A</p><p><img src="`+u+'" alt=""></p><p>\u5728\u7B2C\u4E8C\u6B21 <code>setData</code> \u540E\uFF0C hooks\u7684\u7ED3\u6784\u5982\u4E0B\u56FE\uFF1A</p><p><img src="'+r+'" alt=""></p><p>\u5728\u7B2C\u4E09\u6B21 <code>setData</code> \u540E\uFF0C hooks\u7684\u7ED3\u6784\u5982\u4E0B\u56FE\uFF1A</p><p><img src="'+k+`" alt=""></p><p>\u7136\u540E\u5C06\u65B0\u7684\u72B6\u6001\u548C\u65E7\u7684\u72B6\u6001\u8FDB\u884C\u5BF9\u6BD4\uFF0C\u76F8\u540C\u5219\u9000\u51FA\u91CD\u6E32\u67D3\uFF0C\u4E0D\u540C\u5219\u6267\u884C <code>scheduleWork(fiber, expirationTime)</code> \u5F00\u542F\u91CD\u6E32\u67D3\u4EFB\u52A1,\u7ECF\u8FC7 React \u7684\u8C03\u5EA6\uFF0C\u4F1A\u5E26\u4E0A <code>action</code>\uFF08 <code>setName</code> \u7684\u4F20\u53C2\uFF09\uFF0C\u518D\u6B21\u8FDB\u5165 hook \u7EC4\u4EF6\u6838\u5FC3\u6E32\u67D3\u903B\u8F91\uFF1A<code>renderWithHooks</code></p><h3 id="\u66F4\u65B0" tabindex="-1"><a class="header-anchor" href="#\u66F4\u65B0" aria-hidden="true">#</a> \u66F4\u65B0</h3><p>\u5F53\u6211\u4EEC <code>setName(&#39;queen&#39;)</code> \u4E4B\u540E\uFF0C<code>workInProgressHook</code> \u7684\u503C\u4E3A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>workInProgressHook<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token literal-property property">memoizedState</span><span class="token operator">:</span> <span class="token string">&quot;king&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">baseState</span><span class="token operator">:</span> <span class="token string">&quot;king&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">queue</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token literal-property property">pending</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">&quot;queen&quot;</span><span class="token punctuation">,</span>
            <span class="token literal-property property">eagerState</span><span class="token operator">:</span> <span class="token string">&quot;queen&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4ECE <code>workInProgressHook</code> \u7684\u6570\u636E\u7ED3\u6784\u53EF\u4EE5\u770B\u51FA\uFF0C\u6211\u4EEC\u9700\u8981\u66F4\u65B0\u7684\u503C\u5C31\u5728 queue.pending.eagerState/action\` \u4E2D</p><p>\u56DE\u5230\u6E90\u7801\u4E2D\uFF0C\u7531\u4E8E\u5E76\u975E\u9996\u6B21\u6E32\u67D3\u7EC4\u4EF6, <code>ReactCurrentDispatcher.current</code> \u5C06\u7B49\u4E8E <code>HooksDispatcherOnMountWithHookTypesInDEV</code>\uFF0C\u66F4\u65B0\u9636\u6BB5\u8D4B\u503C <code>HooksDispatcherOnMountWithHookTypesInDEV.useState</code> \u5B9E\u9645\u4E0A\u8C03\u7528\u7684\u662F <code>updateState</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">updateState</span><span class="token punctuation">(</span><span class="token parameter">initialState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">updateReducer</span><span class="token punctuation">(</span>basicStateReducer<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u90E8\u5206\u6E90\u7801\u4EE3\u7801\u5185\u5BB9:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">updateReducer</span><span class="token punctuation">(</span><span class="token parameter">reducer<span class="token punctuation">,</span> initialArg<span class="token punctuation">,</span> init</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u6B63\u5728\u5DE5\u4F5C\u4E2D\u7684 hook</span>
    <span class="token keyword">var</span> hook <span class="token operator">=</span> <span class="token function">updateWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> queue <span class="token operator">=</span> hook<span class="token punctuation">.</span>queue<span class="token punctuation">;</span>
    <span class="token keyword">var</span> pendingQueue <span class="token operator">=</span> queue<span class="token punctuation">.</span>pending
    current<span class="token punctuation">.</span>baseQueue <span class="token operator">=</span> baseQueue <span class="token operator">=</span> pendingQueue<span class="token punctuation">;</span>
    queue<span class="token punctuation">.</span>pending <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> first <span class="token operator">=</span> baseQueue<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token keyword">var</span> newState <span class="token operator">=</span> current<span class="token punctuation">.</span>baseState<span class="token punctuation">;</span>
    <span class="token keyword">var</span> update <span class="token operator">=</span> first<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>update<span class="token punctuation">.</span>eagerReducer <span class="token operator">===</span> reducer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      newState <span class="token operator">=</span> update<span class="token punctuation">.</span>eagerState<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> 
    hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> newState<span class="token punctuation">;</span>
    hook<span class="token punctuation">.</span>baseState <span class="token operator">=</span> newBaseState<span class="token punctuation">;</span>
    <span class="token keyword">var</span> dispatch <span class="token operator">=</span> queue<span class="token punctuation">.</span>dispatch<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span>hook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE[&#39;queen&#39;, dispatch]</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><p>\u7B2C\u4E00\u6B65\u6267\u884C <code>updateWorkInProgressHook()</code>\uFF0C\u83B7\u53D6\u5F53\u524D\u6B63\u5728\u5DE5\u4F5C\u4E2D\u7684 hook</p></li><li><p>\u4ECE <code>queue.pending</code> \u53D6\u5230\u6700\u65B0\u7684 <code>state</code></p></li><li><p>\u6700\u540E\u8FD4\u56DE\u6700\u65B0\u7684 <code>memoizedState</code> \u548C <code>dispatch</code></p></li></ol><h3 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h3><p><img src="`+d+'" alt=""></p>',86),f={href:"https://cloud.tencent.com/developer/article/1784501?from=article.detail.1843869",target:"_blank",rel:"noopener noreferrer"},g=t("react hooks\u6E90\u7801\u5206\u6790\uFF1AuseState"),y=n("br",null,null,-1),h={href:"https://yolkpie.net/2021/02/24/reactHook%E4%B9%8BuseState%E7%9A%84%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/",target:"_blank",rel:"noopener noreferrer"},w=t("reactHook\u4E4BuseState\u7684\u6E90\u7801\u89E3\u6790"),E=e(`<h2 id="useeffect" tabindex="-1"><a class="header-anchor" href="#useeffect" aria-hidden="true">#</a> useEffect</h2><p>useEffect \u53EF\u4EE5\u8BA9\u4F60\u5728\u51FD\u6570\u7EC4\u4EF6\u4E2D\u6267\u884C\u526F\u4F5C\u7528\u64CD\u4F5C</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u6570\u636E\u83B7\u53D6\uFF0C\u8BBE\u7F6E\u8BA2\u9605\u4EE5\u53CA\u624B\u52A8\u66F4\u6539 React \u7EC4\u4EF6\u4E2D\u7684 DOM \u90FD\u5C5E\u4E8E\u526F\u4F5C\u7528</p></div><p>\u5B98\u65B9\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">Example</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">You clicked </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> times</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>You clicked <span class="token punctuation">{</span>count<span class="token punctuation">}</span> times<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
        Click me
      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>useEffect</code> \u7684\u4F5C\u7528\uFF1A</p><ul><li><p>\u544A\u8BC9 React \u7EC4\u4EF6\u9700\u8981\u5728\u6E32\u67D3\u540E\u6267\u884C\u67D0\u4E9B\u64CD\u4F5C</p></li><li><p>\u5E76\u4E14\u5728\u6267\u884C DOM \u66F4\u65B0\u4E4B\u540E\u8C03\u7528\u5B83</p></li></ul><p>\u4ECE\u8FD9\u91CC\u53EF\u4EE5\u770B\u51FA\uFF0C<code>useEffect</code> \u7684\u4F5C\u7528\u76F8\u5F53\u540C\u65F6\u5B9A\u4E49\u4E86 <code>componentDidMount</code> \u548C <code>conponetDidUpdate</code> \u4E24\u4E2A\u751F\u547D\u5468\u671F\u51FD\u6570\uFF0C\u4F8B\u5B50\u4E2D\u6211\u4EEC\u70B9\u51FB\u6309\u94AE\u589E\u52A0\u8BA1\u6570 \u7684\u540C\u65F6\uFF0C\u9875\u9762\u7684 <code>title</code> \u4E5F\u4F1A\u53D1\u751F\u53D8\u5316\uFF0C\u8BF4\u660E\u6BCF\u6B21\u90FD\u4F1A\u6267\u884C <code>useEffect</code> \u4E2D\u7684\u65B9\u6CD5</p><h3 id="\u6E05\u9664-effect" tabindex="-1"><a class="header-anchor" href="#\u6E05\u9664-effect" aria-hidden="true">#</a> \u6E05\u9664 Effect</h3><p>\u5982\u679C\u5E0C\u671B\u6709 <code>componentWillUnMount</code> \u7684\u529F\u80FD\uFF0C\u5728Hook\u4E2D\u7684\u5B9E\u73B0\u65B9\u5F0F\u662F\u5728 <code>useEffect</code> \u65B9\u6CD5\u4E2D\u6DFB\u7F6E\u4E00\u4E2A <code>return function(){}</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7EC4\u4EF6\u6E32\u67D3\u5B8C\u6210\u65F6\u6267\u884C</span>
        <span class="token comment">// do something</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;unMount&#39;</span><span class="token punctuation">)</span> <span class="token comment">// // \u7EC4\u4EF6\u5C06\u5FA1\u8F7D\u65F6\u6267\u884C</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53EA\u5728\u7279\u5B9A\u6761\u4EF6\u4E0B\u6267\u884C-effecthook" tabindex="-1"><a class="header-anchor" href="#\u53EA\u5728\u7279\u5B9A\u6761\u4EF6\u4E0B\u6267\u884C-effecthook" aria-hidden="true">#</a> \u53EA\u5728\u7279\u5B9A\u6761\u4EF6\u4E0B\u6267\u884C effectHook</h3><p>\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\uFF0C\u6BCF\u6B21\u6E32\u67D3\u540E\u90FD\u6267\u884C\u6E05\u7406\u6216\u8005\u6267\u884C <code>effect</code> \u53EF\u80FD\u4F1A\u5BFC\u81F4\u6027\u80FD\u95EE\u9898, \u5728 class \u7EC4\u4EF6\u4E2D\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528 <code>componentDidUpdate</code> \u65B9\u6CD5\u63A7\u5236\u7EC4\u4EF6\u66F4\u65B0\u65F6\u8981\u505A\u7684\u4E8B\u60C5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">componentDidUpdate</span><span class="token punctuation">(</span><span class="token parameter">prevProps<span class="token punctuation">,</span> prevState</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>prevState<span class="token punctuation">.</span>count <span class="token operator">!==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">You clicked </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> times</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 <code>useEffect</code> \u4E2D\uFF0C\u901A\u8FC7\u4F20\u5165\u7B2C\u4E8C\u4E2A\u53C2\u6570\u6765\u5B9E\u73B0\u4E0A\u9762\u7684\u529F\u80FD</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">You clicked </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> times</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u4EC5\u5728 count \u66F4\u6539\u65F6\u66F4\u65B0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u4E2A\u6570\u7EC4\uFF0C\u6570\u7EC4\u4E2D\u5143\u7D20\u53EF\u4EE5\u662F <code>props</code> \u6216 <code>state</code>,\u6DFB\u52A0\u8FD9\u4E2A\u53C2\u6570\u540E\u8868\u793A\u5F53\u524D\u8FD9\u4E2A <code>effect</code> \u53EA\u5728\u8FD9\u4E2A\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u53D1\u751F\u53D8\u5316\u540E\u624D\u6267\u884C\uFF0C \u4F8B\u5B50\u4E2D\u5219\u662F <code>count</code> \u53D1\u751F\u53D8\u5316\u540E\u624D\u4F1A\u6267\u884C <code>effect</code></p><p>\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4E5F\u53EF\u4EE5\u662F <code>props</code> \u4E2D\u7684\u5C5E\u6027</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">You clicked </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>props<span class="token punctuation">.</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> times</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>props<span class="token punctuation">.</span>count<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u4EC5\u5728 count \u66F4\u6539\u65F6\u66F4\u65B0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u90A3\u5982\u4F55\u5B9E\u73B0 <code>componentDidMount</code> \u94A9\u5B50\u53EA\u5728\u7EC4\u4EF6\u6E32\u67D3\u65F6\u6267\u884C\u4E00\u6B21\u7684\u529F\u80FD\uFF1F \u53EA\u9700\u8981\u628A\u7B2C\u4E8C\u4E2A\u53C2\u6570\u8BBE\u4E3A\u4E00\u4E2A\u7A7A\u6570\u7EC4\u5C31\u53EF\u4EE5\u4E86\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">You clicked </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>props<span class="token punctuation">.</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> times</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u53EA\u5728\u7EC4\u4EF6\u6E32\u67D3\u65F6\u6267\u884C\u4E00\u6B21</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="uselayouteffect" tabindex="-1"><a class="header-anchor" href="#uselayouteffect" aria-hidden="true">#</a> useLayoutEffect</h2><p>\u5B98\u65B9\u89E3\u91CA\uFF1A\u4F5C\u7528\u4E0E <code>useEffect</code> \u76F8\u540C\u7C7B\u4F3C\uFF0C\u53EF\u4EE5\u4F7F\u7528\u5B83\u6765\u8BFB\u53D6 DOM \u5E03\u5C40\u5E76\u540C\u6B65\u89E6\u53D1\u91CD\u6E32\u67D3\u3002 \u5728\u6D4F\u89C8\u5668\u6267\u884C\u7ED8\u5236\u4E4B\u524D\uFF0C<code>useLayoutEffect</code> \u5185\u90E8\u7684\u66F4\u65B0\u8BA1\u5212\u5C06\u88AB\u540C\u6B65\u5237\u65B0\uFF08\u4E0D\u662F\u5F88\u660E\u767D\uFF09</p><h2 id="useeffect-uselayouteffect-\u6E90\u7801\u7B80\u6790" tabindex="-1"><a class="header-anchor" href="#useeffect-uselayouteffect-\u6E90\u7801\u7B80\u6790" aria-hidden="true">#</a> useEffect/useLayoutEffect \u6E90\u7801\u7B80\u6790</h2><p>\u8FD9\u4E24\u4E2A hook \u7684\u6E90\u7801\u57FA\u672C\u662F\u5341\u5206\u76F8\u4F3C\u7684\uFF0C\u6240\u4EE5\u653E\u4E00\u8D77\u5206\u6790</p><h3 id="\u9996\u6B21\u6E32\u67D3-1" tabindex="-1"><a class="header-anchor" href="#\u9996\u6B21\u6E32\u67D3-1" aria-hidden="true">#</a> \u9996\u6B21\u6E32\u67D3</h3><p>\u6839\u636E\u4E4B\u524D <code>useState</code> \u7684\u89E3\u8BFB\uFF0C\u5F53\u6211\u4EEC\u6267\u884C <code>useEffect</code>\uFF0C\u4F1A\u7ECF\u8FC7\u4EE5\u4E0B\u65B9\u6CD5\uFF1A <code>useEffect(create, deps) =&gt; mountEffect(create, deps) =&gt; mountEffectImpl(Update | Passive, Passive$1, create, deps)</code></p><p>\u5F53\u6211\u4EEC\u6267\u884C <code>useLayoutEffect</code> \u65F6\uFF0C\u4F1A\u7ECF\u8FC7\u4EE5\u4E0B\u65B9\u6CD5\uFF1A <code>useLayoutEffect(create, deps) =&gt; mountLayoutEffect(create, deps) =&gt; mountEffectImpl(Update, Layout, create, deps)</code></p><p>\u53EF\u4EE5\u53D1\u73B0\u90FD\u4F1A\u6267\u884C <code>mountEffectImpl</code> \u65B9\u6CD5\uFF0C\u53EA\u662F\u524D\u4E24\u4E2A\u53C2\u6570\u4E0D\u540C\uFF0C\u8FD9\u4E24\u4E2A\u4E0D\u540C\u7684\u53C2\u6570\u662F\u7528\u4E8E\u533A\u5206\u662F <code>useEffect</code> \u8FD8\u662F <code>useLayoutEffect</code></p><p><code>mountEffectImpl</code> \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">mountEffectImpl</span><span class="token punctuation">(</span><span class="token parameter">fiberEffectTag<span class="token punctuation">,</span> hookEffectTag<span class="token punctuation">,</span> create<span class="token punctuation">,</span> deps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> hook <span class="token operator">=</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4E5F\u662F\u4F1A\u8C03\u7528 \`mountWorkInProgressHook\` \u65B9\u6CD5\u6765\u521B\u5EFA\u4E00\u4E2A hook \u5BF9\u8C61\u5E76\u4FDD\u5B58\u5230 \`workInProgressHook\` \u4E2D</span>
    <span class="token keyword">var</span> nextDeps <span class="token operator">=</span> deps <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> deps<span class="token punctuation">;</span>
    currentlyRenderingFiber$1<span class="token punctuation">.</span>effectTag <span class="token operator">|=</span> fiberEffectTag<span class="token punctuation">;</span>
    hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> <span class="token function">pushEffect</span><span class="token punctuation">(</span>HasEffect <span class="token operator">|</span> hookEffectTag<span class="token punctuation">,</span> create<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> nextDeps<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u91CD\u70B9\u5728 <code>pushEffect(HasEffect | hookEffectTag, create, undefined, nextDeps)</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">pushEffect</span><span class="token punctuation">(</span><span class="token parameter">tag<span class="token punctuation">,</span> create<span class="token punctuation">,</span> destroy<span class="token punctuation">,</span> deps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> effect <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">tag</span><span class="token operator">:</span> tag<span class="token punctuation">,</span> <span class="token comment">// \u533A\u522B HOOK</span>
      <span class="token literal-property property">create</span><span class="token operator">:</span> create<span class="token punctuation">,</span> <span class="token comment">// useEffect \u7684\u7B2C\u4E00\u4E2A\u53C2\u6570</span>
      <span class="token literal-property property">destroy</span><span class="token operator">:</span> destroy<span class="token punctuation">,</span> <span class="token comment">// \u6B64\u65F6\u4E3Anull</span>
      <span class="token literal-property property">deps</span><span class="token operator">:</span> deps<span class="token punctuation">,</span> <span class="token comment">// useEffect \u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570</span>
      <span class="token comment">// Circular</span>
      <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> componentUpdateQueue <span class="token operator">=</span> currentlyRenderingFiber$1<span class="token punctuation">.</span>updateQueue<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>componentUpdateQueue <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u662F\u7B2C\u4E00\u6B21\u6267\u884C useEffect</span>
      componentUpdateQueue <span class="token operator">=</span> <span class="token function">createFunctionComponentUpdateQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521B\u5EFA\u51FD\u6570\u7EC4\u4EF6\u66F4\u65B0\u961F\u5217</span>
      currentlyRenderingFiber$1<span class="token punctuation">.</span>updateQueue <span class="token operator">=</span> componentUpdateQueue<span class="token punctuation">;</span>
      componentUpdateQueue<span class="token punctuation">.</span>lastEffect <span class="token operator">=</span> effect<span class="token punctuation">.</span>next <span class="token operator">=</span> effect<span class="token punctuation">;</span> <span class="token comment">// \u94FE\u5F0F\u4FDD\u5B58</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u4E0D\u662F\u7B2C\u4E00\u6B21\u6267\u884C useEffect</span>
      <span class="token keyword">var</span> lastEffect <span class="token operator">=</span> componentUpdateQueue<span class="token punctuation">.</span>lastEffect<span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6\u4E0A\u4E00\u4E2A\u7684 effect</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>lastEffect <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        componentUpdateQueue<span class="token punctuation">.</span>lastEffect <span class="token operator">=</span> effect<span class="token punctuation">.</span>next <span class="token operator">=</span> effect<span class="token punctuation">;</span> <span class="token comment">// \u5F53\u505A\u7B2C\u4E00\u6B21\u5904\u7406</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
       <span class="token comment">// \u94FE\u5F0F\u4FDD\u5B58</span>
        <span class="token keyword">var</span> firstEffect <span class="token operator">=</span> lastEffect<span class="token punctuation">.</span>next<span class="token punctuation">;</span> 
        lastEffect<span class="token punctuation">.</span>next <span class="token operator">=</span> effect<span class="token punctuation">;</span>
        effect<span class="token punctuation">.</span>next <span class="token operator">=</span> firstEffect<span class="token punctuation">;</span>
        componentUpdateQueue<span class="token punctuation">.</span>lastEffect <span class="token operator">=</span> effect<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> effect<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>pushEffect</code> \u7684\u4F5C\u7528\u5176\u5B9E\u5C31\u662F\u4EE5\u94FE\u7684\u5F62\u5F0F\u4FDD\u5B58 <code>effect</code> \uFF0C\u76F4\u63A5\u901A\u8FC7\u4E00\u4E2A\u4F8B\u5B50\u6765\u770B\u4E0B\u4FDD\u5B58\u7684\u7ED3\u6784</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token punctuation">[</span>name<span class="token punctuation">,</span> setName<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;lan&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">function</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setName</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token function">setName</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token number">12</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// useEffect-1</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span>
    React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// useEffect-2</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span>div onClick<span class="token operator">=</span><span class="token punctuation">{</span>update<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token operator">-</span><span class="token punctuation">{</span>age<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u524D\u6267\u884C useEffect-1 \u65F6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>updateQueue<span class="token punctuation">.</span>lastEffect <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">create</span><span class="token operator">:</span> <span class="token function">\u0192</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token literal-property property">deps</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;lan&#39;</span><span class="token punctuation">]</span>
  <span class="token literal-property property">destroy</span><span class="token operator">:</span> <span class="token keyword">undefined</span>
  <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">create</span><span class="token operator">:</span> <span class="token function">\u0192</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token literal-property property">deps</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;lan&#39;</span><span class="token punctuation">]</span>
      <span class="token literal-property property">destroy</span><span class="token operator">:</span> <span class="token keyword">undefined</span>
      <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token comment">// \u8FD8\u662F useEffect-1 \u7684 effect</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u524D\u6267\u884C useEffect-2 \u65F6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>updateQueue<span class="token punctuation">.</span>lastEffect <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">create</span><span class="token operator">:</span> <span class="token function">\u0192</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token literal-property property">deps</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token literal-property property">destroy</span><span class="token operator">:</span> <span class="token keyword">undefined</span>
    <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token punctuation">{</span>
         <span class="token literal-property property">create</span><span class="token operator">:</span> <span class="token function">\u0192</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
         <span class="token literal-property property">deps</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
         <span class="token literal-property property">destroy</span><span class="token operator">:</span> <span class="token keyword">undefined</span>
         <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token punctuation">{</span>
             <span class="token literal-property property">create</span><span class="token operator">:</span> <span class="token function">\u0192</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
             <span class="token literal-property property">deps</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;lan&#39;</span><span class="token punctuation">]</span>
             <span class="token literal-property property">destroy</span><span class="token operator">:</span> <span class="token keyword">undefined</span>
             <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token comment">// useEffect-2 \u7684 effect</span>
         <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Fiber.updateQueue.lastEffect</code> \u4E3A\u6700\u540E\u4E00\u4E2A <code>Effect\uFF0ClastEffect.next</code> \u4E3A\u7B2C\u4E00\u4E2A <code>Effect</code></p><h3 id="\u7EC4\u4EF6\u66F4\u65B0" tabindex="-1"><a class="header-anchor" href="#\u7EC4\u4EF6\u66F4\u65B0" aria-hidden="true">#</a> \u7EC4\u4EF6\u66F4\u65B0</h3><p>\u5148\u770B\u4E0B <code>useEffect</code>: <code>HooksDispatcherOnUpdateInDEV.useEffect(create, deps) =&gt; updateEffect(create, deps) =&gt; updateEffectImpl(Update | Passive, Passive$1, create, deps)</code></p><p>\u5BF9\u4E8E <code>useLayoutEffect</code>: <code>HooksDispatcherOnUpdateInDEV.useLayoutEffect(create, deps) =&gt; updateLayoutEffect(create, deps) =&gt; updateEffectImpl(Update, Layout, create, deps)</code></p><p>\u8DDF\u9996\u6B21\u6E32\u67D3\u65F6\u7C7B\u578B\u90FD\u662F\u6267\u884C\u540C\u4E00\u4E2A <code>updateEffectImpl</code>\uFF0C\u540C\u65F6\u4F7F\u7528 <code>tag</code> \u8FDB\u884C\u4E24\u8005\u7684\u533A\u5206</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">updateEffectImpl</span><span class="token punctuation">(</span><span class="token parameter">fiberEffectTag<span class="token punctuation">,</span> hookEffectTag<span class="token punctuation">,</span> create<span class="token punctuation">,</span> deps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> hook <span class="token operator">=</span> <span class="token function">updateWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5F53\u524D\u6B63\u5728\u5904\u7406\u7684 Hook</span>
    <span class="token comment">//  \u83B7\u53D6\u4F9D\u8D56</span>
    <span class="token keyword">var</span> nextDeps <span class="token operator">=</span> deps <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> deps<span class="token punctuation">;</span>
    <span class="token keyword">var</span> destroy <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>currentHook <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> prevEffect <span class="token operator">=</span> currentHook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">;</span>
      destroy <span class="token operator">=</span> prevEffect<span class="token punctuation">.</span>destroy<span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>nextDeps <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> prevDeps <span class="token operator">=</span> prevEffect<span class="token punctuation">.</span>deps<span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">areHookInputsEqual</span><span class="token punctuation">(</span>nextDeps<span class="token punctuation">,</span> prevDeps<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u524D\u540E\u4F9D\u8D56\u7684\u503C\u6CA1\u6709\u53D8\u5316</span>
           <span class="token comment">// \u4F9D\u8D56\u9879\u6CA1\u53D8\u5316\u7684\u65F6\u5019\uFF0CcomponentUpdateQueue\u589E\u52A0\u4E00\u4E2Atag\u4E3ANoHookEffect= 0 \u7684effect</span>
          <span class="token function">pushEffect</span><span class="token punctuation">(</span>hookEffectTag<span class="token punctuation">,</span> create<span class="token punctuation">,</span> destroy<span class="token punctuation">,</span> nextDeps<span class="token punctuation">)</span><span class="token punctuation">;</span> 
          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8DDF\u9996\u6B21\u52A0\u8F7D\u7EC4\u4EF6\u4E00\u6837\u5904\u7406</span>
    currentlyRenderingFiber$1<span class="token punctuation">.</span>effectTag <span class="token operator">|=</span> fiberEffectTag<span class="token punctuation">;</span>
    hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> <span class="token function">pushEffect</span><span class="token punctuation">(</span>HasEffect <span class="token operator">|</span> hookEffectTag<span class="token punctuation">,</span> create<span class="token punctuation">,</span> destroy<span class="token punctuation">,</span> nextDeps<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u66F4\u65B0 effect</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u66F4\u65B0\u9636\u6BB5\u505A\u7684\u4E8B\u60C5\u5C31\u662F\u66F4\u65B0\u4E00\u4E2A <code>effect</code>\uFF0C<strong>\u5982\u679C\u65B0\u65E7\u7684\u4F9D\u8D56\u662F\u4E00\u6837\u7684\u65F6\u5019\uFF0C\u4F1A\u66F4\u65B0\u4E86 <code>effect</code> \u7684 <code>tag</code>\uFF0C\u6807\u8BC6\u8FD9\u4E2A <code>effect</code> \u662F\u4E0D\u7528\u66F4\u65B0\u7684</strong></p><p>\u5230\u76EE\u524D\u4E3A <code>useEffect</code> \u548C <code>useLayoutEffect</code> \u770B\u4E0D\u51FA\u533A\u522B</p><h3 id="commit\u9636\u6BB5" tabindex="-1"><a class="header-anchor" href="#commit\u9636\u6BB5" aria-hidden="true">#</a> commit\u9636\u6BB5</h3><p>\u5F53 workInProgressFiber \u6811\u6784\u5EFA\u5B8C\u6210\uFF0C\u8FDB\u5165 <code>commit</code> \u9636\u6BB5\u540E\uFF0C\u9996\u5148\u4F1A\u6267\u884C <code>commitBeforeMutationEffects</code> \u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">commitBeforeMutationEffects</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7701\u7565\u65E0\u5173\u4EE3\u7801...</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>nextEffect <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> flags <span class="token operator">=</span> nextEffect<span class="token punctuation">.</span>flags<span class="token punctuation">;</span>
    <span class="token comment">// \u5F53flags\u5305\u542BPassive\u65F6\u8868\u793A\u6709\u8C03\u7528useEffect</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>flags <span class="token operator">&amp;</span> Passive<span class="token punctuation">)</span> <span class="token operator">!==</span> NoFlags<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>rootDoesHavePassiveEffects<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5C06\u5168\u5C40\u6807\u8BC6\u8D4B\u503C\u4E3Atrue\uFF0C\u4E00\u4E2A\u5F02\u6B65\u8C03\u5EA6\u5C31\u4F1A\u5904\u7406\u6240\u6709\u7684useEffect\uFF0C\u907F\u514D\u53D1\u8D77\u591A\u4E2A</span>
        rootDoesHavePassiveEffects <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token comment">// \u901A\u8FC7\u8C03\u5EA6\u5668\u53D1\u8D77\u4E00\u4E2A\u5F02\u6B65\u8C03\u5EA6</span>
        <span class="token function">scheduleCallback</span><span class="token punctuation">(</span>NormalSchedulerPriority<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u5904\u7406useEffect</span>
          <span class="token function">flushPassiveEffects</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u904D\u5386\u6709\u526F\u4F5C\u7528\u7684Fiber\u8282\u70B9</span>
    nextEffect <span class="token operator">=</span> nextEffect<span class="token punctuation">.</span>nextEffect<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>commitBeforeMutationEffects</code> \u65B9\u6CD5\u7684\u6838\u5FC3\u5C31\u662F\u901A\u8FC7 <code>scheduleCallback</code> \u53D1\u4E00\u8D77\u5F02\u6B65\u4EFB\u52A1\u6765\u5904\u7406 <code>userEffect</code></p><p><code>flushPassiveEffects</code> \u51FD\u6570\u5185\u90E8\u4F1A\u8C03\u7528 <code>flushPassiveEffectsImpl</code> \u51FD\u6570\uFF0C\u5728\u8FD9\u91CC\u4F1A\u6267\u884C\u56DE\u8C03\u51FD\u6570\u548C\u9500\u6BC1\u51FD\u6570\uFF0C\u56E0\u4E3A\u662F\u5F02\u6B65\u8C03\u5EA6\u7684\uFF0C\u6240\u4EE5\u662F\u5728\u9875\u9762\u6E32\u67D3\u7ED3\u675F\u540E\u6267\u884C\u7684</p><p>\u4E4B\u540E\u8FD8\u4F1A\u6267\u884C <code>commitLayoutEffects</code> \u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">commitLayoutEffects</span><span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> committedExpirationTime</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>nextEffect <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setCurrentFiber</span><span class="token punctuation">(</span>nextEffect<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">var</span> effectTag <span class="token operator">=</span> nextEffect<span class="token punctuation">.</span>effectTag<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>effectTag <span class="token operator">&amp;</span> <span class="token punctuation">(</span>Update <span class="token operator">|</span> Callback<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        <span class="token function">recordEffect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> current <span class="token operator">=</span> nextEffect<span class="token punctuation">.</span>alternate<span class="token punctuation">;</span>
        <span class="token function">commitLifeCycles</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> current<span class="token punctuation">,</span> nextEffect<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD9\u91CC\u9762\u4F1A\u6267\u884C useLayoutEffect</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>effectTag <span class="token operator">&amp;</span> Ref<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">recordEffect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">commitAttachRef</span><span class="token punctuation">(</span>nextEffect<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token function">resetCurrentFiber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      nextEffect <span class="token operator">=</span> nextEffect<span class="token punctuation">.</span>nextEffect<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>commitLayoutEffects</code> \u51FD\u6570\u4E2D\u4F1A\u540C\u6B65\u6267\u884C\u7684 <code>commitLifeCycles(root, current, nextEffect)</code> \u4E5F\u5C31\u662F\u540C\u6B65\u6267\u884C <code>useLayoutEffect Hook</code> \uFF0C\u4ECE\u8FD9\u91CC\u5C31\u81F3\u5C11\u53EF\u4EE5\u77E5\u9053 <code>useLayoutEffect</code> \u662F\u5148\u4E8E <code>useEffect</code> \u6267\u884C\u7684<br> \u4E4B\u540E\u5F53\u9875\u9762\u89C6\u56FE\u66F4\u65B0\u540E\u6267\u884C\u4E0A\u6587\u4E2D\u7684 <code>scheduleCallback</code> \u65B9\u6CD5\u4E2D\u5F02\u6B65\u4EFB\u52A1\uFF0C\u8FD9\u4E2A\u4EFB\u52A1\u4F1A\u6267\u884C <code>commitPassiveHookEffects</code> \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">commitPassiveHookEffects</span><span class="token punctuation">(</span><span class="token parameter">finishedWork</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>finishedWork<span class="token punctuation">.</span>effectTag <span class="token operator">&amp;</span> Passive<span class="token punctuation">)</span> <span class="token operator">!==</span> NoEffect<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">switch</span> <span class="token punctuation">(</span>finishedWork<span class="token punctuation">.</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token literal-property property">FunctionComponent</span><span class="token operator">:</span>
        <span class="token keyword">case</span> <span class="token literal-property property">ForwardRef</span><span class="token operator">:</span>
        <span class="token keyword">case</span> <span class="token literal-property property">SimpleMemoComponent</span><span class="token operator">:</span>
        <span class="token keyword">case</span> <span class="token literal-property property">Block</span><span class="token operator">:</span>
        <span class="token punctuation">{</span>
          <span class="token function">commitHookEffectListUnmount</span><span class="token punctuation">(</span>Passive$1 <span class="token operator">|</span> HasEffect<span class="token punctuation">,</span> finishedWork<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">commitHookEffectListMount</span><span class="token punctuation">(</span>Passive$1 <span class="token operator">|</span> HasEffect<span class="token punctuation">,</span> finishedWork<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">commitHookEffectListUnmount</span><span class="token punctuation">(</span><span class="token parameter">tag<span class="token punctuation">,</span> finishedWork</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> updateQueue <span class="token operator">=</span> finishedWork<span class="token punctuation">.</span>updateQueue<span class="token punctuation">;</span>
    <span class="token keyword">var</span> lastEffect <span class="token operator">=</span> updateQueue <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">?</span> updateQueue<span class="token punctuation">.</span>lastEffect <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token comment">// \u904D\u5386\u5378\u8F7D\u7EC4\u65F6\u7684\u56DE\u8C03\u7528\uFF0C\u6709\u56DE\u8C03\u5219\u6267\u884C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>lastEffect <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> firstEffect <span class="token operator">=</span> lastEffect<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token keyword">var</span> effect <span class="token operator">=</span> firstEffect<span class="token punctuation">;</span>

      <span class="token keyword">do</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>effect<span class="token punctuation">.</span>tag <span class="token operator">&amp;</span> tag<span class="token punctuation">)</span> <span class="token operator">===</span> tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">var</span> destroy <span class="token operator">=</span> effect<span class="token punctuation">.</span>destroy<span class="token punctuation">;</span>
          effect<span class="token punctuation">.</span>destroy <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>destroy <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        effect <span class="token operator">=</span> effect<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>effect <span class="token operator">!==</span> firstEffect<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">commitHookEffectListMount</span><span class="token punctuation">(</span><span class="token parameter">tag<span class="token punctuation">,</span> finishedWork</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> updateQueue <span class="token operator">=</span> finishedWork<span class="token punctuation">.</span>updateQueue<span class="token punctuation">;</span>
    <span class="token keyword">var</span> lastEffect <span class="token operator">=</span> updateQueue <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">?</span> updateQueue<span class="token punctuation">.</span>lastEffect <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
     
    <span class="token keyword">if</span> <span class="token punctuation">(</span>lastEffect <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> firstEffect <span class="token operator">=</span> lastEffect<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token keyword">var</span> effect <span class="token operator">=</span> firstEffect<span class="token punctuation">;</span>
      <span class="token comment">// \u904D\u5386 effect\uFF0C\u6267\u884C useEffect \u65B9\u6CD5</span>
      <span class="token keyword">do</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>effect<span class="token punctuation">.</span>tag <span class="token operator">&amp;</span> tag<span class="token punctuation">)</span> <span class="token operator">===</span> tag<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u8FD9\u91CC\u901A\u8FC7 effect.tag \u5224\u65AD\u662F\u5426\u8981\u8BB0\u5F55 useEffect \u65B9\u6CD5</span>
          <span class="token comment">// Mount</span>
          <span class="token keyword">var</span> create <span class="token operator">=</span> effect<span class="token punctuation">.</span>create<span class="token punctuation">;</span>
          effect<span class="token punctuation">.</span>destroy <span class="token operator">=</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        effect <span class="token operator">=</span> effect<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>effect <span class="token operator">!==</span> firstEffect<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>commitHookEffectListUnmount</code> \u548C <code>commitHookEffectListMount</code> \u4E24\u4E2A\u65B9\u6CD5\u5C31\u662F\u904D\u5386\u7EC4\u4EF6\u4F9D\u6B21\u6267\u884C\u5378\u8F7D\u65F6 <code>effect</code> \u7684\u56DE\u8C03\u548C <code>effect</code> \u65B9\u6CD5</p><p><strong>useLayoutEffect \u7684\u9500\u6BC1\u65F6\u673A</strong></p><p><code>useLayoutEffect</code> \u9500\u6BC1\u51FD\u6570\u7684\u6267\u884C\u5728 Mutation \u9636\u6BB5\uFF0CMutation \u9636\u6BB5\u4F1A\u6267\u884C <code>commitMutationEffects</code> \u51FD\u6570\uFF0C\u51FD\u6570\u5185\u90E8\u4F1A\u5BF9 <code>flags</code> \u5305\u542B Update \u7684 Fiber \u8282\u70B9\u518D\u6267\u884C <code>commitWork</code> \u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">commitWork</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">current</span><span class="token operator">:</span> Fiber <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token literal-property property">finishedWork</span><span class="token operator">:</span> Fiber</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>finishedWork<span class="token punctuation">.</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token literal-property property">FunctionComponent</span><span class="token operator">:</span>
    <span class="token keyword">case</span> <span class="token literal-property property">ForwardRef</span><span class="token operator">:</span>
    <span class="token keyword">case</span> <span class="token literal-property property">MemoComponent</span><span class="token operator">:</span>
    <span class="token keyword">case</span> <span class="token literal-property property">SimpleMemoComponent</span><span class="token operator">:</span>
    <span class="token keyword">case</span> <span class="token literal-property property">Block</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6267\u884CuseLayoutEffect\u7684\u9500\u6BC1\u51FD\u6570</span>
      <span class="token function">commitHookEffectListUnmount</span><span class="token punctuation">(</span>HookLayout <span class="token operator">|</span> HookHasEffect<span class="token punctuation">,</span> finishedWork<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,61),x={href:"https://www.qiyuandi.com/zhanzhang/zonghe/13075.html",target:"_blank",rel:"noopener noreferrer"},S=t("useEffect\u548CuseLayoutEffect\u6E90\u7801\u6D45\u6790"),j=e(`<h3 id="\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u5C0F\u7ED3" aria-hidden="true">#</a> \u5C0F\u7ED3</h3><p><code>useEffect</code> \u548C <code>useLayoutEffect</code> \u7684\u51FD\u6570\u672C\u8EAB\u5728 <code>Mount</code> \u548C <code>Update</code> \u65F6\u8C03\u7528\u7684\u90FD\u662F\u76F8\u540C\u7684\u51FD\u6570\uFF0C\u4EC5\u53C2\u6570\u4E0D\u540C\uFF0C\u6700\u5927\u7684\u533A\u522B\u5728\u4E8E <code>useEffect</code> \u662F\u5F02\u6B65\u6267\u884C\uFF0C<code>useLayoutEffect</code> \u662F\u540C\u6B65\u6267\u884C</p><p><code>useEffect</code> \u548C <code>useLayoutEffect</code> \u6240\u4F7F\u7528\u7684 Effect \u5BF9\u8C61\u50A8\u5B58\u5728\u51FD\u6570\u7EC4\u4EF6\u7684 Fiber \u8282\u70B9\u7684 <code>updateQueue</code> \u4E2D\uFF0C\u5B83\u662F\u4E00\u4E2A\u5355\u5411\u73AF\u5F62\u94FE\u8868\uFF0C<code>updateQueue.lastEffect</code> \u4E3A\u6700\u540E\u7684 Effect \u5BF9\u8C61\uFF0C<code>lastEffect.next</code> \u4E3A\u7B2C\u4E00\u4E2A Effect \u5BF9\u8C61\uFF0C\u540C\u65F6\u4E3A\u4E86\u7EF4\u62A4\u51FD\u6570\u7EC4\u4EF6\u7684 Hooks \u94FE\u8868\uFF0CEffect \u5BF9\u8C61\u4E5F\u540C\u65F6\u88AB\u6DFB\u52A0\u5230\u4E86 Fiber \u8282\u70B9\u7684 <code>memorizedState</code> \u5C5E\u6027\u4E2D</p><p>Effect \u5BF9\u8C61\u901A\u8FC7 <code>tag</code> \u5B57\u6BB5\u533A\u5206\u662F <code>useEffect</code> \u8FD8\u662F <code>useLayoutEffect</code></p><p>\u5728Fiber\u6811\u7684 render \u9636\u6BB5\u5B58\u50A8 Hook</p><p>\u5728 commit \u9636\u6BB5\uFF0C\u5148\u901A\u8FC7 <code>commitBeforeMutationEffects</code> \u51FD\u6570\u53D1\u8D77\u5F02\u6B65\u8C03\u5EA6\uFF0C\u7136\u540E\u540C\u6B65\u6267\u884C <code>useLayoutEffect</code>\uFF0C\u6700\u540E\u5728\u89C6\u56FE\u66F4\u65B0\u540E\u518D\u6267\u884C <code>useEffect</code></p><p><strong><code>useLayoutEffect</code>\u548C<code>useEffect</code></strong> \u7684\u533A\u522B</p><p>\u901A\u8FC7 React \u7684\u66F4\u65B0\u8FC7\u7A0B\u6765\u7406\u89E3\u4E00\u4E0B\u4E24\u8005\u7684\u533A\u522B</p><ol><li><p>react \u5728 diff \u540E\uFF0C\u4F1A\u8FDB\u5165\u5230 commit \u9636\u6BB5\uFF0C\u51C6\u5907\u628A\u865A\u62DF DOM \u53D1\u751F\u7684\u53D8\u5316\u6620\u5C04\u5230\u771F\u5B9E DOM \u4E0A</p></li><li><p>\u5728 commit \u9636\u6BB5\u7684\u524D\u671F\uFF0C\u4F1A\u8C03\u7528\u4E00\u4E9B\u751F\u547D\u5468\u671F\u65B9\u6CD5\uFF0C\u5BF9\u4E8E\u7C7B\u7EC4\u4EF6\u6765\u8BF4\uFF0C\u9700\u8981\u89E6\u53D1\u7EC4\u4EF6\u7684 <code>getSnapshotBeforeUpdate</code> \u751F\u547D\u5468\u671F\uFF0C\u5BF9\u4E8E\u51FD\u6570\u7EC4\u4EF6\uFF0C\u6B64\u65F6\u4F1A\u8C03\u5EA6 <code>useEffect</code> \u7684 <code>create destroy</code> \u51FD\u6570</p></li><li><p>\u6CE8\u610F\u662F\u8C03\u5EA6\uFF0C\u4E0D\u662F\u6267\u884C\u3002\u5728\u8FD9\u4E2A\u9636\u6BB5\uFF0C\u4F1A\u628A\u4F7F\u7528\u4E86 <code>useEffect</code> \u7EC4\u4EF6\u4EA7\u751F\u7684\u751F\u547D\u5468\u671F\u51FD\u6570\u5165\u5217\u5230 React \u81EA\u5DF1\u7EF4\u62A4\u7684\u8C03\u5EA6\u961F\u5217\u4E2D\uFF0C\u7ED9\u4E88\u4E00\u4E2A\u666E\u901A\u7684\u4F18\u5148\u7EA7\uFF0C\u8BA9\u8FD9\u4E9B\u751F\u547D\u5468\u671F\u51FD\u6570\u5F02\u6B65\u6267\u884C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u53EF\u4EE5\u8FD1\u4F3C\u7684\u8BA4\u4E3A\uFF0CReact \u505A\u4E86\u8FD9\u6837\u4E00\u6B65\uFF0C\u5B9E\u9645\u6D41\u7A0B\u4E2D\u8981\u590D\u6742\u7684\u591A</span>
 <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
 <span class="token keyword">const</span> preDestory <span class="token operator">=</span> element<span class="token punctuation">.</span>destroy<span class="token punctuation">;</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>preDestory<span class="token punctuation">)</span> <span class="token function">prevDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">const</span> destroy <span class="token operator">=</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 element<span class="token punctuation">.</span>destroy<span class="token operator">=</span> destroy<span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u968F\u540E\uFF0C\u5C31\u5230\u4E86 React \u628A\u865A\u62DF DOM \u8BBE\u7F6E\u5230\u771F\u5B9E DOM \u4E0A\u7684\u9636\u6BB5\uFF0C\u8FD9\u4E2A\u9636\u6BB5\u4E3B\u8981\u8C03\u7528\u7684\u51FD\u6570\u662F <code>commitWork</code>\uFF0C<code>commitWork</code> \u51FD\u6570\u4F1A\u9488\u5BF9\u4E0D\u540C\u7684 fiber \u8282\u70B9\u8C03\u7528\u4E0D\u540C\u7684 DOM \u7684\u4FEE\u6539\u65B9\u6CD5\uFF0C\u6BD4\u5982\u6587\u672C\u8282\u70B9\u548C\u5143\u7D20\u8282\u70B9\u7684\u4FEE\u6539\u65B9\u6CD5\u662F\u4E0D\u4E00\u6837\u7684</p></li><li><p><code>commitWork</code> \u5982\u679C\u9047\u5230\u4E86\u7C7B\u7EC4\u4EF6\u7684 fiber \u8282\u70B9\uFF0C\u4E0D\u4F1A\u505A\u4EFB\u4F55\u64CD\u4F5C\uFF0C\u4F1A\u76F4\u63A5 <code>return</code>\uFF0C\u8FDB\u884C\u6536\u5C3E\u5DE5\u4F5C\uFF0C\u7136\u540E\u53BB\u5904\u7406\u4E0B\u4E00\u4E2A\u8282\u70B9\uFF0C\u8FD9\u70B9\u5F88\u5BB9\u6613\u7406\u89E3\uFF0C\u7C7B\u7EC4\u4EF6\u7684 fiber \u8282\u70B9\u6CA1\u6709\u5BF9\u5E94\u7684\u771F\u5B9E DOM \u7ED3\u6784\uFF0C\u6240\u4EE5\u5C31\u6CA1\u6709\u76F8\u5173\u64CD\u4F5C</p></li><li><p>\u4F46\u5728\u6709\u4E86 hooks \u4EE5\u540E\uFF0C\u51FD\u6570\u7EC4\u4EF6\u5728\u8FD9\u4E2A\u9636\u6BB5\uFF0C\u4F1A\u540C\u6B65\u8C03\u7528\u4E0A\u4E00\u6B21\u6E32\u67D3\u65F6 <code>useLayoutEffect(create, deps) create</code> \u51FD\u6570\u8FD4\u56DE\u7684 <code>destroy</code> \u51FD\u6570</p></li><li><p>\u6CE8\u610F\u4E00\u4E2A\u8282\u70B9\u5728 <code>commitWork</code> \u540E\uFF0C\u8FD9\u4E2A\u65F6\u5019\uFF0C\u6211\u4EEC\u5DF2\u7ECF\u628A\u53D1\u751F\u7684\u53D8\u5316\u6620\u5C04\u5230\u771F\u5B9E DOM \u4E0A\u4E86</p></li><li><p><strong>\u4F46\u7531\u4E8E JS \u7EBF\u7A0B\u548C\u6D4F\u89C8\u5668\u6E32\u67D3\u7EBF\u7A0B\u662F\u4E92\u65A5\u7684\uFF0C\u56E0\u4E3A JS \u865A\u62DF\u673A\u8FD8\u5728\u8FD0\u884C\uFF0C\u5373\u4F7F\u5185\u5B58\u4E2D\u7684\u771F\u5B9E DOM \u5DF2\u7ECF\u53D8\u5316\uFF0C\u6D4F\u89C8\u5668\u4E5F\u6CA1\u6709\u7ACB\u523B\u6E32\u67D3\u5230\u5C4F\u5E55\u4E0A</strong></p></li><li><p>\u6B64\u65F6\u4F1A\u8FDB\u884C\u6536\u5C3E\u5DE5\u4F5C\uFF0C\u540C\u6B65\u6267\u884C\u5BF9\u5E94\u7684\u751F\u547D\u5468\u671F\u65B9\u6CD5\uFF0C\u6211\u4EEC\u8BF4\u7684 <code>componentDidMount</code>\uFF0C<code>componentDidUpdate</code> \u4EE5\u53CA <code>useLayoutEffect(create, deps)</code> \u7684 <code>create</code> \u51FD\u6570\u90FD\u662F\u5728\u8FD9\u4E2A\u9636\u6BB5\u88AB\u540C\u6B65\u6267\u884C</p></li><li><p>\u5BF9\u4E8E react \u6765\u8BF4\uFF0Ccommit \u9636\u6BB5\u662F\u4E0D\u53EF\u6253\u65AD\u7684\uFF0C\u4F1A\u4E00\u6B21\u6027\u628A\u6240\u6709\u9700\u8981 commit \u7684\u8282\u70B9\u5168\u90E8 commit \u5B8C\uFF0C\u81F3\u6B64 react \u66F4\u65B0\u5B8C\u6BD5\uFF0CJS \u505C\u6B62\u6267\u884C</p></li><li><p>\u6D4F\u89C8\u5668\u628A\u53D1\u751F\u53D8\u5316\u7684 DOM \u6E32\u67D3\u5230\u5C4F\u5E55\u4E0A\uFF0C\u5230\u6B64\u4E3A\u6B62 react \u4EC5\u7528\u4E00\u6B21\u56DE\u6D41\u3001\u91CD\u7ED8\u7684\u4EE3\u4EF7\uFF0C\u5C31\u628A\u6240\u6709\u9700\u8981\u66F4\u65B0\u7684 DOM \u8282\u70B9\u5168\u90E8\u66F4\u65B0\u5B8C\u6210</p></li><li><p>\u6D4F\u89C8\u5668\u6E32\u67D3\u5B8C\u6210\u540E\uFF0C\u6D4F\u89C8\u5668\u901A\u77E5 react \u81EA\u5DF1\u5904\u4E8E\u7A7A\u95F2\u9636\u6BB5\uFF0Creact \u5F00\u59CB\u6267\u884C\u81EA\u5DF1\u8C03\u5EA6\u961F\u5217\u4E2D\u7684\u4EFB\u52A1\uFF0C\u6B64\u65F6\u624D\u5F00\u59CB\u6267\u884C <code>useEffect(create, deps)</code> \u7684\u4EA7\u751F\u7684\u51FD\u6570</p></li></ol><p><strong>\u7B80\u5355\u6765\u8BF4\u5C31\u662F\u8C03\u7528\u65F6\u673A\u4E0D\u540C</strong></p><ul><li><p><code>useLayoutEffect</code> \u548C\u539F\u6765 <code>componentDidMount</code> &amp; <code>componentDidUpdate</code>\u4E00\u81F4</p></li><li><p>\u5728 <code>react</code> \u5B8C\u6210DOM\u66F4\u65B0\u64CD\u4F5C\u540E\u9A6C\u4E0A\u540C\u6B65\u8C03\u7528\u7684 <code>useLayoutEffect</code> \u4EE3\u7801\uFF0C\u4F1A\u963B\u585E\u9875\u9762\u6E32\u67D3</p></li><li><p>\u800C <code>useEffect</code> \u662F\u4F1A\u5728\u6574\u4E2A\u9875\u9762\u6E32\u67D3\u5B8C\u624D\u4F1A\u8C03\u7528\u7684\u4EE3\u7801</p></li></ul><p><strong>useEffect \u548C useLayoutEffect \u54EA\u4E00\u4E2A\u4E0E componentWillUnmount \u7684\u662F\u7B49\u4EF7\u7684\uFF1F</strong></p><p><code>useLayoutEffect</code> \u7684 <code>detroy</code> \u51FD\u6570\u7684\u8C03\u7528\u4F4D\u7F6E\u3001\u65F6\u673A\u4E0E <code>componentWillUnmount</code> \u4E00\u81F4\uFF0C\u4E14\u90FD\u662F\u540C\u6B65\u8C03\u7528\u3002<code>useEffect</code> \u7684 <code>detroy</code> \u51FD\u6570\u4ECE\u8C03\u7528\u65F6\u673A\u4E0A\u6765\u770B\uFF0C\u66F4\u50CF\u662F <code>componentDidUnmount</code></p><p><strong>\u4E3A\u4EC0\u4E48\u5EFA\u8BAE\u5C06\u4FEE\u6539 DOM \u7684\u64CD\u4F5C\u91CC\u653E\u5230 useLayoutEffect \u91CC\uFF0C\u800C\u4E0D\u662F useEffect</strong></p><p>\u53EF\u4EE5\u770B\u5230\u5728\u6D41\u7A0B9/10\u671F\u95F4\uFF0CDOM \u5DF2\u7ECF\u88AB\u4FEE\u6539\uFF0C\u4F46\u4F46\u6D4F\u89C8\u5668\u6E32\u67D3\u7EBF\u7A0B\u4F9D\u65E7\u5904\u4E8E\u88AB\u963B\u585E\u9636\u6BB5\uFF0C\u6240\u4EE5\u8FD8\u6CA1\u6709\u53D1\u751F\u56DE\u6D41\u3001\u91CD\u7ED8\u8FC7\u7A0B\u3002\u7531\u4E8E\u5185\u5B58\u4E2D\u7684 DOM \u5DF2\u7ECF\u88AB\u4FEE\u6539\uFF0C\u901A\u8FC7 <code>useLayoutEffect</code> \u53EF\u4EE5\u62FF\u5230\u6700\u65B0\u7684 DOM \u8282\u70B9\uFF0C\u5E76\u4E14\u5728\u6B64\u65F6\u5BF9 DOM \u8FDB\u884C\u6837\u5F0F\u4E0A\u7684\u4FEE\u6539\uFF0C\u5047\u8BBE\u4FEE\u6539\u4E86\u5143\u7D20\u7684 <code>height</code>\uFF0C\u8FD9\u4E9B\u4FEE\u6539\u4F1A\u5728\u6B65\u9AA4 11 \u548C react \u505A\u51FA\u7684\u66F4\u6539\u4E00\u8D77\u88AB\u4E00\u6B21\u6027\u6E32\u67D3\u5230\u5C4F\u5E55\u4E0A\uFF0C\u4F9D\u65E7\u53EA\u6709\u4E00\u6B21\u56DE\u6D41\u3001\u91CD\u7ED8\u7684\u4EE3\u4EF7\u3002<br> \u5982\u679C\u653E\u5728 <code>useEffect</code> \u91CC\uFF0C<code>useEffect</code> \u7684\u51FD\u6570\u4F1A\u5728\u7EC4\u4EF6\u6E32\u67D3\u5230\u5C4F\u5E55\u4E4B\u540E\u6267\u884C\uFF0C\u6B64\u65F6\u5BF9 DOM \u8FDB\u884C\u4FEE\u6539\uFF0C\u4F1A\u89E6\u53D1\u6D4F\u89C8\u5668\u518D\u6B21\u8FDB\u884C\u56DE\u6D41\u3001\u91CD\u7ED8\uFF0C\u589E\u52A0\u4E86\u6027\u80FD\u4E0A\u7684\u635F\u8017</p>`,15),D={href:"https://juejin.cn/post/6844904183666049032",target:"_blank",rel:"noopener noreferrer"},C=t("\u6DF1\u5165\u7406\u89E3 React useLayoutEffect \u548C useEffect \u7684\u6267\u884C\u65F6\u673A"),R=e(`<h2 id="usememo" tabindex="-1"><a class="header-anchor" href="#usememo" aria-hidden="true">#</a> useMemo</h2><p><code>const memoizedValue = useMemo(() =&gt; computeExpensiveValue(a, b), [a, b]);</code></p><p>\u8FD4\u56DE\u4E00\u4E2A <code>memoized</code> \u503C</p><p>\u628A\u201C\u521B\u5EFA\u201D\u51FD\u6570\u548C\u4F9D\u8D56\u9879\u6570\u7EC4\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165 <code>useMemo</code>\uFF0C\u5B83\u4EC5\u4F1A\u5728\u67D0\u4E2A\u4F9D\u8D56\u9879\u6539\u53D8\u65F6\u624D\u91CD\u65B0\u8BA1\u7B97 <code>memoized</code> \u503C\u3002 \u8FD9\u79CD\u4F18\u5316\u6709\u52A9\u4E8E\u907F\u514D\u5728\u6BCF\u6B21\u6E32\u67D3\u65F6\u90FD\u8FDB\u884C\u9AD8\u5F00\u9500\u7684\u8BA1\u7B97</p><p>\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u53EB &quot;count&quot; \u7684 state \u53D8\u91CF</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;doSomething&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> abc <span class="token operator">=</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>You clicked <span class="token punctuation">{</span>count<span class="token punctuation">}</span> times<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span>count<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
                Click me
            <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u6BCF\u6B21\u70B9\u51FB\u66F4\u65B0 <code>count</code> \u7684\u65F6\u5019\uFF0C\u90FD\u4F1A\u89E6\u53D1\u7EC4\u4EF6\u6E32\u67D3\uFF0C\u7136\u540E <code>doSomething</code> \u6BCF\u6B21\u90FD\u4F1A\u6267\u884C\uFF0C\u5982\u679C\u8FD9\u4E2A\u51FD\u6570\u6709\u975E\u5E38\u8017\u65F6\u7684\u8BA1\u7B97\uFF0C\u90A3\u65E0\u7591\u4F1A\u5F71\u54CD\u7EC4\u4EF6 \u6027\u80FD\uFF0C\u63A5\u4E0B\u6765\u6211\u4EEC\u4F7F\u7528<code>useMemo</code>\u4F18\u5316</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u53EB &quot;count&quot; \u7684 state \u53D8\u91CF</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;doSomething&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token string">&#39;abc&#39;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> abc <span class="token operator">=</span> <span class="token function">useMemo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>You clicked <span class="token punctuation">{</span>count<span class="token punctuation">}</span> times <span class="token punctuation">{</span>abc<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span>count<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
                Click me
            <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 <code>useMemo</code> \u5305\u88C5 <code>doSomething</code> \u65B9\u6CD5\uFF0C\u7B2C\u4E8C\u53C2\u6570\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5B58\u653E\u7684\u662F\u5F53\u524D <code>doSomething</code> \u65B9\u6CD5\u4F9D\u8D56\u7684\u5C5E\u6027\uFF0C\u4E0A\u9762\u4F20\u5165\u7684\u7A7A\u6570\u7EC4\uFF0C\u610F\u5473\u7740 <code>doSomething</code> \u53EA\u4F1A\u5728\u7EC4\u4EF6\u9996\u6B21\u6E32\u67D3\u7684\u65F6\u5019\u624D\u4F1A\u6267\u884C\u3002</p><p>\u5982\u679C\u6211\u4EEC\u6539\u4E3A\uFF1A<code>const abc = useMemo(() =&gt; doSomething(), [count])</code>,\u90A3\u4E48\u53EA\u5728 <code>count</code> \u6539\u53D8\u65F6\uFF0C<code>doSomething</code> \u624D\u4F1A\u6267\u884C</p><h2 id="usememo-\u6E90\u7801\u7B80\u6790" tabindex="-1"><a class="header-anchor" href="#usememo-\u6E90\u7801\u7B80\u6790" aria-hidden="true">#</a> useMemo \u6E90\u7801\u7B80\u6790</h2><h3 id="\u9996\u6B21\u6E32\u67D3\u9636\u6BB5" tabindex="-1"><a class="header-anchor" href="#\u9996\u6B21\u6E32\u67D3\u9636\u6BB5" aria-hidden="true">#</a> \u9996\u6B21\u6E32\u67D3\u9636\u6BB5</h3><p><code>useMemo() =&gt;HooksDispatcherOnMountInDEV.useMemo() =&gt; mountMemo()</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">mountMemo</span><span class="token punctuation">(</span><span class="token parameter">nextCreate<span class="token punctuation">,</span> deps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> hook <span class="token operator">=</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521B\u5EFA hook\u5BF9\u8C61</span>
    <span class="token keyword">var</span> nextDeps <span class="token operator">=</span> deps <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> deps<span class="token punctuation">;</span>
    <span class="token keyword">var</span> nextValue <span class="token operator">=</span> <span class="token function">nextCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5F97\u5230\u56DE\u8C03\u7ED3\u679C</span>
    hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> <span class="token punctuation">[</span>nextValue<span class="token punctuation">,</span> nextDeps<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u4FDD\u5B58\u503C\u548C\u4F9D\u8D56</span>
    <span class="token keyword">return</span> nextValue<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">updateMemo</span><span class="token punctuation">(</span><span class="token parameter">nextCreate<span class="token punctuation">,</span> deps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> hook <span class="token operator">=</span> <span class="token function">updateWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6\u6B63\u5728\u5904\u7406\u7684 hook</span>
    <span class="token keyword">var</span> nextDeps <span class="token operator">=</span> deps <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> deps<span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6 \u4F9D\u8D56</span>
    <span class="token keyword">var</span> prevState <span class="token operator">=</span> hook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6\u4E4B\u524D\u503C </span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>prevState <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6709\u65E7\u4F9D\u8D56</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>nextDeps <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u6709\u65B0\u4F9D\u8D56</span>
        <span class="token keyword">var</span> prevDeps <span class="token operator">=</span> prevState<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">areHookInputsEqual</span><span class="token punctuation">(</span>nextDeps<span class="token punctuation">,</span> prevDeps<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u5982\u679C\u76F8\u7B49</span>
          <span class="token keyword">return</span> prevState<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u4E4B\u524D\u503C</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> nextValue <span class="token operator">=</span> <span class="token function">nextCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u91CD\u65B0\u6267\u884C\u51FD\u6570\u83B7\u53D6\u7ED3\u679C</span>
    hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> <span class="token punctuation">[</span>nextValue<span class="token punctuation">,</span> nextDeps<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u4FDD\u5B58</span>
    <span class="token keyword">return</span> nextValue<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5C0F\u7ED3-1" tabindex="-1"><a class="header-anchor" href="#\u5C0F\u7ED3-1" aria-hidden="true">#</a> \u5C0F\u7ED3</h3><p><code>useMemo</code> \u7684\u5B9E\u73B0\u6BD4\u8F83\u7B80\u5355\uFF0C\u9996\u6B21\u6E32\u67D3\u65F6\u5F97\u5230 <code>useMemo</code> \u56DE\u8C03 \u7684\u8BA1\u7B97\u7ED3\u679C\u53EA\u5728\u5230 <code>hook.memoizedState</code> \u4E2D\uFF0C\u4E4B\u540E\u66F4\u65B0\u7EC4\u4EF6\uFF0C\u6839\u636E\u4F9D\u8D56\u662F\u5426\u53D1\u751F\u53D8\u5316\u6765\u5224\u65AD\u662F\u5426\u8981\u91CD\u65B0\u6267\u884C <code>useMemo</code> \u56DE\u8C03\u8FD8\u662F\u53CD\u6B63\u4E4B\u524D\u8BA1\u7B97\u7684\u7ED3\u679C</p><h3 id="\u66F4\u65B0\u9636\u6BB5" tabindex="-1"><a class="header-anchor" href="#\u66F4\u65B0\u9636\u6BB5" aria-hidden="true">#</a> \u66F4\u65B0\u9636\u6BB5</h3><p><code>useMemo() =&gt;HooksDispatcherOnUpdateInDEV.useMemo() =&gt; updateMemo()</code></p><h2 id="usecallback" tabindex="-1"><a class="header-anchor" href="#usecallback" aria-hidden="true">#</a> useCallback</h2><p>\u7531\u4E8EReact\u7684\u66F4\u65B0\u673A\u5236\u662F\u5F53\u7EC4\u4EF6\u7684 <code>state</code> \u66F4\u65B0\u65F6\uFF0C\u5F53\u524D\u7EC4\u4EF6\u4EE5\u53CA\u5B50\u7EC4\u4EF6\u90FD\u4F1A\u91CD\u65B0\u6E32\u67D3\uFF0C\u5373\u4F7F\u8FD9\u4E9B\u5B50\u7EC4\u4EF6\u7684 <code>props</code> \u6CA1\u6709\u66F4\u65B0\u4E5F\u4F1A\u6E32\u67D3\u3002<code>React.memo</code> \u7684\u4F5C\u7528\u5C31\u662F\u5305\u88C5\u5B50\u7EC4\u4EF6\uFF0C\u8FD9\u6837\u53EA\u6709\u5F53\u4F9D\u8D56\u7684 <code>props</code> \u66F4\u65B0\u7684\u65F6\u5019\u624D\u4F1A\u53BB\u91CD\u65B0\u6E32\u67D3\u5B50\u7EC4\u4EF6</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u5982\u679C <code>props</code> \u5305\u542B <code>useState</code> \u6216 <code>useContext</code> \u7684 Hook, \u5F53 <code>context</code> \u53D1\u751F\u53D8\u5316\u65F6\uFF0C\u5B83\u4ECD\u4F1A\u91CD\u65B0\u6E32\u67D3</p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> ChildrenComponent <span class="token operator">=</span> <span class="token function">memo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> cab <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;ChildrenComponent rending&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>ChildrenComponent<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u53EB &quot;count&quot; \u7684 state \u53D8\u91CF</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">callBack</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>You clicked <span class="token punctuation">{</span>count<span class="token punctuation">}</span> times<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span>count<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
                Click me
            <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>ChildrenComponent cab<span class="token operator">=</span><span class="token punctuation">{</span>callBack<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>ChildrenComponent<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4F8B\u5B50\u4E2D <code>ChildrenComponent</code> \u6BCF\u6B21\u90FD\u4F1A\u91CD\u65B0\u6E32\u67D3\uFF0C\u662F <code>memo</code> \u4E0D\u8D77\u4F5C\u7528\u561B\uFF1F\u5E76\u4E0D\u662F\uFF0C\u5F53\u5B50\u7EC4\u4EF6\u7528 <code>memo</code> \u5305\u88C5\u4E4B\u540E\uFF0C\u8FD9\u4E2A\u5B50\u7EC4\u4EF6\u53EA\u6709\u5728 <code>props</code> \u66F4\u65B0\u4E4B\u540E\u624D\u4F1A\u6E32\u67D3\uFF0C\u800C\u4E0A\u9762 <code>const callBack = () =&gt; setCount(100)</code> \uFF0C\u5728\u5F53\u524D\u7EC4\u4EF6\u66F4\u65B0\u540E\u90FD\u4F1A\u91CD\u65B0\u8D4B\u503C\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u8D4B\u503C\u540E\u5730\u5740\u5C31\u53D8\u4E86\uFF0C\u6240\u4EE5\u5BFC\u81F4\u5B50\u7EC4\u4EF6\u81EA\u7136\u4F1A\u88AB\u91CD\u65B0\u6E32\u67D3</p><p>\u8FD9\u4E9B\u53EF\u4EE5\u4F7F\u7528 <code>useCallback</code> \u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898</p><p><code>useCallback</code> \u8FD4\u56DE\u4E00\u4E2A <code>memoized</code> \u56DE\u8C03\u51FD\u6570\u3002\u628A\u5185\u8054\u56DE\u8C03\u51FD\u6570\u53CA\u4F9D\u8D56\u9879\u6570\u7EC4\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165 <code>useCallback</code>\uFF0C\u5B83\u5C06\u8FD4\u56DE\u8BE5\u56DE\u8C03\u51FD\u6570\u7684 <code>memoized</code> \u7248\u672C\uFF0C\u8BE5\u56DE\u8C03\u51FD\u6570\u4EC5\u5728\u67D0\u4E2A\u4F9D\u8D56\u9879\u6539\u53D8\u65F6\u624D\u4F1A\u66F4\u65B0</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p><code>useCallback(fn, deps)</code> \u76F8\u5F53\u4E8E <code>useMemo(() =&gt; fn, deps)</code></p></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> ChildrenComponent <span class="token operator">=</span> <span class="token function">memo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> cab <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;ChildrenComponent rending&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>ChildrenComponent<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u53EB &quot;count&quot; \u7684 state \u53D8\u91CF</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> callBack <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>You clicked <span class="token punctuation">{</span>count<span class="token punctuation">}</span> times<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span>count<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
                Click me
            <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>ChildrenComponent cab<span class="token operator">=</span><span class="token punctuation">{</span>callBack<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>ChildrenComponent<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u628A\u5185\u8054\u56DE\u8C03\u51FD\u6570\u53CA\u4F9D\u8D56\u9879\u6570\u7EC4\u4F5C\u4E3A\u53C2\u6570\u4F20\u5165 <code>useCallback</code>\uFF0C\u5B83\u5C06\u8FD4\u56DE\u8BE5\u56DE\u8C03\u51FD\u6570\u7684 <code>memoized</code> \u7248\u672C\uFF0C\u8BE5\u56DE\u8C03\u51FD\u6570\u4EC5\u5728\u67D0\u4E2A\u4F9D\u8D56\u9879\u6539\u53D8\u65F6\u624D\u4F1A\u66F4\u65B0</p><h2 id="usecallback-\u6E90\u7801\u7B80\u6790" tabindex="-1"><a class="header-anchor" href="#usecallback-\u6E90\u7801\u7B80\u6790" aria-hidden="true">#</a> useCallback \u6E90\u7801\u7B80\u6790</h2><h3 id="\u9996\u6B21\u6E32\u67D3-2" tabindex="-1"><a class="header-anchor" href="#\u9996\u6B21\u6E32\u67D3-2" aria-hidden="true">#</a> \u9996\u6B21\u6E32\u67D3</h3><p><code>useCallback() =&gt; HooksDispatcherOnMountInDEV.useCallback() =&gt; mountCallback(callback, deps)</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">mountCallback</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> deps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> hook <span class="token operator">=</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521B\u5EFA hook</span>
    <span class="token keyword">var</span> nextDeps <span class="token operator">=</span> deps <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> deps<span class="token punctuation">;</span>
    hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> <span class="token punctuation">[</span>callback<span class="token punctuation">,</span> nextDeps<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u4FDD\u5B58 callback\u548C nextDeps</span>
    <span class="token keyword">return</span> callback<span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE callback</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u66F4\u65B0\u65F6" tabindex="-1"><a class="header-anchor" href="#\u66F4\u65B0\u65F6" aria-hidden="true">#</a> \u66F4\u65B0\u65F6</h3><p><code>useCallback() =&gt; HooksDispatcherOnUpdateInDEV.useCallback() =&gt; updateCallback(callback, deps)</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">updateCallback</span><span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> deps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> hook <span class="token operator">=</span> <span class="token function">updateWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">var</span> nextDeps <span class="token operator">=</span> deps <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> deps<span class="token punctuation">;</span>
    <span class="token keyword">var</span> prevState <span class="token operator">=</span> hook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>prevState <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>nextDeps <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> prevDeps <span class="token operator">=</span> prevState<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5982\u679C\u76F8\u7B49\u5219\u76F4\u63A5\u8FD4\u56DE \u4E4B\u524D\u7684 callback</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">areHookInputsEqual</span><span class="token punctuation">(</span>nextDeps<span class="token punctuation">,</span> prevDeps<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> prevState<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> <span class="token punctuation">[</span>callback<span class="token punctuation">,</span> nextDeps<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> callback<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5C0F\u7ED3-2" tabindex="-1"><a class="header-anchor" href="#\u5C0F\u7ED3-2" aria-hidden="true">#</a> \u5C0F\u7ED3</h3><p><code>updateCallback</code> \u8DDF <code>useMemo</code> \u7684\u8FC7\u7A0B\u5DEE\u4E0D\u591A\uFF0C\u591A\u4E86\u65B0\u65E7\u4F9D\u8D56\u7684\u5224\u65AD\uFF0C\u5982\u679C\u6CA1\u53D8\u5316\u5219\u76F4\u63A5\u8FD4\u56DE\u4E4B\u524D\u7684\u56DE\u8C03\u5F15\u7528\uFF0C\u8FD9\u6837\u4F7F\u7528 <code>memo</code> \u7684\u5B50\u7EC4\u4EF6\u7684 <code>props</code> \u5C31\u603B\u662F\u53D1\u751F\u53D8\u5316\u4E86</p><h3 id="usememo\u548Cusecallback\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#usememo\u548Cusecallback\u7684\u533A\u522B" aria-hidden="true">#</a> useMemo\u548CuseCallback\u7684\u533A\u522B</h3><p><code>useMemo</code> \u548C <code>useCallback</code> \u63A5\u6536\u7684\u53C2\u6570\u90FD\u662F\u4E00\u6837\uFF0C\u5982\u679C\u4F9D\u8D56\u9879\u6CA1\u6709\u53D1\u751F\u53D8\u5316\u5C31\u8FD4\u56DE\u4E4B\u524D\u7684\u503C\u3002\u533A\u522B\u5728\u4E8E\uFF1A</p><ul><li><p><code>useMemo</code> \u8FD4\u56DE\u7684\u662F\u51FD\u6570\u8FD0\u884C\u7684\u7ED3\u679C\uFF0C\u9632\u6B62\u91CD\u590D\u8BA1\u7B97\uFF0C\u591A\u7528\u4E86\u6709\u6602\u8D35\u7684\u8BA1\u7B97\u6210\u672C\u65F6\u4F7F\u7528</p></li><li><p><code>useCallback</code> \u8FD4\u56DE\u7684\u662F\u8BE5\u51FD\u6570\uFF0C\u591A\u7528\u4E8E\u9700\u8981\u5C06\u8BE5\u56DE\u8C03\u4F20\u9012\u7ED9\u5B50\u7EC4\u4EF6\u4F7F\u7528</p></li></ul><p>\u4F46\u662F\u4E0D\u80FD\u6EE5\u7528 <code>useMemo</code> \u548C <code>useCallback</code>, \u56E0\u4E3A\u6BCF\u4E2A\u62BD\u8C61(\u548C\u6027\u80FD\u4F18\u5316)\u90FD\u662F\u6709\u4EE3\u4EF7\u7684\uFF0C\u6BD4\u5982\u4F7F\u7528 <code>useMemo</code> \u548C <code>useCallback</code> \u672C\u8EAB\u9020\u6210\u7684\u4EE3\u7801\u76F4\u89C2\u7A0B\u5E8F\u53CA\u7B2C\u4E8C\u4E2A\u4F9D\u8D56\u81F3\u5C11\u4EA7\u751F\u4E86\u989D\u5916\u7684\u5185\u5B58\u9700\u8981</p>`,42),H={href:"https://jancat.github.io/post/2019/translation-usememo-and-usecallback/",target:"_blank",rel:"noopener noreferrer"},I=t("\u4EC0\u4E48\u65F6\u5019\u4F7F\u7528 useMemo \u548C useCallback"),_=e(`<h2 id="useref" tabindex="-1"><a class="header-anchor" href="#useref" aria-hidden="true">#</a> useRef</h2><p><code>const refContainer = useRef(initialValue);</code></p><p><code>useRef</code> \u8FD4\u56DE\u4E00\u4E2A\u53EF\u53D8\u7684 <code>ref \u5BF9\u8C61</code>\uFF0C\u5176 <code>.current</code> \u5C5E\u6027\u88AB\u521D\u59CB\u5316\u4E3A\u4F20\u5165\u7684\u53C2\u6570\uFF08initialValue\uFF09\u3002<strong>\u8FD4\u56DE\u7684 <code>ref</code> \u5BF9\u8C61\u5728\u7EC4\u4EF6\u7684\u6574\u4E2A\u751F\u547D\u5468\u671F\u5185\u4FDD\u6301\u4E0D\u53D8</strong></p><p>\u5B83\u7684\u4F5C\u7528\u603B\u7ED3\u5982\u4E0B\uFF1A</p><h3 id="\u4FDD\u5B58dom" tabindex="-1"><a class="header-anchor" href="#\u4FDD\u5B58dom" aria-hidden="true">#</a> \u4FDD\u5B58dom</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> inputEl <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;inputEl&#39;</span><span class="token punctuation">,</span> inputEl<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div ref<span class="token operator">=</span><span class="token punctuation">{</span>inputEl<span class="token punctuation">}</span><span class="token operator">&gt;</span>
            \u4F60\u4E2A\u5F1F\u5F1F
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4FDD\u5B58\u4E8B\u4EF6\u7A0B\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u4FDD\u5B58\u4E8B\u4EF6\u7A0B\u5E8F" aria-hidden="true">#</a> \u4FDD\u5B58\u4E8B\u4EF6\u7A0B\u5E8F</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> t <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    t<span class="token punctuation">.</span>current <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">l</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">handleClear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">clearTimeout</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>handleClick<span class="token punctuation">}</span><span class="token operator">&gt;</span>start<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>handleClear<span class="token punctuation">}</span><span class="token operator">&gt;</span>clear<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B58\u50A8\u4EE5\u524D\u7684\u503C" tabindex="-1"><a class="header-anchor" href="#\u5B58\u50A8\u4EE5\u524D\u7684\u503C" aria-hidden="true">#</a> \u5B58\u50A8\u4EE5\u524D\u7684\u503C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> t <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>name<span class="token punctuation">,</span> setName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&quot;ajanuw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    t<span class="token punctuation">.</span>current <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> prevName <span class="token operator">=</span> t<span class="token punctuation">.</span>current<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>input value<span class="token operator">=</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token function">setName</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token punctuation">{</span>prevName<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="useref-\u6E90\u7801\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#useref-\u6E90\u7801\u5206\u6790" aria-hidden="true">#</a> useRef \u6E90\u7801\u5206\u6790</h2><h3 id="\u9996\u6B21\u6E32\u67D3-3" tabindex="-1"><a class="header-anchor" href="#\u9996\u6B21\u6E32\u67D3-3" aria-hidden="true">#</a> \u9996\u6B21\u6E32\u67D3</h3><p><code>useRef() =&gt; HooksDispatcherOnMountInDEV.useRef() =&gt; mountRef()</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">mountRef</span><span class="token punctuation">(</span><span class="token parameter">initialValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> hook <span class="token operator">=</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u521B\u5EFA hook \u5BF9\u8C61</span>
    <span class="token keyword">var</span> ref <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">// \u521B\u5EFA ref</span>
      <span class="token literal-property property">current</span><span class="token operator">:</span> initialValue
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token punctuation">{</span>
      Object<span class="token punctuation">.</span><span class="token function">seal</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u51BB\u7ED3\u8BE5\u5BF9\u8C61</span>
    <span class="token punctuation">}</span>

    hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> ref<span class="token punctuation">;</span> <span class="token comment">// \u4FDD\u5B58\u5230 memoizedState</span>
    <span class="token keyword">return</span> ref<span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u5BF9\u8C61</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u66F4\u65B0\u9636\u6BB5-1" tabindex="-1"><a class="header-anchor" href="#\u66F4\u65B0\u9636\u6BB5-1" aria-hidden="true">#</a> \u66F4\u65B0\u9636\u6BB5</h3><p><code>useRef() =&gt; HooksDispatcherOnUpdateInDEV.useRef() =&gt; updateRef()</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">updateRef</span><span class="token punctuation">(</span><span class="token parameter">initialValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> hook <span class="token operator">=</span> <span class="token function">updateWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> hook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">;</span> <span class="token comment">// \u4E0D\u7528\u91CD\u65B0\u8D4B\u503C\uFF0C\u76F4\u63A5\u8FD4\u56DE\u4E4B\u524D\u7684 ref</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>useRef</code> \u7684\u5B9E\u73B0\u6BD4\u8F83\u7B80\u5355\uFF0C\u9996\u6B21\u6E32\u67D3\u7684\u521B\u5EFA <code>{ current: initialValue }</code> \u4FDD\u5B58\u5230 <code>memoizedState</code> \u4E2D\uFF0C\u4E4B\u540E\u8BFB\u53D6\u7684\u90FD\u662F\u8FD9\u4E2A\u5BF9\u8C61</p><h2 id="useimperativehandle" tabindex="-1"><a class="header-anchor" href="#useimperativehandle" aria-hidden="true">#</a> useImperativeHandle</h2><p><code>useImperativeHandle(ref, createHandle, [deps])</code></p><p><code>useImperativeHandle</code> \u53EF\u4EE5\u8BA9\u4F60\u5728\u4F7F\u7528 <code>ref</code> \u65F6\u81EA\u5B9A\u4E49\u66B4\u9732\u7ED9\u7236\u7EC4\u4EF6\u7684\u5B9E\u4F8B\u503C\u3002\u5728\u5927\u591A\u6570\u60C5\u51B5\u4E0B\uFF0C\u5E94\u5F53\u907F\u514D\u4F7F\u7528 <code>ref</code> \u8FD9\u6837\u7684\u547D\u4EE4\u5F0F\u4EE3\u7801\u3002 <code>useImperativeHandle</code> \u5E94\u5F53\u4E0E <code>forwardRef</code> \u4E00\u8D77\u4F7F\u7528\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">FancyInput</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> ref</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> inputRef <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">useImperativeHandle</span><span class="token punctuation">(</span>ref<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function-variable function">focus</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      inputRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>input ref<span class="token operator">=</span><span class="token punctuation">{</span>inputRef<span class="token punctuation">}</span> <span class="token operator">...</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
FancyInput <span class="token operator">=</span> <span class="token function">forwardRef</span><span class="token punctuation">(</span>FancyInput<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u672C\u4F8B\u4E2D\uFF0C\u6E32\u67D3 <code>&lt;FancyInput ref={inputRef} /&gt;</code> \u7684\u7236\u7EC4\u4EF6\u53EF\u4EE5\u8C03\u7528 <code>inputRef.current.focus()</code></p><h2 id="\u81EA\u5B9A\u4E49hook" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49hook" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49Hook</h2><p>\u81EA\u5B9A\u4E49Hook\u5C31\u662F\u5C06<code>useState</code>\u548C<code>useEffect</code>\u653E\u5728\u4E00\u4E2A\u516C\u5171\u51FD\u6570\u4E2D\uFF0C\u8FD9\u4E2A\u51FD\u6570\u5C31\u6210\u4E86\u4E00\u4E2A<code>Hook</code>\uFF0C\u8FD9\u6837\u5C31\u53EF\u4EE5\u8BA9\u591A\u4E2A\u7EC4\u4EF6\u4F7F\u7528\u8FD9\u4E2A<code>Hook</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">useCount</span><span class="token punctuation">(</span><span class="token parameter">init</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>init<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// setCount(count+10)</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">setCount</span><span class="token punctuation">(</span>count<span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">)</span>
    <span class="token keyword">return</span> count
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> useCount <span class="token keyword">from</span> <span class="token string">&#39;./helper/hook/useCount&#39;</span>

<span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> isOnline <span class="token operator">=</span> <span class="token function">useCount</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>\u81EA\u5B9A\u4E49Hook<span class="token operator">:</span><span class="token punctuation">{</span>isOnline<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u81EA\u5B9A\u4E49hook\u7684\u6CE8\u610F\u70B9</strong></p><ul><li><p>\u81EA\u5B9A\u4E49 Hook \u5FC5\u987B\u4EE5 \u201Cuse\u201D \u5F00\u5934</p></li><li><p>\u5728\u4E24\u4E2A\u7EC4\u4EF6\u4E2D\u4F7F\u7528\u76F8\u540C\u7684 Hook \u4E0D\u4F1A\u5171\u4EAB state</p></li><li><p>\u7EC4\u5408\u66F4\u65B0\u65F6\uFF0C\u81EA\u5B9A\u4E49 Hook\u4E2D\u7684<code>effect</code>\u7684\u6267\u884C\u89C4\u5219\u4E5F\u662F\u4E00\u6837\u7684\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5229\u7528\u8FD9\u79CD\u505A hook \u901A\u4FE1</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u81EA\u5B9A\u4E49hook</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">useCount</span><span class="token punctuation">(</span><span class="token parameter">init</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>init<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>init<span class="token punctuation">)</span> <span class="token comment">// \u63A5\u6536\u65B0\u7684init</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> count
<span class="token punctuation">}</span>
<span class="token comment">// -------------------------------------------------</span>
 <span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
 <span class="token keyword">import</span> logo <span class="token keyword">from</span> <span class="token string">&#39;./logo.svg&#39;</span><span class="token punctuation">;</span>
 <span class="token keyword">import</span> useCount <span class="token keyword">from</span> <span class="token string">&#39;./helper/hook/useCount&#39;</span>
 <span class="token keyword">import</span> <span class="token string">&#39;./App.css&#39;</span><span class="token punctuation">;</span>
 <span class="token keyword">import</span> Inbox <span class="token keyword">from</span> <span class="token string">&#39;./pages/Inbox&#39;</span>
 
 <span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// \u58F0\u660E\u4E00\u4E2A\u53EB &quot;count&quot; \u7684 state \u53D8\u91CF</span>
     <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">const</span> count2 <span class="token operator">=</span> <span class="token function">useCount</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>
     <span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
     <span class="token punctuation">}</span>
     <span class="token keyword">return</span> <span class="token punctuation">(</span>
         <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
             <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>You clicked <span class="token punctuation">{</span>count<span class="token punctuation">}</span> times<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
             <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span>f<span class="token punctuation">}</span><span class="token operator">&gt;</span>
                 Click me
             <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
             <span class="token punctuation">{</span>
                 count<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">&lt;</span>Inbox<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Inbox<span class="token operator">&gt;</span>
             <span class="token punctuation">}</span>
         <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
     <span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 
 <span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="hook\u4F7F\u7528\u89C4\u5219" tabindex="-1"><a class="header-anchor" href="#hook\u4F7F\u7528\u89C4\u5219" aria-hidden="true">#</a> Hook\u4F7F\u7528\u89C4\u5219</h2><ul><li><p>\u4E0D\u8981\u5728\u5FAA\u73AF\uFF0C\u6761\u4EF6\u6216\u5D4C\u5957\u51FD\u6570\u4E2D\u8C03\u7528 Hook\uFF0C \u786E\u4FDD\u603B\u662F\u5728\u4F60\u7684 React \u51FD\u6570\u7684\u6700\u9876\u5C42\u8C03\u7528\u4ED6\u4EEC\u3002</p></li><li><p>\u53EA\u5728 React \u51FD\u6570\u4E2D\u8C03\u7528 Hook</p><ul><li><p>\u4E0D\u8981\u5728\u5FAA\u73AF\uFF0C\u6761\u4EF6\u6216\u5D4C\u5957\u51FD\u6570\u4E2D\u8C03\u7528 Hook\uFF0C \u786E\u4FDD\u603B\u662F\u5728\u4F60\u7684 React \u51FD\u6570\u7684\u6700\u9876\u5C42\u8C03\u7528\u4ED6\u4EEC\u3002</p></li><li><p>\u5728\u81EA\u5B9A\u4E49 Hook \u4E2D\u8C03\u7528\u5176\u4ED6 Hook</p></li></ul></li></ul><h2 id="q-a" tabindex="-1"><a class="header-anchor" href="#q-a" aria-hidden="true">#</a> Q&amp;A</h2><h3 id="\u4E3A\u4EC0\u4E48\u4E0D\u80FD\u5728\u6761\u4EF6\u8BED\u53E5\u4E2D\u7533\u660E-hook" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u4E0D\u80FD\u5728\u6761\u4EF6\u8BED\u53E5\u4E2D\u7533\u660E-hook" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u4E0D\u80FD\u5728\u6761\u4EF6\u8BED\u53E5\u4E2D\u7533\u660E hook</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect<span class="token punctuation">,</span> useRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
 <span class="token keyword">const</span> <span class="token punctuation">[</span>name<span class="token punctuation">,</span> setName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;Damon&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token keyword">const</span> <span class="token punctuation">[</span>age<span class="token punctuation">,</span> setAge<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>age <span class="token operator">!==</span> <span class="token number">23</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> Ref <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
 
  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
   <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
     <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
     <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token punctuation">{</span>age<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u8FD9\u4E2AApp\u7EC4\u4EF6\u88AB\u6E32\u67D3\u7684\u65F6\u5019\uFF0C<code>workInProgressHook.memoizedState</code> \u4E2D\u4F1A\u4EE5\u94FE\u8868\u7684\u5F62\u5F0F\u6765\u4FDD\u5B58\u8FD9\u4E9B hook</p><p><img src="`+v+`" alt=""></p><p>\u5982\u679C\u5728\u6761\u4EF6\u8BED\u53E5\u4E2D\u7533\u660E hook\uFF0C\u90A3\u4E48\u5728\u66F4\u65B0\u9636\u6BB5\u94FE\u8868\u7ED3\u6784\u4F1A\u88AB\u7834\u574F\uFF0CFiber\u6811\u4E0A\u7F13\u5B58\u7684 hooks\u4FE1\u606F\u5C31\u4F1A\u548C\u5F53\u524D\u7684 <code>workInProgressHook</code> \u4E0D\u4E00\u81F4\uFF0C\u4E0D\u4E00\u81F4\u7684\u60C5\u51B5\u4E0B\u8BFB\u53D6\u6570\u636E\u53EF\u80FD\u5C31\u4F1A\u51FA\u73B0\u5F02\u5E38</p><h3 id="\u4E3A\u4EC0\u4E48-usestate-\u8981\u4F7F\u7528\u6570\u7EC4\u800C\u4E0D\u662F\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48-usestate-\u8981\u4F7F\u7528\u6570\u7EC4\u800C\u4E0D\u662F\u5BF9\u8C61" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48 useState \u8981\u4F7F\u7528\u6570\u7EC4\u800C\u4E0D\u662F\u5BF9\u8C61</h3><p>useState \u7684\u7528\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>\u6570\u7EC4\u7684\u89E3\u6784\u8D4B\u503C</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>one<span class="token punctuation">,</span> two<span class="token punctuation">,</span> three<span class="token punctuation">]</span> <span class="token operator">=</span> foo<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>one<span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>two<span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>three<span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u5BF9\u8C61\u7684\u89E3\u6784\u8D4B\u503C</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">888</span><span class="token punctuation">,</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;xiaoxin&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> id<span class="token punctuation">,</span> name <span class="token punctuation">}</span> <span class="token operator">=</span> user<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 888</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// &quot;xiaoxin&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u770B\u5B8C\u8FD9\u4E24\u4E2A\u4F8B\u5B50\uFF0C\u7B54\u6848\u5E94\u8BE5\u5C31\u51FA\u6765\u4E86\uFF1A</p><ul><li><p>\u5982\u679C useState \u8FD4\u56DE\u7684\u662F\u6570\u7EC4\uFF0C\u90A3\u4E48\u4F7F\u7528\u8005\u53EF\u4EE5\u5BF9\u6570\u7EC4\u4E2D\u7684\u5143\u7D20\u547D\u540D\uFF0C\u4EE3\u7801\u770B\u8D77\u6765\u4E5F\u6BD4\u8F83\u5E72\u51C0</p></li><li><p>\u5982\u679C useState \u8FD4\u56DE\u7684\u662F\u5BF9\u8C61\uFF0C\u5728\u89E3\u6784\u5BF9\u8C61\u7684\u65F6\u5019\u5FC5\u987B\u8981\u548C <code>useState</code> \u5185\u90E8\u5B9E\u73B0\u8FD4\u56DE\u7684\u5BF9\u8C61\u540C\u540D\uFF0C\u60F3\u8981\u4F7F\u7528\u591A\u6B21\u7684\u8BDD\uFF0C\u5FC5\u987B\u5F97\u8BBE\u7F6E\u522B\u540D\u624D\u80FD\u4F7F\u7528\u8FD4\u56DE\u503C</p></li></ul><p>\u4E0B\u9762\u6765\u770B\u770B\u5982\u679C useState \u8FD4\u56DE\u5BF9\u8C61\u7684\u60C5\u51B5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B2C\u4E00\u6B21\u4F7F\u7528</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> state<span class="token punctuation">,</span> setState <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B2C\u4E8C\u6B21\u4F7F\u7528</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">state</span><span class="token operator">:</span> counter<span class="token punctuation">,</span> <span class="token literal-property property">setState</span><span class="token operator">:</span> setCounter <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u53EF\u4EE5\u770B\u5230\uFF0C\u8FD4\u56DE\u5BF9\u8C61\u7684\u4F7F\u7528\u65B9\u5F0F\u8FD8\u662F\u633A\u9EBB\u70E6\u7684\uFF0C\u66F4\u4F55\u51B5\u5B9E\u9645\u9879\u76EE\u4E2D\u4F1A\u4F7F\u7528\u7684\u66F4\u9891\u7E41\u3002<br> \u603B\u7ED3\uFF1A<code>useState</code> \u8FD4\u56DE\u7684\u662F <code>array</code> \u800C\u4E0D\u662F <code>object</code> \u7684\u539F\u56E0\u5C31\u662F\u4E3A\u4E86\u964D\u4F4E\u4F7F\u7528\u7684\u590D\u6742\u5EA6\uFF0C\u8FD4\u56DE\u6570\u7EC4\u7684\u8BDD\u53EF\u4EE5\u76F4\u63A5\u6839\u636E\u987A\u5E8F\u89E3\u6784\uFF0C\u800C\u8FD4\u56DE\u5BF9\u8C61\u7684\u8BDD\u8981\u60F3\u4F7F\u7528\u591A\u6B21\u5C31\u9700\u8981\u5B9A\u4E49\u522B\u540D\u4E86</p><h3 id="react-hooks-\u89E3\u51B3\u4E86\u54EA\u4E9B\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#react-hooks-\u89E3\u51B3\u4E86\u54EA\u4E9B\u95EE\u9898" aria-hidden="true">#</a> React Hooks \u89E3\u51B3\u4E86\u54EA\u4E9B\u95EE\u9898</h3><p>React Hooks \u4E3B\u8981\u89E3\u51B3\u4E86\u4EE5\u4E0B\u95EE\u9898\uFF1A</p><p><strong>\u5728\u7EC4\u4EF6\u4E4B\u95F4\u590D\u7528\u72B6\u6001\u903B\u8F91\u5F88\u96BE</strong></p><p>React \u6CA1\u6709\u63D0\u4F9B\u5C06\u53EF\u590D\u7528\u6027\u884C\u4E3A\u201C\u9644\u52A0\u201D\u5230\u7EC4\u4EF6\u7684\u9014\u5F84\uFF08\u4F8B\u5982\uFF0C\u628A\u7EC4\u4EF6\u8FDE\u63A5\u5230 <code>store</code> \uFF09\u89E3\u51B3\u6B64\u7C7B\u95EE\u9898\u53EF\u4EE5\u4F7F\u7528<code> render</code> <code>props</code> \u548C \u9AD8\u9636\u7EC4\u4EF6\u3002\u4F46\u662F\u8FD9\u7C7B\u65B9\u6848\u9700\u8981\u91CD\u65B0\u7EC4\u7EC7\u7EC4\u4EF6\u7ED3\u6784\uFF0C\u8FD9\u53EF\u80FD\u4F1A\u5F88\u9EBB\u70E6\uFF0C\u5E76\u4E14\u4F1A\u4F7F\u4EE3\u7801\u96BE\u4EE5\u7406\u89E3\u3002\u7531 <code>providers</code>\uFF0C<code>consumers</code>\uFF0C\u9AD8\u9636\u7EC4\u4EF6\uFF0C<code>render</code> <code>props</code> \u7B49\u5176\u4ED6\u62BD\u8C61\u5C42\u7EC4\u6210\u7684\u7EC4\u4EF6\u4F1A\u5F62\u6210\u201C\u5D4C\u5957\u5730\u72F1\u201D\u3002\u5C3D\u7BA1\u53EF\u4EE5\u5728 DevTools \u8FC7\u6EE4\u6389\u5B83\u4EEC\uFF0C\u4F46\u8FD9\u8BF4\u660E\u4E86\u4E00\u4E2A\u66F4\u6DF1\u5C42\u6B21\u7684\u95EE\u9898\uFF1AReact \u9700\u8981\u4E3A\u5171\u4EAB\u72B6\u6001\u903B\u8F91\u63D0\u4F9B\u66F4\u597D\u7684\u539F\u751F\u9014\u5F84\u3002</p><p>\u53EF\u4EE5\u4F7F\u7528 Hook \u4ECE\u7EC4\u4EF6\u4E2D\u63D0\u53D6\u72B6\u6001\u903B\u8F91\uFF0C\u4F7F\u5F97\u8FD9\u4E9B\u903B\u8F91\u53EF\u4EE5\u5355\u72EC\u6D4B\u8BD5\u5E76\u590D\u7528\u3002Hook \u4F7F\u6211\u4EEC\u5728\u65E0\u9700\u4FEE\u6539\u7EC4\u4EF6\u7ED3\u6784\u7684\u60C5\u51B5\u4E0B\u590D\u7528\u72B6\u6001\u903B\u8F91\u3002 \u8FD9\u4F7F\u5F97\u5728\u7EC4\u4EF6\u95F4\u6216\u793E\u533A\u5185\u5171\u4EAB Hook \u53D8\u5F97\u66F4\u4FBF\u6377\u3002</p><p><strong>\u590D\u6742\u7EC4\u4EF6\u53D8\u5F97\u96BE\u4EE5\u7406\u89E3</strong></p><p>\u5728\u7EC4\u4EF6\u4E2D\uFF0C\u6BCF\u4E2A\u751F\u547D\u5468\u671F\u5E38\u5E38\u5305\u542B\u4E00\u4E9B\u4E0D\u76F8\u5173\u7684\u903B\u8F91\u3002\u4F8B\u5982\uFF0C\u7EC4\u4EF6\u5E38\u5E38\u5728 <code>componentDidMount</code> \u548C <code>componentDidUpdate</code> \u4E2D\u83B7\u53D6\u6570\u636E\u3002\u4F46\u662F\uFF0C\u540C\u4E00\u4E2A <code>componentDidMount</code> \u4E2D\u53EF\u80FD\u4E5F\u5305\u542B\u5F88\u591A\u5176\u5B83\u7684\u903B\u8F91\uFF0C\u5982\u8BBE\u7F6E\u4E8B\u4EF6\u76D1\u542C\uFF0C\u800C\u4E4B\u540E\u9700\u5728 <code>componentWillUnmount</code> \u4E2D\u6E05\u9664\u3002\u76F8\u4E92\u5173\u8054\u4E14\u9700\u8981\u5BF9\u7167\u4FEE\u6539\u7684\u4EE3\u7801\u88AB\u8FDB\u884C\u4E86\u62C6\u5206\uFF0C\u800C\u5B8C\u5168\u4E0D\u76F8\u5173\u7684\u4EE3\u7801\u5374\u5728\u540C\u4E00\u4E2A\u65B9\u6CD5\u4E2D\u7EC4\u5408\u5728\u4E00\u8D77\u3002</p><p>\u4E3A\u4E86\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0CHook \u5C06\u7EC4\u4EF6\u4E2D\u76F8\u4E92\u5173\u8054\u7684\u90E8\u5206\u62C6\u5206\u6210\u66F4\u5C0F\u7684\u51FD\u6570\uFF08\u6BD4\u5982\u8BBE\u7F6E\u8BA2\u9605\u6216\u8BF7\u6C42\u6570\u636E\uFF09\uFF0C\u800C\u5E76\u975E\u5F3A\u5236\u6309\u7167\u751F\u547D\u5468\u671F\u5212\u5206\u3002\u4F60\u8FD8\u53EF\u4EE5\u4F7F\u7528 <code>reducer</code> \u6765\u7BA1\u7406\u7EC4\u4EF6\u7684\u5185\u90E8\u72B6\u6001\uFF0C\u4F7F\u5176\u66F4\u52A0\u53EF\u9884\u6D4B\u3002</p><p><strong>\u96BE\u4EE5\u7406\u89E3\u7684 class</strong></p><p>\u9664\u4E86\u4EE3\u7801\u590D\u7528\u548C\u4EE3\u7801\u7BA1\u7406\u4F1A\u9047\u5230\u56F0\u96BE\u5916\uFF0Cclass \u662F\u5B66\u4E60 React \u7684\u4E00\u5927\u5C4F\u969C\u3002\u6211\u4EEC\u5FC5\u987B\u53BB\u7406\u89E3 JavaScript \u4E2D <code>this</code> \u7684\u5DE5\u4F5C\u65B9\u5F0F\uFF0C\u8FD9\u4E0E\u5176\u4ED6\u8BED\u8A00\u5B58\u5728\u5DE8\u5927\u5DEE\u5F02\u3002\u8FD8\u4E0D\u80FD\u5FD8\u8BB0\u7ED1\u5B9A\u4E8B\u4EF6\u5904\u7406\u5668\u3002\u6CA1\u6709\u7A33\u5B9A\u7684\u8BED\u6CD5\u63D0\u6848\uFF0C\u8FD9\u4E9B\u4EE3\u7801\u975E\u5E38\u5197\u4F59\u3002</p><p>\u4ECE\u6982\u5FF5\u4E0A\u8BB2\uFF0CReact \u7EC4\u4EF6\u4E00\u76F4\u66F4\u50CF\u662F\u51FD\u6570\u3002\u800C Hook \u5219\u62E5\u62B1\u4E86\u51FD\u6570\uFF0C\u540C\u65F6\u4E5F\u6CA1\u6709\u727A\u7272 React \u7684\u7CBE\u795E\u539F\u5219\u3002Hook \u63D0\u4F9B\u4E86\u95EE\u9898\u7684\u89E3\u51B3\u65B9\u6848\uFF0C\u65E0\u9700\u5B66\u4E60\u590D\u6742\u7684\u51FD\u6570\u5F0F\u6216\u54CD\u5E94\u5F0F\u7F16\u7A0B\u6280\u672F</p><h3 id="useeffect-\u4E0E-uselayouteffect-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#useeffect-\u4E0E-uselayouteffect-\u7684\u533A\u522B" aria-hidden="true">#</a> useEffect \u4E0E useLayoutEffect \u7684\u533A\u522B</h3><p><strong>\u5171\u540C\u70B9</strong></p><ul><li><p>\u8FD0\u7528\u6548\u679C\uFF1A <code>useEffect</code> \u4E0E <code>useLayoutEffect</code> \u4E24\u8005\u90FD\u662F\u7528\u4E8E\u5904\u7406\u526F\u4F5C\u7528\uFF0C\u8FD9\u4E9B\u526F\u4F5C\u7528\u5305\u62EC\u6539\u53D8 DOM\u3001\u8BBE\u7F6E\u8BA2\u9605\u3001\u64CD\u4F5C\u5B9A\u65F6\u5668\u7B49\u3002\u5728\u51FD\u6570\u7EC4\u4EF6\u5185\u90E8\u64CD\u4F5C\u526F\u4F5C\u7528\u662F\u4E0D\u88AB\u5141\u8BB8\u7684\uFF0C\u6240\u4EE5\u9700\u8981\u4F7F\u7528\u8FD9\u4E24\u4E2A\u51FD\u6570\u53BB\u5904\u7406\u3002</p></li><li><p>\u4F7F\u7528\u65B9\u5F0F\uFF1A<code> useEffect</code> \u4E0E <code>useLayoutEffect</code> \u4E24\u8005\u5E95\u5C42\u7684\u51FD\u6570\u7B7E\u540D\u662F\u5B8C\u5168\u4E00\u81F4\u7684\uFF0C\u90FD\u662F\u8C03\u7528\u7684 <code>mountEffectImpl</code> \u65B9\u6CD5\uFF0C\u5728\u4F7F\u7528\u4E0A\u4E5F\u6CA1\u4EC0\u4E48\u5DEE\u5F02\uFF0C\u57FA\u672C\u53EF\u4EE5\u76F4\u63A5\u66FF\u6362\u3002</p></li></ul><p><strong>\u4E0D\u540C\u70B9</strong></p><p>\u4F7F\u7528\u573A\u666F\uFF1A <code>useEffect</code> \u5728 React \u7684\u6E32\u67D3\u8FC7\u7A0B\u4E2D\u662F\u88AB\u5F02\u6B65\u8C03\u7528\u7684\uFF0C\u7528\u4E8E\u7EDD\u5927\u591A\u6570\u573A\u666F\uFF1B\u800C <code>useLayoutEffect</code> \u4F1A\u5728\u6240\u6709\u7684 DOM \u53D8\u66F4\u4E4B\u540E\u540C\u6B65\u8C03\u7528\uFF0C\u4E3B\u8981\u7528\u4E8E\u5904\u7406 DOM \u64CD\u4F5C\u3001\u8C03\u6574\u6837\u5F0F\u3001\u907F\u514D\u9875\u9762\u95EA\u70C1\u7B49\u95EE\u9898\u3002\u4E5F\u6B63\u56E0\u4E3A\u662F\u540C\u6B65\u5904\u7406\uFF0C\u6240\u4EE5\u9700\u8981\u907F\u514D\u5728 <code>useLayoutEffect</code> \u505A\u8BA1\u7B97\u91CF\u8F83\u5927\u7684\u8017\u65F6\u4EFB\u52A1\u4ECE\u800C\u9020\u6210\u963B\u585E\u3002</p><p>\u4F7F\u7528\u6548\u679C\uFF1A <code>useEffect</code> \u662F\u6309\u7167\u987A\u5E8F\u6267\u884C\u4EE3\u7801\u7684\uFF0C\u6539\u53D8\u5C4F\u5E55\u50CF\u7D20\u4E4B\u540E\u6267\u884C\uFF08\u5148\u6E32\u67D3\uFF0C\u540E\u6539\u53D8DOM\uFF09\uFF0C\u5F53\u6539\u53D8\u5C4F\u5E55\u5185\u5BB9\u65F6\u53EF\u80FD\u4F1A\u4EA7\u751F\u95EA\u70C1\uFF1B<code>useLayoutEffect</code> \u662F\u6539\u53D8\u5C4F\u5E55\u50CF\u7D20\u4E4B\u524D\u5C31\u6267\u884C\u4E86\uFF08\u4F1A\u63A8\u8FDF\u9875\u9762\u663E\u793A\u7684\u4E8B\u4EF6\uFF0C\u5148\u6539\u53D8DOM\u540E\u6E32\u67D3\uFF09\uFF0C\u4E0D\u4F1A\u4EA7\u751F\u95EA\u70C1\u3002<code>useLayoutEffect</code> \u603B\u662F\u6BD4 <code>useEffect</code> \u5148\u6267\u884C\u3002</p><p>\u5728\u672A\u6765\u7684\u8D8B\u52BF\u4E0A\uFF0C\u4E24\u4E2A API \u662F\u4F1A\u957F\u671F\u5171\u5B58\u7684\uFF0C\u6682\u65F6\u6CA1\u6709\u5220\u51CF\u5408\u5E76\u7684\u8BA1\u5212\uFF0C\u9700\u8981\u5F00\u53D1\u8005\u6839\u636E\u573A\u666F\u53BB\u81EA\u884C\u9009\u62E9\u3002React \u56E2\u961F\u7684\u5EFA\u8BAE\u975E\u5E38\u5B9E\u7528\uFF0C\u5982\u679C\u5B9E\u5728\u5206\u4E0D\u6E05\uFF0C\u5148\u7528 <code>useEffect</code>\uFF0C\u4E00\u822C\u95EE\u9898\u4E0D\u5927\uFF1B\u5982\u679C\u9875\u9762\u6709\u5F02\u5E38\uFF0C\u518D\u76F4\u63A5\u66FF\u6362\u4E3A <code>useLayoutEffect</code> \u5373\u53EF</p><h3 id="react-hooks\u5728\u5E73\u65F6\u5F00\u53D1\u4E2D\u9700\u8981\u6CE8\u610F\u7684\u95EE\u9898\u548C\u539F\u56E0" tabindex="-1"><a class="header-anchor" href="#react-hooks\u5728\u5E73\u65F6\u5F00\u53D1\u4E2D\u9700\u8981\u6CE8\u610F\u7684\u95EE\u9898\u548C\u539F\u56E0" aria-hidden="true">#</a> React Hooks\u5728\u5E73\u65F6\u5F00\u53D1\u4E2D\u9700\u8981\u6CE8\u610F\u7684\u95EE\u9898\u548C\u539F\u56E0</h3><p><strong>\u4E0D\u8981\u5728\u5FAA\u73AF\uFF0C\u6761\u4EF6\u6216\u5D4C\u5957\u51FD\u6570\u4E2D\u8C03\u7528Hook\uFF0C\u5FC5\u987B\u59CB\u7EC8\u5728 React\u51FD\u6570\u7684\u9876\u5C42\u4F7F\u7528Hook</strong></p><p>\u8FD9\u662F\u56E0\u4E3A React \u9700\u8981\u5229\u7528\u8C03\u7528\u987A\u5E8F\u6765\u6B63\u786E\u66F4\u65B0\u76F8\u5E94\u7684\u72B6\u6001\uFF0C\u4EE5\u53CA\u8C03\u7528\u76F8\u5E94\u7684\u94A9\u5B50\u51FD\u6570\u3002\u4E00\u65E6\u5728\u5FAA\u73AF\u6216\u6761\u4EF6\u5206\u652F\u8BED\u53E5\u4E2D\u8C03\u7528 Hook\uFF0C\u5C31\u5BB9\u6613\u5BFC\u81F4\u8C03\u7528\u987A\u5E8F\u7684\u4E0D\u4E00\u81F4\u6027\uFF0C\u4ECE\u800C\u4EA7\u751F\u96BE\u4EE5\u9884\u6599\u5230\u7684\u540E\u679C</p><p><strong>\u4F7F\u7528useState\u65F6\u5019\uFF0C\u4F7F\u7528push\uFF0Cpop\uFF0Csplice\u7B49\u76F4\u63A5\u66F4\u6539\u6570\u7EC4\u5BF9\u8C61\u7684\u5751</strong></p><p>\u4F7F\u7528push\u76F4\u63A5\u66F4\u6539\u6570\u7EC4\u65E0\u6CD5\u83B7\u53D6\u5230\u65B0\u503C\uFF0C\u5E94\u8BE5\u91C7\u7528\u6790\u6784\u65B9\u5F0F\uFF0C\u4F46\u662F\u5728class\u91CC\u9762\u4E0D\u4F1A\u6709\u8FD9\u4E2A\u95EE\u9898\u3002\u4EE3\u7801\u793A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Indicatorfilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token punctuation">[</span>num<span class="token punctuation">,</span>setNums<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token function-variable function">test</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u91CC\u5751\u662F\u76F4\u63A5\u91C7\u7528push\u53BB\u66F4\u65B0num</span>
    <span class="token comment">// setNums(num)\u662F\u65E0\u6CD5\u66F4\u65B0num\u7684</span>
    <span class="token comment">// \u5FC5\u987B\u4F7F\u7528num = [...num ,1]</span>
    num<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token comment">// num = [...num ,1]</span>
    <span class="token function">setNums</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&#39;filter&#39;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>div onClick<span class="token operator">=</span><span class="token punctuation">{</span>test<span class="token punctuation">}</span><span class="token operator">&gt;</span>\u6D4B\u8BD5<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
          <span class="token punctuation">{</span>num<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span>index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
              <span class="token operator">&lt;</span>div key<span class="token operator">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>item<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Indicatorfilter</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span><span class="token operator">&lt;</span>any<span class="token punctuation">,</span>any<span class="token operator">&gt;</span><span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">props</span><span class="token operator">:</span>any</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">nums</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>test <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">// class\u91C7\u7528\u540C\u6837\u7684\u65B9\u5F0F\u662F\u6CA1\u6709\u95EE\u9898\u7684</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>nums<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">nums</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>nums
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">let</span> <span class="token punctuation">{</span>nums<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state
      <span class="token keyword">return</span><span class="token punctuation">(</span>
          <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
              <span class="token operator">&lt;</span>div onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>test<span class="token punctuation">}</span><span class="token operator">&gt;</span>\u6D4B\u8BD5<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
                  <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
                      <span class="token punctuation">{</span>nums<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">item</span><span class="token operator">:</span>any<span class="token punctuation">,</span><span class="token literal-property property">index</span><span class="token operator">:</span>number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
                          <span class="token operator">&lt;</span>div key<span class="token operator">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>item<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
                      <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>

      <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="react-hooks-\u548C\u751F\u547D\u5468\u671F\u7684\u5173\u7CFB" tabindex="-1"><a class="header-anchor" href="#react-hooks-\u548C\u751F\u547D\u5468\u671F\u7684\u5173\u7CFB" aria-hidden="true">#</a> React Hooks \u548C\u751F\u547D\u5468\u671F\u7684\u5173\u7CFB\uFF1F</h3><p>\u51FD\u6570\u7EC4\u4EF6 \u7684\u672C\u8D28\u662F\u51FD\u6570\uFF0C\u6CA1\u6709 <code>state</code> \u7684\u6982\u5FF5\u7684\uFF0C\u56E0\u6B64\u4E0D\u5B58\u5728\u751F\u547D\u5468\u671F\u4E00\u8BF4\uFF0C\u4EC5\u4EC5\u662F\u4E00\u4E2A <code>render</code> \u51FD\u6570\u800C\u5DF2\u3002\u4F46\u662F\u5F15\u5165 Hooks \u4E4B\u540E\u5C31\u53D8\u5F97\u4E0D\u540C\u4E86\uFF0C\u5B83\u80FD\u8BA9\u7EC4\u4EF6\u5728\u4E0D\u4F7F\u7528 <code>class</code> \u7684\u60C5\u51B5\u4E0B\u62E5\u6709 <code>state</code>\uFF0C\u6240\u4EE5\u5C31\u6709\u4E86\u751F\u547D\u5468\u671F\u7684\u6982\u5FF5\uFF0C\u6240\u8C13\u7684\u751F\u547D\u5468\u671F\u5176\u5B9E\u5C31\u662F <code>useState</code>\u3001 <code>useEffect()</code> \u548C <code>useLayoutEffect()</code></p><p>\u5373\uFF1AHooks \u7EC4\u4EF6\uFF08\u4F7F\u7528\u4E86Hooks\u7684\u51FD\u6570\u7EC4\u4EF6\uFF09\u6709\u751F\u547D\u5468\u671F\uFF0C\u800C\u51FD\u6570\u7EC4\u4EF6\uFF08\u672A\u4F7F\u7528Hooks\u7684\u51FD\u6570\u7EC4\u4EF6\uFF09\u662F\u6CA1\u6709\u751F\u547D\u5468\u671F\u7684</p><p>\u4E0B\u9762\u662F\u5177\u4F53\u7684 class \u4E0E Hooks \u7684\u751F\u547D\u5468\u671F\u5BF9\u5E94\u5173\u7CFB\uFF1A</p><p><strong>constructor</strong></p><p>\u51FD\u6570\u7EC4\u4EF6\u4E0D\u9700\u8981\u6784\u9020\u51FD\u6570\uFF0C\u53EF\u4EE5\u901A\u8FC7\u8C03\u7528 <strong>useState \u6765\u521D\u59CB\u5316 state</strong></p><p><code>const [num, UpdateNum] = useState(0)</code></p>`,81),M={href:"https://zh-hans.reactjs.org/docs/react-component.html#static-getderivedstatefromprops",target:"_blank",rel:"noopener noreferrer"},q=t("getDerivedStateFromProps"),P=e(`<p>\u4E00\u822C\u60C5\u51B5\u4E0B\uFF0C\u6211\u4EEC\u4E0D\u9700\u8981\u4F7F\u7528\u5B83\uFF0C\u53EF\u4EE5\u5728\u6E32\u67D3\u8FC7\u7A0B\u4E2D\u66F4\u65B0 <code>state</code>\uFF0C\u4EE5\u8FBE\u5230\u5B9E\u73B0 <code>getDerivedStateFromProps</code> \u7684\u76EE\u7684</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">ScrollView</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>row<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token punctuation">[</span>isScrollingDown<span class="token punctuation">,</span> setIsScrollingDown<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token punctuation">[</span>prevRow<span class="token punctuation">,</span> setPrevRow<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>row <span class="token operator">!==</span> prevRow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Row \u81EA\u4E0A\u6B21\u6E32\u67D3\u4EE5\u6765\u53D1\u751F\u8FC7\u6539\u53D8\u3002\u66F4\u65B0 isScrollingDown\u3002</span>
    <span class="token function">setIsScrollingDown</span><span class="token punctuation">(</span>prevRow <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> row <span class="token operator">&gt;</span> prevRow<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setPrevRow</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Scrolling down: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>isScrollingDown<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>shouldComponentUpdate</strong></p><p><code>shouldComponentUpdate(nextProps, nextState)</code></p><p>\u6839\u636E <code>shouldComponentUpdate()</code> \u7684\u8FD4\u56DE\u503C\uFF0C\u5224\u65AD React \u7EC4\u4EF6\u7684\u8F93\u51FA\u662F\u5426\u53D7\u5F53\u524D <code>state</code> \u6216 <code>props</code> \u66F4\u6539\u7684\u5F71\u54CD\u3002\u9ED8\u8BA4\u884C\u4E3A\u662F <code>state</code> \u6BCF\u6B21\u53D1\u751F\u53D8\u5316\u7EC4\u4EF6\u90FD\u4F1A\u91CD\u65B0\u6E32\u67D3</p><p>\u53EF\u4EE5\u7528 <strong>React.memo</strong> \u5305\u88F9\u4E00\u4E2A\u7EC4\u4EF6\u6765\u5BF9\u5B83\u7684 <code>props</code> \u8FDB\u884C\u6D45\u6BD4\u8F83</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Button <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">memo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  <span class="token comment">// \u5177\u4F53\u7684\u7EC4\u4EF6});</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF1A<code>React.memo \u7B49\u6548\u4E8E</code> <code>PureComponent</code>\uFF0C\u5B83\u53EA\u6D45\u6BD4\u8F83 <code>props</code></p><p><strong>componentWillUnmount</strong></p><p>\u76F8\u5F53\u4E8E <code>useEffect</code> \u91CC\u9762\u8FD4\u56DE\u7684 <code>cleanup</code> \u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// componentDidMount/componentWillUnmount</span>
<span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token comment">// \u9700\u8981\u5728 componentDidMount \u6267\u884C\u7684\u5185\u5BB9</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">cleanup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u9700\u8981\u5728 componentWillUnmount \u6267\u884C\u7684\u5185\u5BB9      </span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>componentDidCatch and getDerivedStateFromError\uFF1A\u76EE\u524D\u8FD8\u6CA1\u6709\u8FD9\u4E9B\u65B9\u6CD5\u7684 Hook \u7B49\u4EF7\u5199\u6CD5</strong></p>`,12),L={href:"https://juejin.cn/post/6940942549305524238#heading-22",target:"_blank",rel:"noopener noreferrer"},O=t("React \u9762\u8BD5\u9898"),W=n("br",null,null,-1),U={href:"https://github.com/7kms/react-illustration-series",target:"_blank",rel:"noopener noreferrer"},T=t("\u56FE\u89E3 React \u6E90\u7801\u7CFB\u5217"),z=n("br",null,null,-1),V={href:"https://jancat.github.io/post/2019/translation-usememo-and-usecallback/",target:"_blank",rel:"noopener noreferrer"},F=t("\u4EC0\u4E48\u65F6\u5019\u4F7F\u7528 useMemo \u548C useCallback"),B=n("br",null,null,-1),Q={href:"https://juejin.cn/post/6844903799119675406",target:"_blank",rel:"noopener noreferrer"},A=t("useState\u6E90\u7801\u6D45\u6790");function N($,Y){const s=l("ExternalLinkIcon");return o(),c("div",null,[b,n("blockquote",null,[n("p",null,[n("a",f,[g,a(s)]),y,n("a",h,[w,a(s)])])]),E,n("p",null,[n("a",x,[S,a(s)])]),j,n("blockquote",null,[n("p",null,[n("a",D,[C,a(s)])])]),R,n("blockquote",null,[n("p",null,[n("a",H,[I,a(s)])])]),_,n("p",null,[n("strong",null,[n("a",M,[q,a(s)])])]),P,n("blockquote",null,[n("p",null,[n("a",L,[O,a(s)]),W,n("a",U,[T,a(s)]),z,n("a",V,[F,a(s)]),B,n("a",Q,[A,a(s)])])])])}var K=p(m,[["render",N],["__file","Hook.html.vue"]]);export{K as default};
