import{_ as a,o as e,c as t,b as n,a as o,e as p,d as c,r as l}from"./app.7eca7f1a.js";const i={},u={href:"https://juejin.im/user/5c2596cd6fb9a04a016464c3/posts",target:"_blank",rel:"noopener noreferrer"},r=p("React \u6E90\u7801\u5206\u6790"),d=c(`<h1 id="component" tabindex="-1"><a class="header-anchor" href="#component" aria-hidden="true">#</a> Component</h1><p>\u521B\u5EFA\u7EC4\u4EF6\u7684\u65B9\u5F0F\u4E4B\u5C31\u662F\u4E00\u521B\u5EFA\u4E00\u4E2A\u7EE7\u627F <code>React.Component</code> \u7684\u7C7B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Welcome</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  
    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>   
    <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token operator">=</span><span class="token punctuation">{</span> <span class="token punctuation">}</span> 
  <span class="token punctuation">}</span>  
  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>Hello<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6E90\u7801\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u5B9A\u4E49" aria-hidden="true">#</a> \u6E90\u7801\u5B9A\u4E49</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">Component</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context<span class="token punctuation">,</span> updater</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>props <span class="token operator">=</span> props<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>context <span class="token operator">=</span> context<span class="token punctuation">;</span> <span class="token comment">// If a hllComponent has string refs, we will assign a different object later.</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>refs <span class="token operator">=</span> emptyObject<span class="token punctuation">;</span> <span class="token comment">// We initialize the default updater but the real one gets injected by the</span>
    <span class="token comment">// renderer.</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>updater <span class="token operator">=</span> updater <span class="token operator">||</span> ReactNoopUpdateQueue<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token class-name">Component</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>isReactComponent <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/**
   * \u4F7F\u7528setState\u6765\u6539\u53D8Component\u5185\u90E8\u7684\u53D8\u91CF
   * this.state\u5E76\u4E0D\u662F\u7ACB\u5373\u66F4\u65B0\u7684\uFF0C\u6240\u4EE5\u5728\u8C03\u7528this.setState\u540E\u53EF\u80FD \u4E0D\u80FD \u62FF\u5230\u65B0\u503C
   * \u4E0D\u80FD\u4FDD\u8BC1this.state\u662F\u540C\u6B65\u7684\uFF08\u5B83\u4E5F\u4E0D\u662F\u5F02\u6B65\u7684\uFF09\uFF0C\u4F7F\u7528\u56DE\u8C03\u83B7\u53D6\u6700\u65B0\u503C
   * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>object<span class="token operator">|</span><span class="token keyword">function</span><span class="token punctuation">}</span></span> \u53EF\u4EE5\u662FObject/Function
   *        produce next partial state to be merged with current state.
   * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">?</span><span class="token keyword">function</span><span class="token punctuation">}</span></span> <span class="token parameter">callback</span> Called after state is updated.
   * <span class="token keyword">@final</span>
   * <span class="token keyword">@protected</span>
   */</span>

  <span class="token class-name">Component</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">setState</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">partialState<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> partialState <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> partialState <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">||</span> partialState <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span> <span class="token string">&quot;setState(...): takes an object of state variables to update or a function which returns an object of state variables.&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>updater<span class="token punctuation">.</span><span class="token function">enqueueSetState</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> partialState<span class="token punctuation">,</span> callback<span class="token punctuation">,</span> <span class="token string">&#39;setState&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token doc-comment comment">/**
   * \u5F3A\u5236Component\u66F4\u65B0\u4E00\u6B21\uFF0C\u65E0\u8BBAprops/state\u662F\u5426\u66F4\u65B0
   * forceUpdate\u4E0D\u8C03\u7528shouldComponentUpdate\u65B9\u6CD5\uFF0C\u4F46\u4F1A\u8C03\u7528componentWillUpdate\u548CcomponentDidUpdate\u65B9\u6CD5
   *
   * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">?</span><span class="token keyword">function</span><span class="token punctuation">}</span></span> <span class="token parameter">callback</span> Called after update is complete.
   * <span class="token keyword">@final</span>
   * <span class="token keyword">@protected</span>
   */</span>

  <span class="token class-name">Component</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">forceUpdate</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>updater<span class="token punctuation">.</span><span class="token function">enqueueForceUpdate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> callback<span class="token punctuation">,</span> <span class="token string">&#39;forceUpdate&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u89E3\u6790\uFF1A</p><ul><li><p><code>React.Component()</code> \u53EA\u6D89\u53CA\u4E86 <code>props/context/refs/updater/isReactComponent/setState/forceUpdate</code>\uFF0C\u5176\u4ED6\u5747\u6CA1\u6709\u81EA\u5DF1\u5B9E\u73B0</p></li><li><p><code>setState()</code> \u662F <code>Component</code> \u539F\u578B\u4E0A\u7684\u65B9\u6CD5\uFF0C\u5176\u672C\u8D28\u662F\u8C03\u7528 <code>ReactNoopUpdateQueue.js</code> \u4E2D\u7684 <code>enqueueSetState()</code> \u65B9\u6CD5</p></li></ul><h2 id="purecomponent" tabindex="-1"><a class="header-anchor" href="#purecomponent" aria-hidden="true">#</a> PureComponent</h2><p><code>React.PureComponent</code> \u4E0E <code>React.Component</code> \u5F88\u76F8\u4F3C\u3002\u4E24\u8005\u7684\u533A\u522B\u5728\u4E8E <code>React.Component</code> \u5E76\u672A\u5B9E\u73B0 <code>shouldComponentUpdate()</code>\uFF0C\u800C <code>React.PureComponent</code> \u4E2D\u4EE5\u6D45\u5C42\u5BF9\u6BD4 <code>prop</code> \u548C <code>state</code> \u7684\u65B9\u5F0F\u6765\u5B9E\u73B0\u4E86\u8BE5\u51FD\u6570</p><p>\u5BF9\u4E8E\u76F8\u540C\u7684 <code>props</code> \u548C <code>state</code> \u7EC4\u4EF6\u4E0D\u4F1A\u91CD\u65B0\u6E32\u67D3\uFF0C\u6240\u4EE5\u5728\u67D0\u4E9B\u60C5\u51B5\u4E0B\u4F7F\u7528 <code>React.PureComponent</code> \u53EF\u63D0\u9AD8\u6027\u80FD</p><h3 id="\u6E90\u7801\u5B9A\u4E49-1" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u5B9A\u4E49-1" aria-hidden="true">#</a> \u6E90\u7801\u5B9A\u4E49</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u865A\u62DF\u7EC4\u4EF6</span>
<span class="token keyword">function</span> <span class="token function">ComponentDummy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">//ComponentDummy\u7684\u539F\u578B \u6307\u5411 Component\u7684\u539F\u578B</span>
<span class="token class-name">ComponentDummy</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token class-name">Component</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">PureComponent</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> context<span class="token punctuation">,</span> updater</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>props <span class="token operator">=</span> props<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>context <span class="token operator">=</span> context<span class="token punctuation">;</span> <span class="token comment">// If a hllComponent has string refs, we will assign a different object later.</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>refs <span class="token operator">=</span> emptyObject<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>updater <span class="token operator">=</span> updater <span class="token operator">||</span> ReactNoopUpdateQueue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u5C06Component\u7684\u65B9\u6CD5\u62F7\u8D1D\u5230pureComponentPrototype\u4E0A</span>
<span class="token comment">// \u7528ComponentDummy\u7684\u539F\u56E0\u662F\u4E3A\u4E86\u4E0D\u76F4\u63A5\u5B9E\u4F8B\u5316\u4E00\u4E2AComponent\u5B9E\u4F8B\uFF0C\u53EF\u4EE5\u51CF\u5C11\u4E00\u4E9B\u5185\u5B58\u4F7F\u7528</span>
<span class="token keyword">var</span> pureComponentPrototype <span class="token operator">=</span> <span class="token class-name">PureComponent</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ComponentDummy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
pureComponentPrototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> PureComponent<span class="token punctuation">;</span> <span class="token comment">// Avoid an extra prototype jump for these methods.</span>

<span class="token comment">//\u907F\u514D\u591A\u4E00\u6B21\u539F\u578B\u94FE\u67E5\u627E,\u56E0\u4E3A\u4E0A\u9762\u4E24\u53E5\u5DF2\u7ECF\u8BA9PureComponent\u7EE7\u627F\u4E86Component</span>
<span class="token comment">//\u4E0B\u9762\u591A\u5199\u4E86\u4E00\u53E5Object.assign()\uFF0C\u662F\u4E3A\u4E86\u907F\u514D\u591A\u4E00\u6B21\u539F\u578B\u94FE\u67E5\u627E</span>
<span class="token comment">// \u5C06Component.prototype\u4E0A\u7684\u65B9\u6CD5\u90FD\u590D\u5236\u5230PureComponent.prototype\u4E0A</span>
<span class="token function">_assign</span><span class="token punctuation">(</span>pureComponentPrototype<span class="token punctuation">,</span> <span class="token class-name">Component</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6DFB\u52A0\u4E86isPureReactComponent\u5C5E\u6027\u53BB\u8868\u793A\u8BE5Component\u662FPureComponent</span>
pureComponentPrototype<span class="token punctuation">.</span>isPureReactComponent <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u89E3\u6790\uFF1A</p><ol><li><code>const pureComponentPrototype = (PureComponent.prototype = new ComponentDummy())</code></li></ol><p>\u65B0\u5EFA\u4E86\u7A7A\u65B9\u6CD5 <code>ComponentDummy</code> \uFF0C\u5E76\u7EE7\u627F <code>Component</code> \u7684\u539F\u578B; <code>PureComponent.prototype</code> \u7B49\u4E8E <code>ComponentDummy</code> \u7684\u5B9E\u4F8B</p><p>\u8FD9\u6837\u505A\u7684\u76EE\u7684\u662F\uFF1A\u5982\u679C\u8BA9 <code>PureComponent.prototype</code> \u76F4\u63A5\u7B49\u4E8E <code>Component</code> \u7684\u5B9E\u4F8B\u5BF9\u8C61\u7684\u8BDD\uFF08\u7EE7\u627F\u539F\u578B\uFF09\uFF0C\u4F1A\u591A\u7EE7\u627F <code>Component</code> \u7684 <code>constructor</code> \uFF0C\u4F46\u662F <code>PureComponent</code> \u5DF2\u7ECF\u6709\u81EA\u5DF1\u7684 <code>constructor</code> \u4E86\uFF0C\u8FD9\u6837\u5C31\u4F1A\u591A\u6D88\u8017\u4E00\u4E9B\u5185\u5B58</p><ol start="2"><li><code>pureComponentPrototype.constructor = PureComponent</code></li></ol><p>\u539F\u578B\u7684 <code>constructor</code> \u7B49\u4E8E\u81EA\u8EAB\uFF0C\u8986\u76D6\u6389 <code>Component.prototype</code> \u7684 <code>constructor</code></p><p>1\u30012 \u5C31\u662F\u8BA9 <code>PureComponent</code> \u7EE7\u627F <code>Component</code></p><ol start="3"><li><code>_assign(pureComponentPrototype, Component.prototype);</code></li></ol><p><code>Component.prototype</code> \u4E2D\u7684\u65B9\u6CD5\u5728 <code>PureComponent.prototype</code> \u4E2D\u90FD\u6709\uFF0C\u65E0\u9700\u518D\u4ECE <code>__proto__</code> \u4E0A\u67E5\u627E\u4E86\u4E3A\u4E86\u51CF\u5C11\u4E00\u6B21\u539F\u578B\u94FE\u67E5\u627E</p><ol start="4"><li><code>pureComponentPrototype.isPureReactComponent = true</code></li></ol><p>\u5728 <code>ReactFiberClassComponent.js</code> \u4E2D\uFF0C\u6709\u5BF9 <code>isPureReactComponent</code> \u7684\u5224\u65AD\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token parameter">ctor<span class="token punctuation">.</span>prototype <span class="token operator">&amp;&amp;</span> ctor<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>isPureReactComponent</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">return</span> <span class="token punctuation">(</span> <span class="token operator">!</span><span class="token function">shallowEqual</span><span class="token punctuation">(</span>oldProps<span class="token punctuation">,</span> newProps<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">shallowEqual</span><span class="token punctuation">(</span>oldState<span class="token punctuation">,</span> newState<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6CE8\u610F\u70B9</strong></p><ul><li><p>\u6574\u4E2A React \u4E2D\u5224\u65AD Component \u7C7B \u662F\u5426\u9700\u8981\u66F4\u65B0\uFF0C\u53EA\u6709\u4E24\u4E2A\u5730\u65B9\uFF1A</p><ol><li><p>\u662F\u770B\u6709\u6CA1\u6709 <code>shouldComponentUpdate</code> \u65B9\u6CD5</p></li><li><p><code>ReactFiberClassComponent.js</code> \u4E2D\u7684 <code>checkShouldComponentUpdate()</code> \u4E2D\u5BF9 <code>PureComponent</code> \u7684\u5224\u65AD</p></li></ol></li><li><p><code>PureComponent</code> \u4E0E <code>Component</code> \u552F\u4E00\u7684\u533A\u522B\uFF1A<code>PureComponent</code> \u662F\u81EA\u5E26\u4E86\u4E00\u4E2A\u7B80\u5355\u7684 <code>shouldComponentUpdate</code> \u6765\u4F18\u5316\u66F4\u65B0\u673A\u5236\u7684</p></li></ul>`,26);function k(m,v){const s=l("ExternalLinkIcon");return e(),t("div",null,[n("p",null,[n("a",u,[r,o(s)])]),d])}var C=a(i,[["render",k],["__file","Component.html.vue"]]);export{C as default};
