import{_ as n,o as s,c as a,d as p}from"./app.910feec5.js";const t={},e=p(`<h1 id="generator" tabindex="-1"><a class="header-anchor" href="#generator" aria-hidden="true">#</a> Generator</h1><p>\u4F20\u7EDF\u7684\u7F16\u7A0B\u8BED\u8A00\uFF0C\u65E9\u6709\u5F02\u6B65\u7F16\u7A0B\u7684\u89E3\u51B3\u65B9\u6848\uFF08\u5176\u5B9E\u662F\u591A\u4EFB\u52A1\u7684\u89E3\u51B3\u65B9\u6848\uFF09\u3002\u5176\u4E2D\u6709\u4E00\u79CD\u53EB\u505A\u201C\u534F\u7A0B\u201D\uFF08coroutine\uFF09\uFF0C\u610F\u601D\u662F\u591A\u4E2A\u7EBF\u7A0B\u4E92\u76F8\u534F\u4F5C\uFF0C\u5B8C\u6210\u5F02\u6B65\u4EFB\u52A1\u3002</p><h2 id="\u534F\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u534F\u7A0B" aria-hidden="true">#</a> \u534F\u7A0B</h2><p>\u534F\u7A0B\u6709\u70B9\u50CF\u51FD\u6570\uFF0C\u53C8\u6709\u70B9\u50CF\u7EBF\u7A0B\uFF0C\u5B83\u7684\u8FD0\u884C\u6D41\u7A0B\u5927\u81F4\u5982\u4E0B\uFF1A</p><ol><li><p>\u7B2C\u4E00\u6B65\uFF0C\u534F\u7A0B A \u5F00\u59CB\u6267\u884C\uFF1B</p></li><li><p>\u7B2C\u4E8C\u6B65\uFF0C\u534F\u7A0B A \u6267\u884C\u5230\u4E00\u534A\uFF0C\u8FDB\u5165\u6682\u505C\uFF0C\u6267\u884C\u6743\u8F6C\u79FB\u5230\u534F\u7A0B B\uFF1B</p></li><li><p>\u7B2C\u4E09\u6B65\uFF0C\uFF08\u4E00\u6BB5\u65F6\u95F4\u540E\uFF09\u534F\u7A0B B \u4EA4\u8FD8\u6267\u884C\u6743\uFF1B</p></li><li><p>\u7B2C\u56DB\u6B65\uFF0C\u534F\u7A0B A \u6062\u590D\u6267\u884C\uFF1B</p></li></ol><p><strong>Generator \u51FD\u6570\u662F\u7C7B\u4F3C\u534F\u7A0B\u7684\u4E00\u79CD\u5B9E\u73B0\uFF0C\u6700\u5927\u7279\u70B9\u5C31\u662F\u53EF\u4EE5\u4EA4\u51FA\u51FD\u6570\u7684\u6267\u884C\u6743\uFF08\u5373\u6682\u505C\u6267\u884C\uFF09\u3002</strong></p><h2 id="generator\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#generator\u51FD\u6570" aria-hidden="true">#</a> Generator\u51FD\u6570</h2><p>Generator \u51FD\u6570\u662F ES6 \u63D0\u4F9B\u7684\u4E00\u79CD\u5F02\u6B65\u7F16\u7A0B\u89E3\u51B3\u65B9\u6848, \u8BED\u6CD5\u4E0A\uFF0C\u9996\u5148\u53EF\u4EE5\u628A\u5B83\u7406\u89E3\u6210\u4E00\u4E2A\u72B6\u6001\u673A\uFF0C\u5C01\u88C5\u4E86\u591A\u4E2A\u5185\u90E8\u72B6\u6001</p><p>\u6267\u884C Generator \u51FD\u6570\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u904D\u5386\u5668\u5BF9\u8C61\uFF0C\u7136\u540E\u53EF\u4EE5\u4F9D\u6B21\u904D\u5386 Generator \u51FD\u6570\u5185\u90E8\u7684\u6BCF\u4E00\u4E2A\u72B6\u6001</p><p>Generator \u51FD\u6570\u662F\u4E00\u4E2A\u666E\u901A\u51FD\u6570\uFF0C\u4F46\u662F\u6709\u4E24\u4E2A\u7279\u5F81</p><ol><li><p><code>function</code> \u5173\u952E\u5B57\u4E0E\u51FD\u6570\u540D\u4E4B\u95F4\u6709\u4E00\u4E2A\u661F\u53F7</p></li><li><p>\u51FD\u6570\u4F53\u5185\u90E8\u4F7F\u7528 <code>yield</code> \u8868\u8FBE\u5F0F\uFF0C\u5B9A\u4E49\u4E0D\u540C\u7684\u5185\u90E8\u72B6\u6001\uFF08 <code>yield</code> \u5728\u82F1\u8BED\u91CC\u7684\u610F\u601D\u5C31\u662F\u201C\u4EA7\u51FA\u201D\uFF09</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">helloWorldGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token string">&#39;ending&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> hw <span class="token operator">=</span> <span class="token function">helloWorldGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

hw<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// { value: &#39;hello&#39;, done: false }</span>
hw<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// { value: &#39;world&#39;, done: false }</span>
hw<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// { value: &#39;ending&#39;, done: true }</span>
hw<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// { value: undefined, done: true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0E\u666E\u901A\u51FD\u6570\u76F8\u6BD4\uFF0C \u8C03\u7528 Generator \u51FD\u6570\u5E76\u4E0D\u4F1A\u7ACB\u9A6C\u6267\u884C\u51FD\u6570\u4EE3\u7801\u5185\u5BB9\uFF0C\u8FD4\u56DE\u7684\u4E5F\u4E0D\u662F\u51FD\u6570\u8FD0\u884C\u7ED3\u679C\uFF0C\u800C\u662F\u4E00\u4E2A\u6307\u5411\u5185\u90E8\u72B6\u6001\u7684\u6307\u9488\u5BF9\u8C61(\u904D\u5386\u5668\u5BF9\u8C61)</p><p>\u7136\u540E\u8C03\u7528\u904D\u5386\u5668\u5BF9\u8C61\u7684 <code>next</code> \u65B9\u6CD5\uFF0C\u4F7F\u5F97\u6307\u9488\u79FB\u5411\u4E0B\u4E00\u4E2A\u72B6\u6001\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u6BCF\u6B21\u8C03\u7528 <code>next</code> \u65B9\u6CD5\uFF0C\u5185\u90E8\u6307\u9488\u5C31\u4ECE\u51FD\u6570\u5934\u90E8\u6216\u4E0A\u4E00\u6B21\u505C\u4E0B\u6765\u7684\u5730\u65B9\u5F00\u59CB\u6267\u884C\uFF0C\u76F4\u5230\u9047\u5230\u4E0B\u4E00\u4E2A <code>yield</code> \u8868\u8FBE\u5F0F\uFF08\u6216 <code>return</code> \u8BED\u53E5\uFF09\u4E3A\u6B62\u3002\u6362\u8A00\u4E4B\uFF0CGenerator \u51FD\u6570\u662F\u5206\u6BB5\u6267\u884C\u7684\uFF0C <code>yield</code> \u8868\u8FBE\u5F0F\u662F\u6682\u505C\u6267\u884C\u7684\u6807\u8BB0\uFF0C\u800C <code>next</code> \u65B9\u6CD5\u53EF\u4EE5\u6062\u590D\u6267\u884C</p><p>\u4F7F\u7528 Generator \u6709\u4E24\u4E2A\u91CD\u8981\u7684\u5173\u952E\u5B57 <code>yield</code> \u548C <code>next</code></p><h2 id="yield" tabindex="-1"><a class="header-anchor" href="#yield" aria-hidden="true">#</a> yield</h2><p>Generator \u51FD\u6570\u7C7B\u4F3C\u4E00\u79CD\u53EF\u4EE5\u6682\u505C\u6267\u884C\u7684\u51FD\u6570,<code>yield</code> \u8868\u8FBE\u5F0F\u5C31\u662F\u6682\u505C\u7684\u6807\u5FD7</p><p>\u904D\u5386\u5668\u5BF9\u8C61\u7684 <code>next</code> \u65B9\u6CD5\u7684\u8FD0\u884C\u903B\u8F91\u5982\u4E0B</p><ol><li><p>\u9047\u5230 <code>yield</code> \u8868\u8FBE\u5F0F\uFF0C\u5C31\u6682\u505C\u6267\u884C\u540E\u9762\u7684\u64CD\u4F5C\uFF0C\u5E76\u5C06\u7D27\u8DDF\u5728 <code>yield</code> \u540E\u9762\u7684\u90A3\u4E2A\u8868\u8FBE\u5F0F\u7684\u503C\uFF0C\u4F5C\u4E3A\u8FD4\u56DE\u7684\u5BF9\u8C61\u7684 <code>value</code> \u5C5E\u6027\u503C</p></li><li><p>\u4E0B\u4E00\u6B21\u8C03\u7528 <code>next</code> \u65B9\u6CD5\u65F6\uFF0C\u518D\u7EE7\u7EED\u5F80\u4E0B\u6267\u884C\uFF0C\u76F4\u5230\u9047\u5230\u4E0B\u4E00\u4E2A <code>yield</code> \u8868\u8FBE\u5F0F</p></li><li><p>\u5982\u679C\u6CA1\u6709\u518D\u9047\u5230\u65B0\u7684 <code>yield</code> \u8868\u8FBE\u5F0F\uFF0C\u5C31\u4E00\u76F4\u8FD0\u884C\u5230\u51FD\u6570\u7ED3\u675F\uFF0C\u76F4\u5230 <code>return\u8BED</code> \u53E5\u4E3A\u6B62\uFF0C\u5E76\u5C06 <code>return</code> \u8BED\u53E5\u540E\u9762\u7684\u8868\u8FBE\u5F0F\u7684\u503C\uFF0C\u4F5C\u4E3A\u8FD4\u56DE\u7684\u5BF9\u8C61\u7684 <code>value </code>\u5C5E\u6027\u503C\u3002</p></li><li><p>\u5982\u679C\u8BE5\u51FD\u6570\u6CA1\u6709 <code>return</code> \u8BED\u53E5\uFF0C\u5219\u8FD4\u56DE\u7684\u5BF9\u8C61\u7684 <code>value</code> \u5C5E\u6027\u503C\u4E3A <code>undefined</code></p></li></ol><p><strong>\u4F7F\u7528yield\u7684\u6CE8\u610F\u70B9</strong></p><ul><li><p><code>yield</code> \u8868\u8FBE\u5F0F\u53EA\u80FD\u7528\u5728 Generator \u51FD\u6570\u91CC\u9762\uFF0C\u7528\u5728\u5176\u4ED6\u5730\u65B9\u90FD\u4F1A\u62A5\u9519\u3002</p></li><li><p><code>yield</code> \u8868\u8FBE\u5F0F\u5982\u679C\u7528\u5728\u53E6\u4E00\u4E2A\u8868\u8FBE\u5F0F\u4E4B\u4E2D\uFF0C\u5FC5\u987B\u653E\u5728\u5706\u62EC\u53F7\u91CC\u9762</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span> <span class="token operator">+</span> <span class="token keyword">yield</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// SyntaxError</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span> <span class="token operator">+</span> <span class="token keyword">yield</span> <span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// SyntaxError</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">yield</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// OK</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">yield</span> <span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// OK</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>yield</code> \u8868\u8FBE\u5F0F\u7528\u4F5C\u51FD\u6570\u53C2\u6570\u6216\u653E\u5728\u8D4B\u503C\u8868\u8FBE\u5F0F\u7684\u53F3\u8FB9\uFF0C\u53EF\u4EE5\u4E0D\u52A0\u62EC\u53F7</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">foo</span><span class="token punctuation">(</span><span class="token keyword">yield</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token keyword">yield</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// OK</span>
  <span class="token keyword">let</span> input <span class="token operator">=</span> <span class="token keyword">yield</span><span class="token punctuation">;</span> <span class="token comment">// OK</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="next" tabindex="-1"><a class="header-anchor" href="#next" aria-hidden="true">#</a> next</h2><p>\u8C03\u7528 Generator \u51FD\u6570\u540E\uFF0C\u8FD4\u56DE\u7684\u904D\u5386\u5668\u5BF9\u8C61\uFF0C\u9700\u8981\u901A\u8FC7 <code>next</code> \u65B9\u6CD5\u4F9D\u6B21\u6267\u884C\u5185\u90E8\u4EE3\u7801\uFF0C\u6BCF\u6B21\u8C03\u7528 <code>next</code> \u65B9\u6CD5\uFF0C\u5185\u90E8\u6307\u9488\u5C31\u4ECE\u51FD\u6570\u5934\u90E8\u6216\u4E0A\u4E00\u6B21\u505C\u4E0B\u6765\u7684\u5730\u65B9\u5F00\u59CB\u6267\u884C\uFF0C\u76F4\u5230\u9047\u5230\u4E0B\u4E00\u4E2A <code>yield</code> \u8868\u8FBE\u5F0F\uFF08\u6216 <code>return</code> \u8BED\u53E5\uFF09\u4E3A\u6B62</p><p><strong>next \u65B9\u6CD5\u7684\u53C2\u6570</strong></p><p><code>next</code> \u65B9\u6CD5\u53EF\u4EE5\u5E26\u4E00\u4E2A\u53C2\u6570\uFF0C\u8BE5\u53C2\u6570\u5C31\u4F1A\u88AB\u5F53\u4F5C\u4E0A\u4E00\u4E2A <code>yield</code> \u8868\u8FBE\u5F0F\u7684\u8FD4\u56DE\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token boolean">true</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> reset <span class="token operator">=</span> <span class="token keyword">yield</span> i<span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>reset<span class="token punctuation">)</span> <span class="token punctuation">{</span> i <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: 0, done: false }</span>
g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: 1, done: false }</span>
g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// { value: 0, done: false }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u5148\u5B9A\u4E49\u4E86\u4E00\u4E2A\u53EF\u4EE5\u65E0\u9650\u8FD0\u884C\u7684 Generator \u51FD\u6570 <code>f</code>\uFF0C\u5982\u679C <code>next</code> \u65B9\u6CD5\u6CA1\u6709\u53C2\u6570\uFF0C\u6BCF\u6B21\u8FD0\u884C\u5230 <code>yield</code> \u8868\u8FBE\u5F0F\uFF0C\u53D8\u91CF <code>reset </code>\u7684\u503C\u603B\u662F <code>undefined </code>\u3002\u5F53 <code>next</code> \u65B9\u6CD5\u5E26\u4E00\u4E2A\u53C2\u6570 <code>true</code> \u65F6\uFF0C\u53D8\u91CF <code>reset</code> \u5C31\u88AB\u91CD\u7F6E\u4E3A\u8FD9\u4E2A\u53C2\u6570\uFF08\u5373 <code>true</code> \uFF09\uFF0C\u56E0\u6B64 <code>i</code> \u4F1A\u7B49\u4E8E <code>-1</code> \uFF0C\u4E0B\u4E00\u8F6E\u5FAA\u73AF\u5C31\u4F1A\u4ECE <code>-1</code> \u5F00\u59CB\u9012\u589E\u3002</p><p>\u518D\u770B\u4E00\u4E2A\u4F8B\u5B50</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">yield</span> <span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> z <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token punctuation">(</span>y <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>x <span class="token operator">+</span> y <span class="token operator">+</span> z<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
a<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Object{value:6, done:false}</span>
a<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Object{value:NaN, done:false}</span>
a<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Object{value:NaN, done:true}</span>

<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
b<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value:6, done:false }</span>
b<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token comment">// { value:8, done:false }</span>
b<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span> <span class="token comment">// { value:42(13+24+5), done:true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u7B2C\u4E8C\u6B21\u8FD0\u884C <code>next</code> \u65B9\u6CD5\u7684\u65F6\u5019\u4E0D\u5E26\u53C2\u6570\uFF0C\u5BFC\u81F4 <code>y</code> \u7684\u503C\u7B49\u4E8E <code>2 * undefined</code>\uFF08\u5373 <code>NaN</code> \uFF09\uFF0C\u9664\u4EE5 <code>3</code> \u4EE5\u540E\u8FD8\u662F <code>NaN</code> \uFF0C\u56E0\u6B64\u8FD4\u56DE\u5BF9\u8C61\u7684 <code>value</code> \u5C5E\u6027\u4E5F\u7B49\u4E8E <code>NaN</code> \u3002\u7B2C\u4E09\u6B21\u8FD0\u884C <code>Next</code> \u65B9\u6CD5\u7684\u65F6\u5019\u4E0D\u5E26\u53C2\u6570\uFF0C\u6240\u4EE5 <code>z</code> \u7B49\u4E8E <code>undefined</code> \uFF0C\u8FD4\u56DE\u5BF9\u8C61\u7684 <code>value</code> \u5C5E\u6027\u7B49\u4E8E <code>5 + NaN + undefined</code> \uFF0C\u5373 <code>NaN</code> \u3002</p><p>\u5982\u679C\u5411 <code>next</code> \u65B9\u6CD5\u63D0\u4F9B\u53C2\u6570\uFF0C\u8FD4\u56DE\u7ED3\u679C\u5C31\u5B8C\u5168\u4E0D\u4E00\u6837\u4E86\u3002\u4E0A\u9762\u4EE3\u7801\u7B2C\u4E00\u6B21\u8C03\u7528 <code>b</code> \u7684 <code>next</code> \u65B9\u6CD5\u65F6\uFF0C\u8FD4\u56DE <code>x+1</code> \u7684\u503C <code>6</code> \uFF1B\u7B2C\u4E8C\u6B21\u8C03\u7528 <code>next</code> \u65B9\u6CD5\uFF0C\u5C06\u4E0A\u4E00\u6B21 <code>yield</code> \u8868\u8FBE\u5F0F\u7684\u503C\u8BBE\u4E3A <code>12</code> \uFF0C\u56E0\u6B64 <code>y</code> \u7B49\u4E8E <code>24</code> \uFF0C\u8FD4\u56DE <code>y / 3</code> \u7684\u503C <code>8</code> \uFF1B\u7B2C\u4E09\u6B21\u8C03\u7528 <code>next</code> \u65B9\u6CD5\uFF0C\u5C06\u4E0A\u4E00\u6B21 <code>yield</code> \u8868\u8FBE\u5F0F\u7684\u503C\u8BBE\u4E3A <code>13</code> \uFF0C\u56E0\u6B64 <code>z</code> \u7B49\u4E8E <code>13</code> \uFF0C\u8FD9\u65F6 <code>x</code> \u7B49\u4E8E <code>5</code> \uFF0C<code>y</code> \u7B49\u4E8E <code>24</code> \uFF0C\u6240\u4EE5 <code>return</code> \u8BED\u53E5\u7684\u503C\u7B49\u4E8E <code>42</code> \u3002</p><h3 id="\u9996\u6B21next" tabindex="-1"><a class="header-anchor" href="#\u9996\u6B21next" aria-hidden="true">#</a> \u9996\u6B21next()</h3><p>\u7531\u4E8E <code>next</code> \u65B9\u6CD5\u7684\u53C2\u6570\u8868\u793A\u4E0A\u4E00\u4E2A <code>yield</code> \u8868\u8FBE\u5F0F\u7684\u8FD4\u56DE\u503C\uFF0C\u6240\u4EE5\u5728\u7B2C\u4E00\u6B21\u4F7F\u7528 <code>next</code> \u65B9\u6CD5\u65F6\uFF0C\u4F20\u9012\u53C2\u6570\u662F\u65E0\u6548\u7684\u3002V8 \u5F15\u64CE\u76F4\u63A5\u5FFD\u7565\u7B2C\u4E00\u6B21\u4F7F\u7528 <code>next</code> \u65B9\u6CD5\u65F6\u7684\u53C2\u6570\uFF0C\u53EA\u6709\u4ECE\u7B2C\u4E8C\u6B21\u4F7F\u7528 <code>next</code> \u65B9\u6CD5\u5F00\u59CB\uFF0C\u53C2\u6570\u624D\u662F\u6709\u6548\u7684\u3002</p><p>\u6240\u4EE5\u5B9E\u8D28\u4E0A\u7B2C\u4E00\u4E2A <code>next</code> \u65B9\u6CD5\u7528\u6765\u542F\u52A8\u904D\u5386\u5668\u5BF9\u8C61\uFF0C\u6240\u4EE5\u4E0D\u7528\u5E26\u6709\u53C2\u6570</p><p>\u5982\u679C\u60F3\u8981\u7B2C\u4E00\u6B21\u8C03\u7528 <code>next</code> \u65B9\u6CD5\u65F6\uFF0C\u5C31\u80FD\u591F\u8F93\u5165\u503C\uFF0C\u53EF\u4EE5\u5728 Generator \u51FD\u6570\u5916\u9762\u518D\u5305\u4E00\u5C42</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">wrapper</span><span class="token punctuation">(</span><span class="token parameter">generatorFunction</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> generatorObject <span class="token operator">=</span> <span class="token function">generatorFunction</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    generatorObject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> generatorObject<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> wrapped <span class="token operator">=</span> <span class="token function">wrapper</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">First input: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">yield</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token string">&#39;DONE&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">wrapped</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&#39;hello!&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// First input: hello!</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="for-of-\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#for-of-\u5FAA\u73AF" aria-hidden="true">#</a> for...of \u5FAA\u73AF</h3><p><code>for...of</code> \u5FAA\u73AF\u53EF\u4EE5\u81EA\u52A8\u904D\u5386 Generator \u51FD\u6570\u8FD0\u884C\u65F6\u751F\u6210\u7684 Iterator\u5BF9\u8C61\uFF0C\u4E14\u6B64\u65F6\u4E0D\u518D\u9700\u8981\u8C03\u7528 <code>next</code> \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">4</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">5</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">6</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> v <span class="token keyword">of</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1 2 3 4 5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u5229\u7528 Generator \u51FD\u6570\u548C <code>for...of</code> \u5FAA\u73AF\uFF0C\u5B9E\u73B0\u6590\u6CE2\u90A3\u5951\u6570\u5217\u7684\u4F8B\u5B50</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token punctuation">[</span>prev<span class="token punctuation">,</span> curr<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> curr<span class="token punctuation">;</span>
    <span class="token punctuation">[</span>prev<span class="token punctuation">,</span> curr<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>curr<span class="token punctuation">,</span> prev <span class="token operator">+</span> curr<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> n <span class="token keyword">of</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u539F\u751F\u7684 JavaScript \u5BF9\u8C61\u6CA1\u6709\u904D\u5386\u63A5\u53E3\uFF0C\u65E0\u6CD5\u4F7F\u7528 <code>for...of</code> \u5FAA\u73AF\uFF0C\u901A\u8FC7 Generator \u51FD\u6570\u4E3A\u5B83\u52A0\u4E0A\u8FD9\u4E2A\u63A5\u53E3\uFF0C\u5C31\u53EF\u4EE5\u7528\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">objectEntries</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> propKeys <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> propKey <span class="token keyword">of</span> propKeys<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token punctuation">[</span>propKey<span class="token punctuation">,</span> obj<span class="token punctuation">[</span>propKey<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> jane <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">first</span><span class="token operator">:</span> <span class="token string">&#39;Jane&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">last</span><span class="token operator">:</span> <span class="token string">&#39;Doe&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> <span class="token function">objectEntries</span><span class="token punctuation">(</span>jane<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// first: Jane</span>
<span class="token comment">// last: Doe</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u52A0\u4E0A\u904D\u5386\u5668\u63A5\u53E3\u7684\u53E6\u4E00\u79CD\u5199\u6CD5\u662F\uFF0C\u5C06 Generator \u51FD\u6570\u52A0\u5230\u5BF9\u8C61\u7684 <code>Symbol.iterator</code> \u5C5E\u6027\u4E0A\u9762</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">objectEntries</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> propKeys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> propKey <span class="token keyword">of</span> propKeys<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token punctuation">[</span>propKey<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">[</span>propKey<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> jane <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">first</span><span class="token operator">:</span> <span class="token string">&#39;Jane&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">last</span><span class="token operator">:</span> <span class="token string">&#39;Doe&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

jane<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">=</span> objectEntries<span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> jane<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// first: Jane</span>
<span class="token comment">// last: Doe</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9664\u4E86 <code>for...of</code> \u5FAA\u73AF\u4EE5\u5916\uFF0C\u6269\u5C55\u8FD0\u7B97\u7B26\uFF08<code>...</code>\uFF09\u3001\u89E3\u6784\u8D4B\u503C\u548C <code>Array.from</code> \u65B9\u6CD5\u5185\u90E8\u8C03\u7528\u7684\uFF0C\u90FD\u662F\u904D\u5386\u5668\u63A5\u53E3\u3002\u8FD9\u610F\u5473\u7740\uFF0C\u5B83\u4EEC\u90FD\u53EF\u4EE5\u5C06 Generator \u51FD\u6570\u8FD4\u56DE\u7684 Iterator \u5BF9\u8C61\uFF0C\u4F5C\u4E3A\u53C2\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">numbers</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">1</span>
  <span class="token keyword">yield</span> <span class="token number">2</span>
  <span class="token keyword">return</span> <span class="token number">3</span>
  <span class="token keyword">yield</span> <span class="token number">4</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6269\u5C55\u8FD0\u7B97\u7B26</span>
<span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">numbers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">// [1, 2]</span>

<span class="token comment">// Array.from \u65B9\u6CD5</span>
Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token function">numbers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// [1, 2]</span>

<span class="token comment">// \u89E3\u6784\u8D4B\u503C</span>
<span class="token keyword">let</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">numbers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
x <span class="token comment">// 1</span>
y <span class="token comment">// 2</span>

<span class="token comment">// for...of \u5FAA\u73AF</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> n <span class="token keyword">of</span> <span class="token function">numbers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="generator-prototype-throw" tabindex="-1"><a class="header-anchor" href="#generator-prototype-throw" aria-hidden="true">#</a> Generator.prototype.throw()</h2><p>Generator \u51FD\u6570\u8FD4\u56DE\u7684\u904D\u5386\u5668\u5BF9\u8C61\uFF0C\u90FD\u6709\u4E00\u4E2A <code>throw</code> \u65B9\u6CD5\uFF0C\u53EF\u4EE5\u5728\u51FD\u6570\u4F53\u5916\u629B\u51FA\u9519\u8BEF\uFF0C\u7136\u540E\u5728 Generator \u51FD\u6570\u4F53\u5185\u6355\u83B7</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">g</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5185\u90E8\u6355\u83B7&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
i<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
  i<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  i<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5916\u90E8\u6355\u83B7&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5185\u90E8\u6355\u83B7 a</span>
<span class="token comment">// \u5916\u90E8\u6355\u83B7 b</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u904D\u5386\u5668\u5BF9\u8C61i\u8FDE\u7EED\u629B\u51FA\u4E24\u4E2A\u9519\u8BEF\u3002\u7B2C\u4E00\u4E2A\u9519\u8BEF\u88AB Generator \u51FD\u6570\u4F53\u5185\u7684 <code>catch</code> \u8BED\u53E5\u6355\u83B7\u3002<code>i</code> \u7B2C\u4E8C\u6B21\u629B\u51FA\u9519\u8BEF\uFF0C\u7531\u4E8E Generator \u51FD\u6570\u5185\u90E8\u7684 <code>catch</code> \u8BED\u53E5\u5DF2\u7ECF\u6267\u884C\u8FC7\u4E86\uFF0C\u4E0D\u4F1A\u518D\u6355\u6349\u5230\u8FD9\u4E2A\u9519\u8BEF\u4E86\uFF0C\u6240\u4EE5\u8FD9\u4E2A\u9519\u8BEF\u5C31\u88AB\u629B\u51FA\u4E86 Generator \u51FD\u6570\u4F53\uFF0C\u88AB\u51FD\u6570\u4F53\u5916\u7684 <code>catch</code> \u8BED\u53E5\u6355\u83B7</p><p>\u5982\u679C Generator \u51FD\u6570\u5185\u90E8\u6CA1\u6709\u90E8\u7F72 <code>try...catch</code> \u4EE3\u7801\u5757\uFF0C\u90A3\u4E48 <code>throw</code> \u65B9\u6CD5\u629B\u51FA\u7684\u9519\u8BEF\uFF0C\u5C06\u88AB\u5916\u90E8 <code>try...catch</code> \u4EE3\u7801\u5757\u6355\u83B7</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">g</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5185\u90E8\u6355\u83B7&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
i<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
  i<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  i<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5916\u90E8\u6355\u83B7&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5916\u90E8\u6355\u83B7 a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C Generator \u51FD\u6570\u5185\u90E8\u548C\u5916\u90E8\uFF0C\u90FD\u6CA1\u6709\u90E8\u7F72 <code>try...catch</code> \u4EE3\u7801\u5757\uFF0C\u90A3\u4E48\u7A0B\u5E8F\u5C06\u62A5\u9519\uFF0C\u76F4\u63A5\u4E2D\u65AD\u6267\u884C</p><h3 id="\u4F7F\u7528throw\u7684\u6CE8\u610F\u70B9" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528throw\u7684\u6CE8\u610F\u70B9" aria-hidden="true">#</a> \u4F7F\u7528throw\u7684\u6CE8\u610F\u70B9</h3><p><strong><code>throw</code> \u65B9\u6CD5\u629B\u51FA\u7684\u9519\u8BEF\u8981\u88AB\u5185\u90E8\u6355\u83B7\uFF0C\u524D\u63D0\u662F\u5FC5\u987B\u81F3\u5C11\u6267\u884C\u8FC7\u4E00\u6B21 <code>next</code> \u65B9\u6CD5</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5185\u90E8\u6355\u83B7&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
g<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Uncaught 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>g.throw(1)</code> \u6267\u884C\u65F6\uFF0C<code>next</code> \u65B9\u6CD5\u4E00\u6B21\u90FD\u6CA1\u6709\u6267\u884C\u8FC7\u3002\u8FD9\u65F6\uFF0C\u629B\u51FA\u7684\u9519\u8BEF\u4E0D\u4F1A\u88AB\u5185\u90E8\u6355\u83B7\uFF0C\u800C\u662F\u76F4\u63A5\u5728\u5916\u90E8\u629B\u51FA\uFF0C\u5BFC\u81F4\u7A0B\u5E8F\u51FA\u9519\u3002</p><p>\u8FD9\u79CD\u884C\u4E3A\u5176\u5B9E\u5F88\u597D\u7406\u89E3\uFF0C\u56E0\u4E3A\u7B2C\u4E00\u6B21\u6267\u884C <code>next</code> \u65B9\u6CD5\uFF0C\u7B49\u540C\u4E8E\u542F\u52A8\u6267\u884C Generator \u51FD\u6570\u7684\u5185\u90E8\u4EE3\u7801\uFF0C\u5426\u5219 Generator \u51FD\u6570\u8FD8\u6CA1\u6709\u5F00\u59CB\u6267\u884C\uFF0C\u8FD9\u65F6 <code>throw</code> \u65B9\u6CD5\u629B\u9519\u53EA\u53EF\u80FD\u629B\u51FA\u5728\u51FD\u6570\u5916\u90E8</p><p><strong>throw\u65B9\u6CD5\u88AB\u6355\u83B7\u4EE5\u540E\uFF0C\u4F1A\u9644\u5E26\u6267\u884C\u4E0B\u4E00\u6761yield\u8868\u8FBE\u5F0F\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4F1A\u9644\u5E26\u6267\u884C\u4E00\u6B21next\u65B9\u6CD5</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">gen</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">yield</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// a</span>
g<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// b</span>
g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// c</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>g.throw</code> \u65B9\u6CD5\u88AB\u6355\u83B7\u4EE5\u540E\uFF0C\u81EA\u52A8\u6267\u884C\u4E86\u4E00\u6B21 <code>next</code> \u65B9\u6CD5\uFF0C\u6240\u4EE5\u4F1A\u6253\u5370 <code>b</code>\u3002\u53E6\u5916\uFF0C\u4E5F\u53EF\u4EE5\u770B\u5230\uFF0C\u53EA\u8981 Generator \u51FD\u6570\u5185\u90E8\u90E8\u7F72\u4E86<code>try...catch</code> \u4EE3\u7801\u5757\uFF0C\u90A3\u4E48\u904D\u5386\u5668\u7684 <code>throw</code> \u65B9\u6CD5\u629B\u51FA\u7684\u9519\u8BEF\uFF0C\u4E0D\u5F71\u54CD\u4E0B\u4E00\u6B21\u904D\u5386</p><p>Generator \u51FD\u6570\u4F53\u5916\u629B\u51FA\u7684\u9519\u8BEF\uFF0C\u53EF\u4EE5\u5728\u51FD\u6570\u4F53\u5185\u6355\u83B7\uFF1B\u53CD\u8FC7\u6765\uFF0CGenerator \u51FD\u6570\u4F53\u5185\u629B\u51FA\u7684\u9519\u8BEF\uFF0C\u4E5F\u53EF\u4EE5\u88AB\u51FD\u6570\u4F53\u5916\u7684 <code>catch</code> \u6355\u83B7</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> y <span class="token operator">=</span> x<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> y<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> it <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { value:3, done:false }</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
  it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="generator-prototype-return" tabindex="-1"><a class="header-anchor" href="#generator-prototype-return" aria-hidden="true">#</a> Generator.prototype.return()</h2><p>Generator \u51FD\u6570\u8FD4\u56DE\u7684\u904D\u5386\u5668\u5BF9\u8C61\uFF0C\u8FD8\u6709\u4E00\u4E2A <code>return</code> \u65B9\u6CD5\uFF0C\u53EF\u4EE5\u8FD4\u56DE\u7ED9\u5B9A\u7684\u503C\uFF0C\u5E76\u4E14\u7EC8\u7ED3\u904D\u5386 Generator \u51FD\u6570</p><p>\u5982\u679C <code>return</code> \u6709\u4F20\u5165\u53C2\u6570\uFF0C\u5219\u8BE5\u53C2\u6570\u4F1A\u4F5C\u4E3A <strong>\u7EC8\u7ED3\u904D\u5386 Generator \u51FD\u6570</strong> \u65F6\u7684 <code>value</code> \u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">// { value: 1, done: false }</span>
g<span class="token punctuation">.</span><span class="token function">return</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span> <span class="token comment">// { value: &quot;foo&quot;, done: true }</span>
g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">// { value: undefined, done: true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u904D\u5386\u5668\u5BF9\u8C61 <code>g</code> \u8C03\u7528 <code>return</code> \u65B9\u6CD5\u540E\uFF0C\u8FD4\u56DE\u503C\u7684 <code>value</code> \u5C5E\u6027\u5C31\u662F <code>return</code> \u65B9\u6CD5\u7684\u53C2\u6570 <code>foo</code> \u3002\u5E76\u4E14\uFF0CGenerator \u51FD\u6570\u7684\u904D\u5386\u5C31\u7EC8\u6B62\u4E86\uFF0C\u8FD4\u56DE\u503C\u7684 <code>done</code> \u5C5E\u6027\u4E3A <code>true</code> \uFF0C\u4EE5\u540E\u518D\u8C03\u7528 <code>next</code> \u65B9\u6CD5\uFF0C<code>done</code> \u5C5E\u6027\u603B\u662F\u8FD4\u56DE <code>true</code></p><p>\u5982\u679C <code>return</code> \u65B9\u6CD5\u8C03\u7528\u65F6\uFF0C\u4E0D\u63D0\u4F9B\u53C2\u6570\uFF0C\u5219\u8FD4\u56DE\u503C\u7684 <code>value</code> \u5C5E\u6027\u4E3A <code>undefined</code></p><p>\u5982\u679C Generator \u51FD\u6570\u5185\u90E8\u6709 <code>try...finally</code> \u4EE3\u7801\u5757\uFF0C\u4E14\u6B63\u5728\u6267\u884C <code>try</code> \u4EE3\u7801\u5757\uFF0C\u90A3\u4E48 <code>return</code> \u65B9\u6CD5\u4F1A\u5BFC\u81F4\u7ACB\u523B\u8FDB\u5165 <code>finally</code> \u4EE3\u7801\u5757\uFF0C\u6267\u884C\u5B8C\u4EE5\u540E\uFF0C\u6574\u4E2A\u51FD\u6570\u624D\u4F1A\u7ED3\u675F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">numbers</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token number">4</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">5</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">yield</span> <span class="token number">6</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token function">numbers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: 1, done: false }</span>
g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: 2, done: false }</span>
g<span class="token punctuation">.</span><span class="token function">return</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> <span class="token comment">// { value: 4, done: false }</span>
g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: 5, done: false }</span>
g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: 7, done: true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="yield-\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#yield-\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> yield* \u8868\u8FBE\u5F0F</h2><p>\u5982\u679C\u5728 Generator \u51FD\u6570\u5185\u90E8\uFF0C\u8C03\u7528\u53E6\u4E00\u4E2A Generator \u51FD\u6570\u3002\u9700\u8981\u5728\u524D\u8005\u7684\u51FD\u6570\u4F53\u5185\u90E8\uFF0C\u81EA\u5DF1\u624B\u52A8\u5B8C\u6210\u904D\u5386</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;x&#39;</span><span class="token punctuation">;</span>
  <span class="token comment">// \u624B\u52A8\u904D\u5386 foo()</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> v <span class="token keyword">of</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// x</span>
<span class="token comment">// a</span>
<span class="token comment">// b</span>
<span class="token comment">// y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ES6 \u63D0\u4F9B\u4E86 <code>yield*</code> \u8868\u8FBE\u5F0F\uFF0C\u7528\u6765\u89E3\u51B3\u4E00\u4E2A Generator \u51FD\u6570\u91CC\u9762\u6267\u884C\u53E6\u4E00\u4E2A Generator \u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;x&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;x&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;x&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> v <span class="token keyword">of</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> v<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> v <span class="token keyword">of</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// &quot;x&quot;</span>
<span class="token comment">// &quot;a&quot;</span>
<span class="token comment">// &quot;b&quot;</span>
<span class="token comment">// &quot;y&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53E6\u4E2A\u4F8B\u5B50</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">inner</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;hello!&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">outer1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;open&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token function">inner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;close&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> gen <span class="token operator">=</span> <span class="token function">outer1</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token comment">// &quot;open&quot;</span>
gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u904D\u5386\u5668\u5BF9\u8C61</span>
gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token comment">// &quot;close&quot;</span>

<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">outer2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;open&#39;</span>
  <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token function">inner</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;close&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> gen <span class="token operator">=</span> <span class="token function">outer2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token comment">// &quot;open&quot;</span>
gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token comment">// &quot;hello!&quot;</span>
gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token comment">// &quot;close&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4F8B\u5B50\u4E2D\uFF0C<code>outer2</code> \u4F7F\u7528\u4E86 <code>yield*</code> \uFF0C<code>outer1</code>\u6CA1\u4F7F\u7528\u3002\u7ED3\u679C\u5C31\u662F\uFF0C<code>outer1</code> \u8FD4\u56DE\u4E00\u4E2A\u904D\u5386\u5668\u5BF9\u8C61\uFF0C<code>outer2</code> \u8FD4\u56DE\u8BE5\u904D\u5386\u5668\u5BF9\u8C61\u7684\u5185\u90E8\u503C</p><h2 id="\u4F5C\u4E3A\u5BF9\u8C61\u5C5E\u6027\u7684-generator-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u4F5C\u4E3A\u5BF9\u8C61\u5C5E\u6027\u7684-generator-\u51FD\u6570" aria-hidden="true">#</a> \u4F5C\u4E3A\u5BF9\u8C61\u5C5E\u6027\u7684 Generator \u51FD\u6570</h2><p>\u5982\u679C\u4E00\u4E2A\u5BF9\u8C61\u7684\u5C5E\u6027\u662F Generator \u51FD\u6570\uFF0C\u53EF\u4EE5\u7B80\u5199\u6210\u4E0B\u9762\u7684\u5F62\u5F0F:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">*</span> <span class="token function">myGeneratorMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    \xB7\xB7\xB7
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B49\u4EF7\u4E8E</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">myGeneratorMethod</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \xB7\xB7\xB7</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>myGeneratorMethod</code> \u5C5E\u6027\u524D\u9762\u6709\u4E00\u4E2A\u661F\u53F7\uFF0C\u8868\u793A\u8FD9\u4E2A\u5C5E\u6027\u662F\u4E00\u4E2A Generator \u51FD\u6570</p><h2 id="generator-\u51FD\u6570\u7684this" tabindex="-1"><a class="header-anchor" href="#generator-\u51FD\u6570\u7684this" aria-hidden="true">#</a> Generator \u51FD\u6570\u7684this</h2><p>Generator \u51FD\u6570\u603B\u662F\u8FD4\u56DE\u4E00\u4E2A\u904D\u5386\u5668\uFF0CES6 \u89C4\u5B9A\u8FD9\u4E2A\u904D\u5386\u5668\u662F Generator \u51FD\u6570\u7684\u5B9E\u4F8B\uFF0C\u4E5F\u7EE7\u627F\u4E86 Generator \u51FD\u6570\u7684 <code>prototype</code> \u5BF9\u8C61\u4E0A\u7684\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

g<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">hello</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token string">&#39;hi!&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

obj <span class="token keyword">instanceof</span> <span class="token class-name">g</span> <span class="token comment">// true</span>
obj<span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// &#39;hi!&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u628A <code>g</code> \u5F53\u4F5C\u666E\u901A\u7684\u6784\u9020\u51FD\u6570\uFF0C\u5E76\u4E0D\u4F1A\u751F\u6548\uFF0C\u56E0\u4E3Ag\u8FD4\u56DE\u7684\u603B\u662F\u904D\u5386\u5668\u5BF9\u8C61\uFF0C\u800C\u4E0D\u662F <code>this</code> \u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token function">g</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>a <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Generator \u51FD\u6570\u4E5F\u4E0D\u80FD\u8DDF <code>new</code> \u547D\u4EE4\u4E00\u8D77\u7528\uFF0C\u4F1A\u62A5\u9519</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token constant">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">new</span> <span class="token class-name">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// TypeError: F is not a constructor</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u53D8\u901A\u65B9\u6CD5\u3002\u9996\u5148\uFF0C\u751F\u6210\u4E00\u4E2A\u7A7A\u5BF9\u8C61\uFF0C\u4F7F\u7528 <code>call</code> \u65B9\u6CD5\u7ED1\u5B9A Generator \u51FD\u6570\u5185\u90E8\u7684 <code>this</code> \u3002\u8FD9\u6837\uFF0C\u6784\u9020\u51FD\u6570\u8C03\u7528\u4EE5\u540E\uFF0C\u8FD9\u4E2A\u7A7A\u5BF9\u8C61\u5C31\u662F Generator \u51FD\u6570\u7684\u5B9E\u4F8B\u5BF9\u8C61\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token constant">F</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token keyword">this</span><span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token keyword">this</span><span class="token punctuation">.</span>c <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> f <span class="token operator">=</span> <span class="token constant">F</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>

f<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Object {value: 2, done: false}</span>
f<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Object {value: 3, done: false}</span>
f<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// Object {value: undefined, done: true}</span>

obj<span class="token punctuation">.</span>a <span class="token comment">// 1</span>
obj<span class="token punctuation">.</span>b <span class="token comment">// 2</span>
obj<span class="token punctuation">.</span>c <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="generator-\u4E0E\u72B6\u6001\u673A" tabindex="-1"><a class="header-anchor" href="#generator-\u4E0E\u72B6\u6001\u673A" aria-hidden="true">#</a> Generator \u4E0E\u72B6\u6001\u673A</h2><p>Generator \u662F\u5B9E\u73B0\u72B6\u6001\u673A\u7684\u6700\u4F73\u7ED3\u6784\u3002\u6BD4\u5982\uFF0C\u4E0B\u9762\u7684 <code>clock</code> \u51FD\u6570\u5C31\u662F\u4E00\u4E2A\u72B6\u6001\u673A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> ticking <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token function-variable function">clock</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ticking<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Tick!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">else</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Tock!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  ticking <span class="token operator">=</span> <span class="token operator">!</span>ticking<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u7684 <code>clock</code> \u51FD\u6570\u4E00\u5171\u6709\u4E24\u79CD\u72B6\u6001\uFF08 <code>Tick</code> \u548C <code>Tock</code> \uFF09\uFF0C\u6BCF\u8FD0\u884C\u4E00\u6B21\uFF0C\u5C31\u6539\u53D8\u4E00\u6B21\u72B6\u6001\u3002\u8FD9\u4E2A\u51FD\u6570\u5982\u679C\u7528 Generator \u5B9E\u73B0\uFF0C\u5C31\u662F\u4E0B\u9762\u8FD9\u6837</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">clock</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Tick!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Tock!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="generator-\u7684\u4E0A\u4E0B\u6587" tabindex="-1"><a class="header-anchor" href="#generator-\u7684\u4E0A\u4E0B\u6587" aria-hidden="true">#</a> Generator \u7684\u4E0A\u4E0B\u6587</h2><p>JavaScript \u4EE3\u7801\u8FD0\u884C\u65F6\uFF0C\u4F1A\u4EA7\u751F\u4E00\u4E2A\u5168\u5C40\u7684\u4E0A\u4E0B\u6587\u73AF\u5883\uFF08 context\uFF0C\u53C8\u79F0\u8FD0\u884C\u73AF\u5883\uFF09\uFF0C\u5305\u542B\u4E86\u5F53\u524D\u6240\u6709\u7684\u53D8\u91CF\u548C\u5BF9\u8C61\u3002\u7136\u540E\uFF0C\u6267\u884C\u51FD\u6570\uFF08\u6216\u5757\u7EA7\u4EE3\u7801\uFF09\u7684\u65F6\u5019\uFF0C\u53C8\u4F1A\u5728\u5F53\u524D\u4E0A\u4E0B\u6587\u73AF\u5883\u7684\u4E0A\u5C42\uFF0C\u4EA7\u751F\u4E00\u4E2A\u51FD\u6570\u8FD0\u884C\u7684\u4E0A\u4E0B\u6587\uFF0C\u53D8\u6210\u5F53\u524D\uFF08active\uFF09\u7684\u4E0A\u4E0B\u6587\uFF0C\u7531\u6B64\u5F62\u6210\u4E00\u4E2A\u4E0A\u4E0B\u6587\u73AF\u5883\u7684\u5806\u6808\uFF08context stack\uFF09\u3002</p><p>\u8FD9\u4E2A\u5806\u6808\u662F\u201C\u540E\u8FDB\u5148\u51FA\u201D\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u6700\u540E\u4EA7\u751F\u7684\u4E0A\u4E0B\u6587\u73AF\u5883\u9996\u5148\u6267\u884C\u5B8C\u6210\uFF0C\u9000\u51FA\u5806\u6808\uFF0C\u7136\u540E\u518D\u6267\u884C\u5B8C\u6210\u5B83\u4E0B\u5C42\u7684\u4E0A\u4E0B\u6587\uFF0C\u76F4\u81F3\u6240\u6709\u4EE3\u7801\u6267\u884C\u5B8C\u6210\uFF0C\u5806\u6808\u6E05\u7A7A\u3002</p><p>Generator \u51FD\u6570\u4E0D\u662F\u8FD9\u6837\uFF0C\u5B83\u6267\u884C\u4EA7\u751F\u7684\u4E0A\u4E0B\u6587\u73AF\u5883\uFF0C\u4E00\u65E6\u9047\u5230 <code>yield</code> \u547D\u4EE4\uFF0C\u5C31\u4F1A\u6682\u65F6\u9000\u51FA\u5806\u6808\uFF0C\u4F46\u662F\u5E76\u4E0D\u6D88\u5931\uFF0C\u91CC\u9762\u7684\u6240\u6709\u53D8\u91CF\u548C\u5BF9\u8C61\u4F1A\u51BB\u7ED3\u5728\u5F53\u524D\u72B6\u6001\u3002\u7B49\u5230\u5BF9\u5B83\u6267\u884C <code>next</code> \u547D\u4EE4\u65F6\uFF0C\u8FD9\u4E2A\u4E0A\u4E0B\u6587\u73AF\u5883\u53C8\u4F1A\u91CD\u65B0\u52A0\u5165\u8C03\u7528\u6808\uFF0C\u51BB\u7ED3\u7684\u53D8\u91CF\u548C\u5BF9\u8C61\u6062\u590D\u6267\u884C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> g <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
  g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span>
  g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u7B2C\u4E00\u6B21\u6267\u884C <code>g.next()</code> \u65F6\uFF0CGenerator \u51FD\u6570 <code>gen</code> \u7684\u4E0A\u4E0B\u6587\u4F1A\u52A0\u5165\u5806\u6808\uFF0C\u5373\u5F00\u59CB\u8FD0\u884C <code>gen</code> \u5185\u90E8\u7684\u4EE3\u7801\u3002\u7B49\u9047\u5230 <code>yield 1</code> \u65F6\uFF0C <code>gen</code> \u4E0A\u4E0B\u6587\u9000\u51FA\u5806\u6808\uFF0C\u5185\u90E8\u72B6\u6001\u51BB\u7ED3\u3002\u7B2C\u4E8C\u6B21\u6267\u884C <code>g.next()</code> \u65F6\uFF0C<code>gen</code> \u4E0A\u4E0B\u6587\u91CD\u65B0\u52A0\u5165\u5806\u6808\uFF0C\u53D8\u6210\u5F53\u524D\u7684\u4E0A\u4E0B\u6587\uFF0C\u91CD\u65B0\u6062\u590D\u6267\u884C</p><h2 id="\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#\u5E94\u7528" aria-hidden="true">#</a> \u5E94\u7528</h2><h3 id="\u5F02\u6B65\u64CD\u4F5C\u7684\u540C\u6B65\u5316\u8868\u8FBE" tabindex="-1"><a class="header-anchor" href="#\u5F02\u6B65\u64CD\u4F5C\u7684\u540C\u6B65\u5316\u8868\u8FBE" aria-hidden="true">#</a> \u5F02\u6B65\u64CD\u4F5C\u7684\u540C\u6B65\u5316\u8868\u8FBE</h3><p><strong>\u540C\u6B65\u5316AJAX</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token string">&quot;http://some.url&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> resp <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">makeAjaxCall</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> it <span class="token operator">=</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u9010\u884C\u8BFB\u53D6\u6587\u672C\u6587\u4EF6</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">numbers</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token string">&quot;numbers.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span>eof<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">yield</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    file<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u63A7\u5236\u6D41\u7BA1\u7406" tabindex="-1"><a class="header-anchor" href="#\u63A7\u5236\u6D41\u7BA1\u7406" aria-hidden="true">#</a> \u63A7\u5236\u6D41\u7BA1\u7406</h3><p>\u5982\u679C\u6709\u4E00\u4E2A\u591A\u6B65\u64CD\u4F5C\u975E\u5E38\u8017\u65F6\uFF0C\u91C7\u7528\u56DE\u8C03\u51FD\u6570\uFF0C\u53EF\u80FD\u4F1A\u5199\u6210\u4E0B\u9762\u8FD9\u6837</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">step1</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">step2</span><span class="token punctuation">(</span>value1<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">step3</span><span class="token punctuation">(</span>value2<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">step4</span><span class="token punctuation">(</span>value3<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Do something with value4</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u91C7\u7528 Promise \u6539\u5199\u4E0A\u9762\u7684\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>step1<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>step2<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>step3<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>step4<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Do something with value4</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Handle any error from step1 through step4</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u5DF2\u7ECF\u628A\u56DE\u8C03\u51FD\u6570\uFF0C\u6539\u6210\u4E86\u76F4\u7EBF\u6267\u884C\u7684\u5F62\u5F0F\uFF0C\u4F46\u662F\u52A0\u5165\u4E86\u5927\u91CF Promise \u7684\u8BED\u6CD5\u3002Generator \u51FD\u6570\u53EF\u4EE5\u8FDB\u4E00\u6B65\u6539\u5584\u4EE3\u7801\u8FD0\u884C\u6D41\u7A0B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">longRunningTask</span><span class="token punctuation">(</span><span class="token parameter">value1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> value2 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">step1</span><span class="token punctuation">(</span>value1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> value3 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">step2</span><span class="token punctuation">(</span>value2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> value4 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">step3</span><span class="token punctuation">(</span>value3<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> value5 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">step4</span><span class="token punctuation">(</span>value4<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Do something with value4</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Handle any error from step1 through step4</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\uFF0C\u4F7F\u7528\u4E00\u4E2A\u51FD\u6570\uFF0C\u6309\u6B21\u5E8F\u81EA\u52A8\u6267\u884C\u6240\u6709\u6B65\u9AA4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">scheduler</span><span class="token punctuation">(</span><span class="token function">longRunningTask</span><span class="token punctuation">(</span>initialValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">scheduler</span><span class="token punctuation">(</span><span class="token parameter">task</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> taskObj <span class="token operator">=</span> task<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5982\u679CGenerator\u51FD\u6570\u672A\u7ED3\u675F\uFF0C\u5C31\u7EE7\u7EED\u8C03\u7528</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>taskObj<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    task<span class="token punctuation">.</span>value <span class="token operator">=</span> taskObj<span class="token punctuation">.</span>value
    <span class="token function">scheduler</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u4E0A\u9762\u8FD9\u79CD\u505A\u6CD5\uFF0C\u53EA\u9002\u5408\u540C\u6B65\u64CD\u4F5C\uFF0C\u5373\u6240\u6709\u7684 <code>task</code> \u90FD\u5FC5\u987B\u662F\u540C\u6B65\u7684\uFF0C\u4E0D\u80FD\u6709\u5F02\u6B65\u64CD\u4F5C\u3002\u56E0\u4E3A\u8FD9\u91CC\u7684\u4EE3\u7801\u4E00\u5F97\u5230\u8FD4\u56DE\u503C\uFF0C\u5C31\u7EE7\u7EED\u5F80\u4E0B\u6267\u884C\uFF0C\u6CA1\u6709\u5224\u65AD\u5F02\u6B65\u64CD\u4F5C\u4F55\u65F6\u5B8C\u6210\u3002\u5982\u679C\u8981\u63A7\u5236\u5F02\u6B65\u7684\u64CD\u4F5C\u6D41\u7A0B</p><h3 id="\u90E8\u7F72-iterator-\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#\u90E8\u7F72-iterator-\u63A5\u53E3" aria-hidden="true">#</a> \u90E8\u7F72 Iterator \u63A5\u53E3</h3><p>\u5229\u7528 Generator \u51FD\u6570\uFF0C\u53EF\u4EE5\u5728\u4EFB\u610F\u5BF9\u8C61\u4E0A\u90E8\u7F72 Iterator \u63A5\u53E3</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">iterEntries</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> key <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> myObj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">7</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> <span class="token function">iterEntries</span><span class="token punctuation">(</span>myObj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// foo 3</span>
<span class="token comment">// bar 7</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u4EE3\u7801\u4E2D\uFF0C<code>myObj</code> \u662F\u4E00\u4E2A\u666E\u901A\u5BF9\u8C61\uFF0C\u901A\u8FC7 <code>iterEntries</code> \u51FD\u6570\uFF0C\u5C31\u6709\u4E86 Iterator \u63A5\u53E3\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u53EF\u4EE5\u5728\u4EFB\u610F\u5BF9\u8C61\u4E0A\u90E8\u7F72next\u65B9\u6CD5\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u5BF9\u6570\u7EC4\u90E8\u7F72 Iterator \u63A5\u53E3\u7684\u4F8B\u5B50\uFF0C\u5C3D\u7BA1\u6570\u7EC4\u539F\u751F\u5177\u6709\u8FD9\u4E2A\u63A5\u53E3</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">makeSimpleGenerator</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">var</span> nextIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">while</span><span class="token punctuation">(</span>nextIndex <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">yield</span> array<span class="token punctuation">[</span>nextIndex<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> gen <span class="token operator">=</span> <span class="token function">makeSimpleGenerator</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;yo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ya&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token comment">// &#39;yo&#39;</span>
gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token comment">// &#39;ya&#39;</span>
gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>done  <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="generator-\u7684\u5F02\u6B65\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#generator-\u7684\u5F02\u6B65\u5E94\u7528" aria-hidden="true">#</a> Generator \u7684\u5F02\u6B65\u5E94\u7528</h3><h4 id="thunk-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#thunk-\u51FD\u6570" aria-hidden="true">#</a> Thunk \u51FD\u6570</h4><p>\u5C06\u53C2\u6570\u653E\u5230\u4E00\u4E2A\u4E34\u65F6\u51FD\u6570\u4E4B\u4E2D\uFF0C\u518D\u5C06\u8FD9\u4E2A\u4E34\u65F6\u51FD\u6570\u4F20\u5165\u51FD\u6570\u4F53\u3002\u8FD9\u4E2A\u4E34\u65F6\u51FD\u6570\u5C31\u53EB\u505A Thunk \u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">m</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> m <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">f</span><span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u7B49\u540C\u4E8E</span>

<span class="token keyword">var</span> <span class="token function-variable function">thunk</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">thunk</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">thunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u51FD\u6570 <code>f</code> \u7684\u53C2\u6570 <code>x + 5</code> \u88AB\u4E00\u4E2A\u51FD\u6570\u66FF\u6362\u4E86\u3002\u51E1\u662F\u7528\u5230\u539F\u53C2\u6570\u7684\u5730\u65B9\uFF0C\u5BF9 Thunk\u51FD\u6570\u6C42\u503C\u5373\u53EF\u3002</p><p>\u8FD9\u5C31\u662F Thunk \u51FD\u6570\u7684\u5B9A\u4E49\uFF0C\u5B83\u662F\u201C\u4F20\u540D\u8C03\u7528\u201D\u7684\u4E00\u79CD\u5B9E\u73B0\u7B56\u7565\uFF0C\u7528\u6765\u66FF\u6362\u67D0\u4E2A\u8868\u8FBE\u5F0F</p><h4 id="co-\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#co-\u6A21\u5757" aria-hidden="true">#</a> co \u6A21\u5757</h4><p>co \u6A21\u5757\u7528\u4E8E Generator \u51FD\u6570\u7684\u81EA\u52A8\u6267\u884C</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A Generator \u51FD\u6570\uFF0C\u7528\u4E8E\u4F9D\u6B21\u8BFB\u53D6\u4E24\u4E2A\u6587\u4EF6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">gen</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> f1 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;/etc/fstab&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> f2 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;/etc/shells&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>co \u6A21\u5757\u53EF\u4EE5\u8BA9\u4F60\u4E0D\u7528\u7F16\u5199 Generator \u51FD\u6570\u7684\u6267\u884C\u5668\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> co <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;co&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">co</span><span class="token punctuation">(</span>gen<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0CGenerator \u51FD\u6570\u53EA\u8981\u4F20\u5165 co \u51FD\u6570\uFF0C\u5C31\u4F1A\u81EA\u52A8\u6267\u884C\u3002</p><p>co \u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A <code>Promise</code> \u5BF9\u8C61\uFF0C\u56E0\u6B64\u53EF\u4EE5\u7528 <code>then</code> \u65B9\u6CD5\u6DFB\u52A0\u56DE\u8C03\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">co</span><span class="token punctuation">(</span>gen<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Generator \u51FD\u6570\u6267\u884C\u5B8C\u6210&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="co-\u6A21\u5757\u7684\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#co-\u6A21\u5757\u7684\u539F\u7406" aria-hidden="true">#</a> co \u6A21\u5757\u7684\u539F\u7406</h4><p>Generator \u5C31\u662F\u4E00\u4E2A\u5F02\u6B65\u64CD\u4F5C\u7684\u5BB9\u5668\u3002\u5B83\u7684\u81EA\u52A8\u6267\u884C\u9700\u8981\u4E00\u79CD\u673A\u5236\uFF0C\u5F53\u5F02\u6B65\u64CD\u4F5C\u6709\u4E86\u7ED3\u679C\uFF0C\u80FD\u591F\u81EA\u52A8\u4EA4\u56DE\u6267\u884C\u6743</p><p>\u4E24\u79CD\u65B9\u6CD5\u53EF\u4EE5\u505A\u5230\u8FD9\u4E00\u70B9</p><ol><li><p>\u56DE\u8C03\u51FD\u6570\u3002\u5C06\u5F02\u6B65\u64CD\u4F5C\u5305\u88C5\u6210 Thunk \u51FD\u6570\uFF0C\u5728\u56DE\u8C03\u51FD\u6570\u91CC\u9762\u4EA4\u56DE\u6267\u884C\u6743</p></li><li><p>Promise \u5BF9\u8C61\u3002\u5C06\u5F02\u6B65\u64CD\u4F5C\u5305\u88C5\u6210 Promise \u5BF9\u8C61\uFF0C\u7528then\u65B9\u6CD5\u4EA4\u56DE\u6267\u884C\u6743</p></li></ol><p>co \u6A21\u5757\u5176\u5B9E\u5C31\u662F\u5C06\u4E24\u79CD\u81EA\u52A8\u6267\u884C\u5668\uFF08Thunk \u51FD\u6570\u548C Promise \u5BF9\u8C61\uFF09\uFF0C\u5305\u88C5\u6210\u4E00\u4E2A\u6A21\u5757\u3002\u4F7F\u7528 co \u7684\u524D\u63D0\u6761\u4EF6\u662F\uFF0CGenerator \u51FD\u6570\u7684yield\u547D\u4EE4\u540E\u9762\uFF0C\u53EA\u80FD\u662F Thunk \u51FD\u6570\u6216 Promise \u5BF9\u8C61.\u5982\u679C\u6570\u7EC4\u6216\u5BF9\u8C61\u7684\u6210\u5458\uFF0C\u5168\u90E8\u90FD\u662F Promise \u5BF9\u8C61\uFF0C\u4E5F\u53EF\u4EE5\u4F7F\u7528 co</p><p><strong>\u57FA\u4E8E Promise \u5BF9\u8C61\u7684\u81EA\u52A8\u6267\u884C</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token parameter">time<span class="token punctuation">,</span> sue <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> info</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> callback <span class="token operator">=</span> sue <span class="token operator">?</span> resolve <span class="token operator">:</span> reject
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">callback</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> <span class="token function-variable function">gen</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> r1 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> r2 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r2<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> r3 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r3<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u662F\u4E00\u4E2A\u624B\u52A8\u6267\u884C\u7684\u4F8B\u5B50\uFF0C\u624B\u52A8\u6267\u884C\u5176\u5B9E\u5C31\u662F\u7528 <code>then</code> \u65B9\u6CD5\uFF0C\u5C42\u5C42\u6DFB\u52A0\u56DE\u8C03\u51FD\u6570\u3002\u7406\u89E3\u4E86\u8FD9\u4E00\u70B9\uFF0C\u5C31\u53EF\u4EE5\u5199\u51FA\u4E00\u4E2A\u81EA\u52A8\u6267\u884C\u5668</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">var</span> <span class="token function-variable function">gen</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> r1 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> r2 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> r3 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">co</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">function</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> gg <span class="token operator">=</span> g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span>gg<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token keyword">return</span> gg<span class="token punctuation">.</span>value
      gg<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">co</span><span class="token punctuation">(</span>gen<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>co \u6A21\u5757\u7684\u6E90\u7801</strong></p><p>\u9996\u5148\uFF0Cco \u51FD\u6570\u63A5\u53D7 Generator \u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u8FD4\u56DE\u4E00\u4E2A Promise \u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">co</span><span class="token punctuation">(</span><span class="token parameter">gen</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> ctx <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8FD4\u56DE\u7684 Promise \u5BF9\u8C61\u91CC\u9762\uFF0Cco \u5148\u68C0\u67E5\u53C2\u6570 <code>gen</code> \u662F\u5426\u4E3A Generator \u51FD\u6570\u3002\u5982\u679C\u662F\uFF0C\u5C31\u6267\u884C\u8BE5\u51FD\u6570\uFF0C\u5F97\u5230\u4E00\u4E2A\u5185\u90E8\u6307\u9488\u5BF9\u8C61\uFF1B\u5982\u679C\u4E0D\u662F\u5C31\u8FD4\u56DE\uFF0C\u5E76\u5C06 Promise \u5BF9\u8C61\u7684\u72B6\u6001\u6539\u4E3A <code>resolved</code> \u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">co</span><span class="token punctuation">(</span><span class="token parameter">gen</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> ctx <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> gen <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> gen <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>gen <span class="token operator">||</span> <span class="token keyword">typeof</span> gen<span class="token punctuation">.</span>next <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">resolve</span><span class="token punctuation">(</span>gen<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u7740\uFF0Cco \u5C06 Generator \u51FD\u6570\u7684\u5185\u90E8\u6307\u9488\u5BF9\u8C61\u7684 <code>next</code> \u65B9\u6CD5\uFF0C\u5305\u88C5\u6210 <code>onFulfilled</code> \u51FD\u6570\u3002\u8FD9\u4E3B\u8981\u662F\u4E3A\u4E86\u80FD\u591F\u6355\u6349\u629B\u51FA\u7684\u9519\u8BEF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">co</span><span class="token punctuation">(</span><span class="token parameter">gen</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> ctx <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> gen <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> gen <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>gen <span class="token operator">||</span> <span class="token keyword">typeof</span> gen<span class="token punctuation">.</span>next <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">resolve</span><span class="token punctuation">(</span>gen<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">onFulfilled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> ret<span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        ret <span class="token operator">=</span> gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token function">next</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u540E\uFF0C\u5C31\u662F\u5173\u952E\u7684 <code>next</code> \u51FD\u6570\uFF0C\u5B83\u4F1A\u53CD\u590D\u8C03\u7528\u81EA\u8EAB</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">next</span><span class="token punctuation">(</span><span class="token parameter">ret</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ret<span class="token punctuation">.</span>done<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">resolve</span><span class="token punctuation">(</span>ret<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token function">toPromise</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> ret<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&amp;&amp;</span> <span class="token function">isPromise</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> value<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>onFulfilled<span class="token punctuation">,</span> onRejected<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">onRejected</span><span class="token punctuation">(</span>
    <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span>
      <span class="token string">&#39;You may only yield a function, promise, generator, array, or object, &#39;</span>
      <span class="token operator">+</span> <span class="token string">&#39;but the following object was passed: &quot;&#39;</span>
      <span class="token operator">+</span> <span class="token function">String</span><span class="token punctuation">(</span>ret<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
      <span class="token operator">+</span> <span class="token string">&#39;&quot;&#39;</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>next</code> \u51FD\u6570\u7684\u5185\u90E8\u4EE3\u7801\uFF0C\u4E00\u5171\u53EA\u6709\u56DB\u884C\u547D\u4EE4\u3002</p><p>\u7B2C\u4E00\u884C\uFF0C\u68C0\u67E5\u5F53\u524D\u662F\u5426\u4E3A Generator \u51FD\u6570\u7684\u6700\u540E\u4E00\u6B65\uFF0C\u5982\u679C\u662F\u5C31\u8FD4\u56DE\u3002</p><p>\u7B2C\u4E8C\u884C\uFF0C\u786E\u4FDD\u6BCF\u4E00\u6B65\u7684\u8FD4\u56DE\u503C\uFF0C\u662F Promise \u5BF9\u8C61\u3002</p><p>\u7B2C\u4E09\u884C\uFF0C\u4F7F\u7528 <code>then</code> \u65B9\u6CD5\uFF0C\u4E3A\u8FD4\u56DE\u503C\u52A0\u4E0A\u56DE\u8C03\u51FD\u6570\uFF0C\u7136\u540E\u901A\u8FC7 <code>onFulfilled</code> \u51FD\u6570\u518D\u6B21\u8C03\u7528 <code>next</code> \u51FD\u6570\u3002</p><p>\u7B2C\u56DB\u884C\uFF0C\u5728\u53C2\u6570\u4E0D\u7B26\u5408\u8981\u6C42\u7684\u60C5\u51B5\u4E0B\uFF08\u53C2\u6570\u975E Thunk \u51FD\u6570\u548C Promise \u5BF9\u8C61\uFF09\uFF0C\u5C06 Promise \u5BF9\u8C61\u7684\u72B6\u6001\u6539\u4E3A <code>rejected</code>\uFF0C\u4ECE\u800C\u7EC8\u6B62\u6267\u884C</p><p><strong>\u5904\u7406\u5E76\u53D1\u7684\u5F02\u6B65\u64CD\u4F5C</strong></p><p>co \u652F\u6301\u5E76\u53D1\u7684\u5F02\u6B65\u64CD\u4F5C\uFF0C\u5373\u5141\u8BB8\u67D0\u4E9B\u64CD\u4F5C\u540C\u65F6\u8FDB\u884C\uFF0C\u7B49\u5230\u5B83\u4EEC\u5168\u90E8\u5B8C\u6210\uFF0C\u624D\u8FDB\u884C\u4E0B\u4E00\u6B65\u3002</p><p>\u8FD9\u65F6\uFF0C\u8981\u628A\u5E76\u53D1\u7684\u64CD\u4F5C\u90FD\u653E\u5728\u6570\u7EC4\u6216\u5BF9\u8C61\u91CC\u9762\uFF0C\u8DDF\u5728 <code>yield</code> \u8BED\u53E5\u540E\u9762</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6570\u7EC4\u7684\u5199\u6CD5</span>
<span class="token function">co</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token punctuation">[</span>
    Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>onerror<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5BF9\u8C61\u7684\u5199\u6CD5</span>
<span class="token function">co</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token punctuation">{</span>
    <span class="token number">1</span><span class="token operator">:</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token number">2</span><span class="token operator">:</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>onerror<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u4E0B\u9762\u662F\u53E6\u4E00\u4E2A\u4F8B\u5B50</span>

<span class="token function">co</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> values <span class="token operator">=</span> <span class="token punctuation">[</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">,</span> n3<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> values<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>somethingAsync<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">somethingAsync</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// do something async</span>
  <span class="token keyword">return</span> y
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u5141\u8BB8\u5E76\u53D1\u4E09\u4E2A <code>somethingAsync</code> \u5F02\u6B65\u64CD\u4F5C\uFF0C\u7B49\u5230\u5B83\u4EEC\u5168\u90E8\u5B8C\u6210\uFF0C\u624D\u4F1A\u8FDB\u884C\u4E0B\u4E00\u6B65</p>`,169),o=[e];function c(l,i){return s(),a("div",null,o)}var k=n(t,[["render",c],["__file","Generator.html.vue"]]);export{k as default};
