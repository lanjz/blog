import{_ as n,o as s,c as a,e as t}from"./app-NJfECqZf.js";const p={},e=t(`<h1 id="v-model" tabindex="-1"><a class="header-anchor" href="#v-model" aria-hidden="true">#</a> v-model</h1><p>平时我们会把Vue中数据响应触生视图变化的过程理解为双向绑定，原来这样理解并不是完全正常的。所谓双向绑定，从字面上它的意思应该是当视图上发生变化数据也会变化、反之数据发生变化视图也能跟着变化，这是一个相互影响的过程，在Vue中，我们知道可以通过数据的改变去驱动 DOM 视图的变化，但是真实做到改变视图驱动数据变化我们需要通过特定指令来实现比如 <code>v-model</code></p><p>之前已经分析过模板如何渲染成真实DOM，接下来分析一下当模板中带有 <code>v-model</code> 时，解析过程是如何处理的</p><p>假设模板为 <code>&lt;div id=&quot;app&quot;&gt;&lt;input v-model =&quot;name&quot; :class=&quot;name&quot; /&gt;&lt;/div&gt;</code></p><h2 id="模板到ast阶段" tabindex="-1"><a class="header-anchor" href="#模板到ast阶段" aria-hidden="true">#</a> 模板到AST阶段</h2><p>在解析模板阶段，Vue源码中处理<code>v-model</code>指令时，执行的步骤是<code>closeElement(el) =&gt; processElement(el) =&gt; processAttrs(el) =&gt;addDirective(el)</code>，</p><p><code>el</code> 是一个节点的解析结果，它包含了标签名，属性等信息，这里我们关注的属性信息，节点的属性分别保存在 <code>attrsList</code>（数组）和 <code>arrtsMap</code>（对象）中， <code>input</code>的结构如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
	<span class="token literal-property property">tag</span><span class="token operator">:</span> <span class="token string">&quot;input&quot;</span><span class="token punctuation">,</span>
	<span class="token literal-property property">attr</span><span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token punctuation">{</span>
			<span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;v-model&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
			<span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token literal-property property">attrsMap</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">:</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span>
		v<span class="token operator">-</span>model<span class="token operator">:</span> <span class="token string">&quot;name&quot;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>遍历<code>el</code>中的属性，查找是否包含指令的属性,然后提取这个指令信息，添加到<code>directives</code>属性中</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token punctuation">{</span>
      <span class="token literal-property property">tag</span><span class="token operator">:</span> <span class="token string">&quot;input&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">attr</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
              <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;v-model&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">attrsMap</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token operator">:</span><span class="token keyword">class</span><span class="token operator">:</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span>
          v<span class="token operator">-</span>model<span class="token operator">:</span> <span class="token string">&quot;name&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">directives</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    	<span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;model&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">rawName</span><span class="token operator">:</span> <span class="token string">&quot;v-model&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">arg</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token literal-property property">isDynamicArg</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="ast转换成render函数阶段" tabindex="-1"><a class="header-anchor" href="#ast转换成render函数阶段" aria-hidden="true">#</a> AST转换成<code>render</code>函数阶段</h2><p>源码中的处理流程：<code>generate(ast)=&gt;genElement(el)=&gt;genData(el)=&gt;genDirectives(el)</code></p><p>遍历 <code>directives</code> 属性时，对于 <code>v-model</code> 将做以下两件事情：</p><ul><li><p>添加事件：如果是标签是 <code>input</code> 且含有 <code>v-model</code> 指定时，默认添加一个 <code>input</code> 事件，执行内容为 <code>name=$event.target.value</code></p></li><li><p>添加 <code>value</code> 属性：给 <code>input</code> 添加属性 <code>value=&quot;name&quot;</code></p></li></ul><p>转换成模板如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>input
  v<span class="token operator">-</span>bind<span class="token operator">:</span>value<span class="token operator">=</span><span class="token string">&quot;name&quot;</span>
  v<span class="token operator">-</span>on<span class="token operator">:</span>input<span class="token operator">=</span><span class="token string">&quot;name=$event.target.value&quot;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最终生成的 <code>render</code> 代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">with</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span><span class="token literal-property property">attrs</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span><span class="token string">&quot;app&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">[</span>
		<span class="token function">_c</span><span class="token punctuation">(</span><span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>
			<span class="token literal-property property">directives</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;model&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">rawName</span><span class="token operator">:</span><span class="token string">&quot;v-model&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">value</span><span class="token operator">:</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token literal-property property">expression</span><span class="token operator">:</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
			<span class="token keyword">class</span><span class="token operator">:</span>name<span class="token punctuation">,</span>
			<span class="token literal-property property">attrs</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">&quot;test&quot;</span><span class="token operator">:</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token literal-property property">domProps</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">&quot;value&quot;</span><span class="token operator">:</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
			<span class="token literal-property property">on</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token string-property property">&quot;input&quot;</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">$event</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>$event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>composing<span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">;</span>name<span class="token operator">=</span>$event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>原来 <code>v-model</code> 就是自动帮我们添加赋值属性和绑定事件</p><h1 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h1><p><code>v-modal</code> 其实就是一个语法糖，这个指令一方面会动态绑定 <code>input</code> 事件，一方面设置 <code>value</code> 属性指向 <code>data</code> 属性</p>`,20),o=[e];function c(l,r){return s(),a("div",null,o)}const u=n(p,[["render",c],["__file","v-model.html.vue"]]);export{u as default};
