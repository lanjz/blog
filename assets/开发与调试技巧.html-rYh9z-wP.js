import{_ as o,r as p,o as l,c,b as s,d as n,a as e,e as t}from"./app-NJfECqZf.js";const i="/lanjz/assets/sshkill_1-vtupHu5B.png",r="/lanjz/assets/sshkill_2-DREozOHR.png",d="/lanjz/assets/sshkill_3-kX1D0V9v.png",u="/lanjz/assets/sshkill_4-fxjmxCfP.png",k="/lanjz/assets/sshkill_5-EziXLfyF.png",h={},v=t(`<h1 id="开发与调试总结" tabindex="-1"><a class="header-anchor" href="#开发与调试总结" aria-hidden="true">#</a> 开发与调试总结</h1><h2 id="h5应用添加控制台" tabindex="-1"><a class="header-anchor" href="#h5应用添加控制台" aria-hidden="true">#</a> H5应用添加控制台</h2><p><code>charles</code> 抓到手机访问的 <code>html</code> 页面，添加插件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;https://cdn.jsdelivr.net/npm/eruda@1.10.3/eruda.min.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
 eruda<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;//cdn.jsdelivr.net/npm/eruda&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>script<span class="token operator">&gt;</span>
eruda<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="charles激活" tabindex="-1"><a class="header-anchor" href="#charles激活" aria-hidden="true">#</a> charles激活</h2><ol><li><code>Help =&gt; Register</code> 输入：</li></ol><ul><li>Registered Name: <code>https://zhile.io</code></li><li>License Key: <code>48891cf209c6d32bf4</code></li></ul>`,9),m={start:"2"},g={href:"https://www.zzzmode.com/mytools/charles/",target:"_blank",rel:"noopener noreferrer"},b=s("h2",{id:"抓包突破pinning",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#抓包突破pinning","aria-hidden":"true"},"#"),n(" 抓包突破Pinning")],-1),_=s("div",{class:"custom-container warning"},[s("p",{class:"custom-container-title"},"WARNING"),s("p",null,"亲测失败~ , 先记录一下")],-1),f=s("p",null,[n("使用 Charles 可以抓到大部分的 HTTP/HTTPS 的请求，但有的 APP 应用使用 "),s("code",null,"SSL Pinning"),n(" 进行了双向认证，所以使用 Charles 抓不到这些请求")],-1),w=s("p",null,"解决方案：以 IOS 为例，给手机安装 ssl-kill-switch2",-1),x={href:"https://github.com/nabla-c0d3/ssl-kill-switch2/releases",target:"_blank",rel:"noopener noreferrer"},y=t('<h3 id="安装方法" tabindex="-1"><a class="header-anchor" href="#安装方法" aria-hidden="true">#</a> 安装方法</h3><p><strong>1.手机越狱</strong></p><p>手机越狱后，界面会添加一个叫 Cydia 的APP</p><p><strong>2. 通过 Cydia 安装三个软件 <code>Debian Packager</code>、 <code>Cydia Substrate</code>、 <code>PreferenceLoader</code></strong></p><p>以安装 <code>Debian Packager</code> 为例：</p><ul><li>打开cydia应用，选择“搜索”，输入“Debian Packager”插件</li></ul><p><img src="'+i+'" alt=""></p><ul><li>然后进入详情，选择“安装”，按提示安装完成</li></ul><p><img src="'+r+'" alt=""></p><p><code>Cydia Substrate</code>、 <code>PreferenceLoader</code> 安装方法同理</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>安装了 Cydia 后出现过一次搜索不到应用的情况，应该是没成功连接到 Cydia 服务器，我是因为手机已经设置网络代理导致的，关掉就行了</p></div><p><strong>3. 安装 ssl-kill-switch2</strong></p><ul><li><p>首先将 <code>ssl-kill-switch2</code> 下载下来后，通过爱思助手将文件导入到手机文件系统中</p><p><img src="'+d+`" alt=""></p></li><li><p>SSH 连接手机</p><p>通过 SSH 命令进入手机，<strong>这一步的前提是 Cydia 安装了 openSSH</strong>，如果没有的话，还是上面的方法进行安装</p><p>连接命令 <code>root@192.168.2.2</code>，这个IP地址是手机 IP地址，通过 <code>设置</code> -&gt; <code>网络</code> -&gt; <code>wifi的侧的感叹号查看</code></p><p>之后会提示需要密码，默认密码为： <code>alpine</code></p><p>然后就是进入手机终端了</p></li><li><p>安装</p><p>进入到刚上传 ssl-kill-switch2 目录位置</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cd /User/Media

ls  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行安装命令 <code>dpkg -i com.nablac0d3.SSLKillSwitch2_0.11.deb</code>，执行后 Cydia 中能看这个 ssl-kill-switch2 软件，同时进入手机设置也能看到 ssl-kill-switch2 选项</p><p><img src="`+u+'" alt=""></p></li></ul><p><strong>4. 打开 ssl-kill-switch2</strong></p><p>按网上的说法，点击 <code>ssl-kill-switch2</code> ， 勾选 <code>Disable Certificate Validation</code> 选项就能成功抓包了，但是自己试却没效果~</p><p><img src="'+k+'" alt=""></p>',16),S={href:"https://www.freebuf.com/column/207103.html",target:"_blank",rel:"noopener noreferrer"},j={href:"https://www.jianshu.com/p/f834e06e99c0",target:"_blank",rel:"noopener noreferrer"},P=t(`<h2 id="chrome-在打包后的文件中查找源文件" tabindex="-1"><a class="header-anchor" href="#chrome-在打包后的文件中查找源文件" aria-hidden="true">#</a> Chrome 在打包后的文件中查找源文件</h2><p><strong>通过路径查找</strong></p><p>如果知道要调试的文件名和路径，点击控制台的 <code>source</code>，再按下 <code>ctrl+p</code> ，在出现的搜索框中输入文件名或者路径</p><p><strong>通过内容查找</strong></p><p>控制台显示显示 <code>console</code> 标题的左侧有个 <code>三个点的符号</code>，点击它，出现的选项中选择 <code>search</code></p><h2 id="直接使用import" tabindex="-1"><a class="header-anchor" href="#直接使用import" aria-hidden="true">#</a> 直接使用import</h2><p>所需条件</p><ul><li><p>Chrome</p></li><li><p>使用 <code>&lt;script type=&quot;module&quot;&gt;</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">&quot;module&quot;</span><span class="token operator">&gt;</span>
    <span class="token keyword">import</span> <span class="token punctuation">{</span> test <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./test/test1.js&#39;</span>
    <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>必须在服务器环境下才运行页面</p><p>全局安装模块 <code>http-server</code>: <code>npm install http-server -g</code></p></li></ul><p><strong>启动</strong></p><p><code>http-server -c-1</code>（只输入 <code>http-server</code> 的话，更新了代码后，页面不会同步更新）</p><h2 id="redux-devtools" tabindex="-1"><a class="header-anchor" href="#redux-devtools" aria-hidden="true">#</a> redux-devtools</h2>`,11),C={href:"https://www.cnblogs.com/zhuzhenwei918/p/7249357.html",target:"_blank",rel:"noopener noreferrer"},z=t(`<ol><li><p>在谷歌应用商店下载 <code>redux-devtools</code></p></li><li><p><code>npm install redux-devtools-extension --save-dev</code></p></li><li><p>在使用的store的地方引入 <code>composeWithDevTools</code></p></li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createStore<span class="token punctuation">,</span> compose<span class="token punctuation">,</span> applyMiddleware <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;redux&#39;</span>
<span class="token keyword">import</span> thunkmiddleware <span class="token keyword">from</span> <span class="token string">&#39;redux-thunk&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> composeWithDevTools <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;redux-devtools-extension&#39;</span>
<span class="token keyword">import</span> reducer <span class="token keyword">from</span> <span class="token string">&#39;./reducers/index&#39;</span>
<span class="token keyword">const</span> devTools <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;remote-redux-devtools&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default
<span class="token keyword">let</span> store
<span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>
    reducer<span class="token punctuation">,</span>
    <span class="token function">compose</span><span class="token punctuation">(</span>
      <span class="token function">applyMiddleware</span><span class="token punctuation">(</span>thunkmiddleware<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function">composeWithDevTools</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> <span class="token function">applyMiddleware</span><span class="token punctuation">(</span>thunkmiddleware<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> store
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="babel" tabindex="-1"><a class="header-anchor" href="#babel" aria-hidden="true">#</a> Babel</h2>`,3),q={href:"https://www.babeljs.cn/repl",target:"_blank",rel:"noopener noreferrer"};function D(H,T){const a=p("ExternalLinkIcon");return l(),c("div",null,[v,s("ol",m,[s("li",null,[s("a",g,[n("Charles 在线破解工具"),e(a)])])]),b,_,f,w,s("p",null,[n("ssl-kill-switch2 使用了Cydia Substrate的钩子技术，这个钩子Hook了IOS的验证证书函数，使得他们接受任何证书。下载地址 "),s("a",x,[n("SSL Kill Switch 2"),e(a)])]),y,s("ul",null,[s("li",null,[s("p",null,[s("a",S,[n("移动端检测常见问题"),e(a)])])]),s("li",null,[s("p",null,[s("a",j,[n("ssh连接iPhone"),e(a)])])])]),P,s("blockquote",null,[s("p",null,[s("a",C,[n("使用redux-devtools工具"),e(a)])])]),z,s("p",null,[n("Babel 官网提供了"),s("a",q,[n("在线转换的工具"),e(a)]),n("，方便查看 ES6 到 ES5 的转换结果")])])}const L=o(h,[["render",D],["__file","开发与调试技巧.html.vue"]]);export{L as default};
