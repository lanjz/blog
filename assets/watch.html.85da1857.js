import{_ as n,o as s,c as a,d as t}from"./app.4d5def3b.js";const p={},e=t(`<h1 id="watch" tabindex="-1"><a class="header-anchor" href="#watch" aria-hidden="true">#</a> Watch</h1><p>\u901A\u8FC7\u7B80\u5355\u7684 <code>watch</code> \u4F7F\u7528\u7C9F\u5B50\u6765\u8D70\u4E0B\u6E90\u7801:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">counter</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">counter</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;watch&#39;</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.0 \u5904\u7406 <code>watch</code> \u5C5E\u6027\u7684\u4F4D\u7F6E\uFF1A</p><p>\u6E90\u7801\u8FFD\u8E2A\uFF1A <code>mountComponent(n2, container) =&gt; setupComponent(instance) =&gt; setupStatefulComponent() =&gt; finishComponentSetup(instance) =&gt; applyOptions(instance, Component)</code></p><p><code>applyOptions</code> \u65B9\u6CD5\u6709\u4EE5\u4E0B\u8BED\u53E5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>watchOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  deferredWatch<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>watchOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>asMixin <span class="token operator">&amp;&amp;</span> deferredWatch<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  deferredWatch<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">watchOptions</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> watchOptions<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">createWatcher</span><span class="token punctuation">(</span>watchOptions<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> ctx<span class="token punctuation">,</span> publicThis<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u904D\u5386 <code>watch</code> \u914D\u7F6E\uFF0C\u6267\u884C <code>createWatcher(watchOptions[key], ctx, publicThis, key)</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
* raw: watch \u5904\u7406\u914D\u7F6E
* ctx: \u4E0A\u4E0B\u6587\u5373\u5F53\u524D\u7EC4\u4EF6 this
* publicThis: \u5F53\u524D\u7EC4\u4EF6\u4EE3\u7406\u7ED3\u679C\uFF0C\u5373 this.data
* key: \u76D1\u542C\u5C5E\u6027
*/</span>
  <span class="token keyword">function</span> <span class="token function">createWatcher</span><span class="token punctuation">(</span><span class="token parameter">raw<span class="token punctuation">,</span> ctx<span class="token punctuation">,</span> publicThis<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// getter \u662F\u4E00\u4E2A\u65B9\u6CD5\uFF0C\u8FD4\u56DE\u76D1\u542C\u5C5E\u6027\u7684\u503C</span>
    <span class="token keyword">const</span> getter <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span>
      <span class="token operator">?</span> <span class="token function">createPathGetter</span><span class="token punctuation">(</span>publicThis<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
      <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> publicThis<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// raw \u8868\u793A\u76D1\u542C\u5BF9\u8C61\u5BF9\u5E94 handler</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isString</span><span class="token punctuation">(</span>raw<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u662F\u5B57\u7B26\u4E32\uFF0C\u5219\u4ECE\u5F53\u524D \`this\` \u4E2D\u5B58\u627E\u8FD9\u4E2A\u65B9\u6CD5</span>
      <span class="token keyword">const</span> handler <span class="token operator">=</span> ctx<span class="token punctuation">[</span>raw<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">watch</span><span class="token punctuation">(</span>getter<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Invalid watch handler specified by key &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>raw<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u662F\u503C\u5B9A\u4E49\u4E86\u51FD\u6570\uFF0C\u8C03\u7528 watch, watch \u5B9E\u8D28\u6267\u884C\u7684\u662F doWatch(source, cb, options)</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>raw<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">watch</span><span class="token punctuation">(</span>getter<span class="token punctuation">,</span> <span class="token function">raw</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>publicThis<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u4E0B\u662F watch \u662F\u5BF9\u8C61\u5F62\u5F0F\u65F6\u7684\u5904\u7406\u65B9\u6CD5\uFF0C\u5148\u7565</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isObject</span><span class="token punctuation">(</span>raw<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isArray</span><span class="token punctuation">(</span>raw<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        raw<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">r</span> <span class="token operator">=&gt;</span> <span class="token function">createWatcher</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> ctx<span class="token punctuation">,</span> publicThis<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> handler <span class="token operator">=</span> <span class="token function">isFunction</span><span class="token punctuation">(</span>raw<span class="token punctuation">.</span>handler<span class="token punctuation">)</span>
          <span class="token operator">?</span> raw<span class="token punctuation">.</span><span class="token function">handler</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>publicThis<span class="token punctuation">)</span>
          <span class="token operator">:</span> ctx<span class="token punctuation">[</span>raw<span class="token punctuation">.</span>handler<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">watch</span><span class="token punctuation">(</span>getter<span class="token punctuation">,</span> handler<span class="token punctuation">,</span> raw<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Invalid watch handler specified by key &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>raw<span class="token punctuation">.</span>handler<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">warn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Invalid watch option: &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> raw<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
* <span class="token keyword">@params</span> <span class="token class-name"><span class="token punctuation">{</span>Function<span class="token punctuation">}</span></span> source : \u4E0A\u6587\u4E2D\u7684 getter \u65B9\u6CD5\uFF0C\u8FD4\u56DE \u76D1\u542C\u5BF9\u8C61\u7684\u503C
* <span class="token keyword">@params</span> <span class="token class-name"><span class="token punctuation">{</span>cb<span class="token punctuation">}</span></span> source : watch \u5C5E\u6027\u5BF9\u5E94\u7684 handler
**/</span>

  <span class="token keyword">function</span> <span class="token function">doWatch</span><span class="token punctuation">(</span><span class="token parameter">source<span class="token punctuation">,</span> cb<span class="token punctuation">,</span> <span class="token punctuation">{</span> immediate<span class="token punctuation">,</span> deep<span class="token punctuation">,</span> flush<span class="token punctuation">,</span> onTrack<span class="token punctuation">,</span> onTrigger <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token constant">EMPTY_OBJ</span><span class="token punctuation">,</span> instance <span class="token operator">=</span> currentInstance</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> getter<span class="token punctuation">;</span> <span class="token comment">// \u58F0\u660E\u4E00\u4E2A getter \u7528\u4E8E\u83B7\u53D6 watch key \u7684\u503C</span>
    <span class="token keyword">let</span> forceTrigger <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRef</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// \u7565</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFunction</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// \u5F53\u524D\u4F8B\u5B50\u5C06\u6267\u884C\u4EE5\u4E0B\u4EE3\u7801\u5206\u652F</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7ED9 getter \u8D4B\u503C</span>
        <span class="token comment">// callWithErrorHandling \u7684\u4F5C\u7528\u5C31\u662F\u6267\u884C source \u65B9\u6CD5</span>
        <span class="token function-variable function">getter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">callWithErrorHandling</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> instance<span class="token punctuation">,</span> <span class="token number">2</span> <span class="token comment">/* WATCH_GETTER */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// job\u7684\u4F5C\u7528\u662F\u6267\u884C watch handler\u7684</span>
    <span class="token keyword">const</span> <span class="token function-variable function">job</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>runner<span class="token punctuation">.</span>active<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// runner \u4E0A effect</span>
        <span class="token keyword">const</span> newValue <span class="token operator">=</span> <span class="token function">runner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>deep <span class="token operator">||</span> forceTrigger <span class="token operator">||</span> <span class="token function">hasChanged</span><span class="token punctuation">(</span>newValue<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// cleanup before running cb again</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>cleanup<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">cleanup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
           <span class="token comment">// \u6267\u884C watch handler</span>
          <span class="token function">callWithAsyncErrorHandling</span><span class="token punctuation">(</span>cb<span class="token punctuation">,</span> instance<span class="token punctuation">,</span> <span class="token number">3</span> <span class="token comment">/* WATCH_CALLBACK */</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
            newValue<span class="token punctuation">,</span>
            <span class="token comment">// pass undefined as the old value when it&#39;s changed for the first time</span>
            oldValue <span class="token operator">===</span> <span class="token constant">INITIAL_WATCHER_VALUE</span> <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> oldValue<span class="token punctuation">,</span>
            onInvalidate
          <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          oldValue <span class="token operator">=</span> newValue<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// watchEffect</span>
        <span class="token function">runner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// scheduler \u5728\u5C06\u4FDD\u5B58\u5728 effech.options\u5C5E\u6027\u4E2D</span>
    <span class="token comment">// scheduler \u4F5C\u7528\u662F\u5C06\u5F53\u524D job(watch handler) \u6DFB\u52A0\u5230\u5FAE\u4EFB\u52A1\u961F\u5217\u4E2D</span>
    <span class="token keyword">let</span> scheduler<span class="token punctuation">;</span> 
      <span class="token function-variable function">scheduler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>instance <span class="token operator">||</span> instance<span class="token punctuation">.</span>isMounted<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token function">queuePreFlushCb</span><span class="token punctuation">(</span>job<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token comment">// with &#39;pre&#39; option, the first call must happen before</span>
          <span class="token comment">// the component is mounted so it is called synchronously.</span>
          <span class="token function">job</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A effect</span>
    <span class="token keyword">const</span> runner <span class="token operator">=</span> <span class="token function">effect</span><span class="token punctuation">(</span>getter<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">lazy</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      onTrack<span class="token punctuation">,</span>
      onTrigger<span class="token punctuation">,</span>
      scheduler
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6267\u884C\u4E0A\u9762\u521B\u5EFA\u7684 effetch</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u6709 \`immediate\` \uFF0C\u5219\u9A6C\u4E0A\u6267\u884C\u4E00\u4E2A job(), \u5373 watch handler</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>immediate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">job</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5426\u5219\u8D70\u8FD9\u91CC\uFF0C\u5F53\u524D\u4F8B\u5B50\u8D70\u8FD9\u91CC</span>
        <span class="token comment">// \u6267\u884C\u4E00\u6B21 effect \u4F9D\u8D56\u5C5E\u6027\u6536\u96C6\u8FD9\u4E2A \`effect\`</span>
        oldValue <span class="token operator">=</span> <span class="token function">runner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">stop</span><span class="token punctuation">(</span>runner<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>instance<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">remove</span><span class="token punctuation">(</span>instance<span class="token punctuation">.</span>effects<span class="token punctuation">,</span> runner<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>doWatch</code> \u7684\u4F5C\u7528\u5C31\u662F\u521B\u5EFA\u4E00\u4E2A <code>effect</code>,\u53CA\u7528\u4E8E <code>effect</code> \u4F7F\u7528\u7684 <code>getter</code> \u548C <code>job</code></p><ul><li><p><code>getter</code> \u65B9\u6CD5\u7528\u4E8E\u8BFB\u53D6 <code>watch \u5C5E\u6027</code> \u7684\u503C</p></li><li><p><code>job</code> \u65B9\u6CD5\u7528\u4E8E\u6267\u884C <code>watch handler</code></p></li></ul><h2 id="\u91CD\u6E29-effect" tabindex="-1"><a class="header-anchor" href="#\u91CD\u6E29-effect" aria-hidden="true">#</a> \u91CD\u6E29 effect</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">function</span> <span class="token function">effect</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> options <span class="token operator">=</span> <span class="token constant">EMPTY_OBJ</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isEffect</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      fn <span class="token operator">=</span> fn<span class="token punctuation">.</span>raw<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> effect <span class="token operator">=</span> <span class="token function">createReactiveEffect</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>options<span class="token punctuation">.</span>lazy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> effect<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

 <span class="token comment">// createReactiveEffect</span>
  <span class="token keyword">function</span> <span class="token function">createReactiveEffect</span><span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">effect</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">reactiveEffect</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>effect<span class="token punctuation">.</span>active<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> options<span class="token punctuation">.</span>scheduler <span class="token operator">?</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>effectStack<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>effect<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">cleanup</span><span class="token punctuation">(</span>effect<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token function">enableTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          effectStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>effect<span class="token punctuation">)</span><span class="token punctuation">;</span>
          activeEffect <span class="token operator">=</span> effect<span class="token punctuation">;</span>
          <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">finally</span> <span class="token punctuation">{</span>
          effectStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">resetTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          activeEffect <span class="token operator">=</span> effectStack<span class="token punctuation">[</span>effectStack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    effect<span class="token punctuation">.</span>id <span class="token operator">=</span> uid<span class="token operator">++</span><span class="token punctuation">;</span>
    effect<span class="token punctuation">.</span>allowRecurse <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>allowRecurse<span class="token punctuation">;</span>
    effect<span class="token punctuation">.</span>_isEffect <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    effect<span class="token punctuation">.</span>active <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    effect<span class="token punctuation">.</span>raw <span class="token operator">=</span> fn<span class="token punctuation">;</span>
    effect<span class="token punctuation">.</span>deps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    effect<span class="token punctuation">.</span>options <span class="token operator">=</span> options<span class="token punctuation">;</span>
    <span class="token keyword">return</span> effect<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C <code>effect</code> \u63A5\u6536\u7684\u53C2\u6570\uFF1A</p><ul><li><p>fn\uFF1A <code>effect</code> \u56DE\u8C03\uFF0C\u5BF9\u4E8E <code>\u6E32\u67D3 effect</code> \uFF0C\u8FD9\u4E2A\u56DE\u8C03\u662F\u6E32\u67D3\u7EC4\u4EF6\uFF0C\u5BF9\u4E8E <code>watch effect</code>\uFF0C \u8FD9\u4E2A\u56DE\u8C03\u662F\u83B7\u53D6 <code>watch</code> \u5C5E\u6027\u503C\u7684\u65B9\u6CD5</p></li><li><p>options: \u914D\u7F6E\u9879\uFF0C\u91CD\u70B9\u662F\u5176\u4E2D\u7684\u4E00\u4E2A <code>scheduler</code> \u5C5E\u6027\uFF0C<code>scheduler</code> \u7684\u4F5C\u7528\u5C31\u662F\u6DFB\u52A0\u4E00\u4E2A <code>job</code> \u5230\u5FAE\u4EFB\u52A1\u961F\u5217\u4E2D</p><p>\u5BF9\u4E8E <code>\u6E32\u67D3 effect</code> \uFF0C\u8FD9\u4E2A <code>job</code> \u662F <code>\u6E32\u67D3 effect</code> \u672C\u8EAB\uFF0C\u5BF9\u4E8E <code>watch effect</code>,\u8FD9\u4E2A <code>job</code> \u662F <code>watch</code> \u5C5E\u6027\u5BF9\u5E94\u7684 <code>handler</code></p></li></ul><p>\u6BCF\u6B21\u6267\u884C <code>effect</code> \u7684\u65F6\u5019\u8FD4\u56DE <code>createReactiveEffect()</code> \u65B9\u6CD5\u7684\u56DE\u8C03</p><p>\u518D\u6B21\u6267\u884C <code>\u56DE\u8C03 effect</code>\u7684\u65F6\u5019\uFF0C\u5219\u4F1A\u5C06\u8FD9\u4E2A <code>\u56DE\u8C03 effect</code> \u4FDD\u5B58\u5230\u5168\u5C40\uFF0C\u4F9B\u5F53\u524D\u4F9D\u8D56\u7684\u5C5E\u6027\u6536\u96C6</p><p>\u5F53\u6709\u5C5E\u6027\u66F4\u65B0\u65F6\uFF0C\u5C31\u4F1A\u6267\u884C\u6536\u96C6\u7684 <code>effect</code> \u4E2D\u7684 <code>scheduler</code> \u65B9\u6CD5\uFF0C\u6DFB\u52A0\u8981\u6267\u884C <code>job</code> \u5230\u5FAE\u4EFB\u52A1\u961F\u5217\u4E2D</p><h2 id="\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u5C0F\u7ED3" aria-hidden="true">#</a> \u5C0F\u7ED3</h2><p><code>watch</code> \u76D1\u542C\u7684\u539F\u7406</p><p>\u5904\u7406 <code>watch</code> \u65F6\uFF0C\u4F1A\u58F0\u660E\u4E09\u4E2A\u91CD\u8981\u7684\u5C5E\u6027\uFF1A</p><ul><li><p>\u58F0\u660E\u4E00\u4E2A <code>getter</code> \u65B9\u6CD5\u7528\u4E8E\u8BFB\u53D6 <code>watch \u5C5E\u6027</code> \u7684\u503C</p></li><li><p>\u58F0\u660E\u4E00\u4E2A <code>job</code> \u65B9\u6CD5\u7528\u4E8E\u6267\u884C <code>watch handler</code></p></li><li><p>\u58F0\u660E\u4E00\u4E2A <code>scheduler</code> \u7528\u4E8E\u5C06 <code>job</code> \u6DFB\u52A0\u5230\u5FAE\u4EFB\u52A1\u961F\u5217</p></li></ul><p>\u76D1\u542C\u6D41\u7A0B\uFF1A</p><ul><li><p>\u4E0A\u9762\u4E09\u4E2A\u5C5E\u6027\u51C6\u5907\u597D\u540E\uFF0C\u751F\u6210 <code>effect</code> \u4E8B\u4EF6\uFF0C<code>scheduler</code> \u5305\u542B\u5728 <code>effect.options</code> \u4E2D</p></li><li><p>\u6267\u884C <code>effect</code> \u4E8B\u4EF6\uFF0C\u5C06\u5F53\u524D <code>effect</code> \u4FDD\u5B58\u5230\u5168\u5C40\uFF0C\u4F9B\u5F53\u524D\u4F9D\u8D56\u7684\u5C5E\u6027\u6536\u96C6</p></li><li><p>\u63A5\u7740\u4E0A\u4E00\u6B65\u4E4B\u540E <code>effect</code> \u7ED3\u5C3E\u5904\u4F1A\u6267\u884C <code>getter</code> \u65B9\u6CD5</p></li><li><p>\u901A\u8FC7 <code>getter</code> \u65B9\u6CD5\u8BBF\u95EE\u54CD\u5EA6\u5F0F\u5C5E\u6027\uFF0C\u6536\u96C6\u4FDD\u5B58\u5728\u5168\u5C40\u73AF\u5883\u4E2D\u7684 <code>effect</code>, \u81F3\u6B64\u5B8C\u6210\u4F9D\u8D56\u5C5E\u6027\u7684\u6536\u96C6\u5DE5\u4F5C</p></li><li><p>\u4F9D\u8D56\u5C5E\u6027\u66F4\u6539\uFF0C\u6267\u884C\u6536\u5230\u7684 <code>effect.options.scheduler</code>\uFF0C\u5C06 <code>job</code> \u6DFB\u52A0\u5230\u5FAE\u4EFB\u52A1\u961F\u5217</p></li><li><p>\u6E05\u7406\u5FAE\u4EFB\u52A1\u65F6\uFF0C\u6267\u884C <code>job</code> \u4E5F\u5C31\u662F <code>watch handler</code></p></li></ul>`,25),c=[e];function o(i,l){return s(),a("div",null,c)}var k=n(p,[["render",o],["__file","watch.html.vue"]]);export{k as default};
