import{_ as c,o as i,c as l,b as n,a,w as u,e as s,d as p,r as t}from"./app.910feec5.js";var r="/lanjz/assets/functionDeclaration.e3a1953e.png",d="/lanjz/assets/class-method.4be657bb.png",k="/lanjz/assets/functionExpress.f1c77ec5.png",m="/lanjz/assets/arrowFunctin.3c3b125f.png";const v={},b=n("h1",{id:"\u57CB\u70B9\u65B9\u6848",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u57CB\u70B9\u65B9\u6848","aria-hidden":"true"},"#"),s(" \u57CB\u70B9\u65B9\u6848")],-1),h=n("h2",{id:"babel-\u57CB\u70B9",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#babel-\u57CB\u70B9","aria-hidden":"true"},"#"),s(" Babel \u57CB\u70B9")],-1),f=s("Babel-Loader"),g=s(" \u4E4B\u524D\u6709\u5927\u81F4\u7684\u4E86\u89E3\u8FC7\uFF0C\u73B0\u5728\u5B9E\u73B0\u53EF\u4EE5\u5E2E\u6211\u4EEC\u6CE8\u518C\u57CB\u70B9\u65B9\u6CD5\u7684 Babel \u63D2\u4EF6"),y=p(`<p>\u786E\u5B9A\u601D\u8DEF\uFF1A</p><ol><li><p>\u6839\u636E\u51FD\u6570\u5757\u7EA7\u6CE8\u91CA\u5224\u65AD\u662F\u5426\u9700\u8981\u81EA\u52A8\u57CB\u70B9</p></li><li><p>\u5F15\u5165\u57CB\u70B9\u51FD\u6570\u6587\u4EF6</p></li><li><p>\u51FD\u6570\u63D2\u88C5\uFF1A\u5C06\u57CB\u70B9\u65B9\u6CD5\u63D2\u5165\u9700\u8981\u57CB\u70B9\u7684\u51FD\u6570</p></li></ol><p>\u4E00\u4E2ABabel\u63D2\u4EF6\u7684\u67B6\u5B50:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">autoTracker</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span><span class="token literal-property property">types</span><span class="token operator">:</span> t<span class="token punctuation">,</span> template<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">visitor</span><span class="token operator">:</span> <span class="token punctuation">{</span> 
            
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> autoTracker<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u53D1\u73B0 Babel \u63D2\u4EF6\u5176\u5B9E\u4E5F\u5C31\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u5B83\u4F1A\u5C06 api \u901A\u8FC7\u53C2\u6570\u7684\u5F62\u5F0F\u4F20\u56DE\u6765<br> \u5B83\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5BF9\u8C61\u4E2D\u6709\u4E00\u4E2A <code>visitor</code> \u5C5E\u6027\uFF0C\u8FD9\u4E2A\u5C5E\u6027\u4E2D\u58F0\u660E\u7684\u51FD\u6570\u4F1A\u5728 <code>transform</code> \u7684\u8FC7\u7A0B\u4E2D\u88AB\u8C03\u7528</p><p>\u65E2\u7136\u6211\u4EEC\u9700\u8981\u6839\u636E\u51FD\u6570\u7684\u6CE8\u91CA\u6765\u5224\u65AD\u662F\u5426\u9700\u8981\u81EA\u52A8\u57CB\u70B9\uFF0C\u90A3\u4E48\u9996\u5148\u6211\u4EEC\u5F97\u5148\u786E\u8BA4\uFF0C\u51FD\u6570\u6709\u54EA\u4E9B\u5F62\u5F0F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u51FD\u6570\u58F0\u660E</span>
<span class="token keyword">function</span> <span class="token function">tracker</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// \u51FD\u6570\u8868\u8FBE\u5F0F</span>
<span class="token keyword">const</span> <span class="token function-variable function">tracker</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// \u7BAD\u5934\u51FD\u6570</span>
<span class="token keyword">const</span> <span class="token function-variable function">tracker</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// \u7C7B\u65B9\u6CD5</span>
<span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token function">tracker</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u4EEC\u5728AST\u4E2D\u6240\u5BF9\u5E94\u7684\u7C7B\u578B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\u51FD\u6570\u58F0\u660E <span class="token operator">=</span> FunctionDeclaration

\u51FD\u6570\u8868\u8FBE\u5F0F <span class="token operator">=</span> FunctionExpression

\u7BAD\u5934\u51FD\u6570 <span class="token operator">=</span> ArrowFunctionExpression

\u7C7B\u65B9\u6CD5 <span class="token operator">=</span> ClassMethod
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u7684\u63D2\u4EF6\u53EA\u9700\u5904\u7406\u8FD9\u4E9B\u7C7B\u578B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u591A\u4E2A\u7C7B\u578B\u6211\u4EEC\u4F7F\u7528|\u6765\u5206\u9694</span>
<span class="token keyword">function</span> <span class="token function">autoTracker</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span><span class="token literal-property property">types</span><span class="token operator">:</span> t<span class="token punctuation">,</span> template<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">visitor</span><span class="token operator">:</span> <span class="token punctuation">{</span> 
            <span class="token string">&#39;FunctionDeclaration|ArrowFunctionExpression|FunctionExpression|ClassMethod&#39;</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> autoTracker<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\u65B9\u6CD5\u4E2D\u6709\u4E24\u4E2A\u53C2\u6570\uFF1A</p><ul><li><p>path\uFF1Apath \u5BF9\u8C61\u4E2D\u7EF4\u62A4\u4E86\u76F8\u90BB\u8282\u70B9\u7684\u5173\u7CFB\uFF0C\u53EF\u4EE5\u901A\u8FC7 path \u5C5E\u6027\u62FF\u5230\u7236\u7EA7\u548C\u5144\u5F1F\u8282\u70B9\uFF0Cpath \u5C5E\u6027\u4E2D\u8FD8\u63D0\u4F9B\u4E86\u589E\u5220\u6539 AST \u7684\u65B9\u6CD5\u3002</p></li><li><p>state\uFF1A\u591A\u4E2AAST\u8282\u70B9\u95F4\u9700\u8981\u8FDB\u884C\u6570\u636E\u4F20\u9012\uFF0C\u5219\u901A\u8FC7 state</p></li></ul><h3 id="\u6839\u636E\u51FD\u6570\u5757\u7EA7\u6CE8\u91CA\u5224\u65AD\u662F\u5426\u9700\u8981\u81EA\u52A8\u57CB\u70B9" tabindex="-1"><a class="header-anchor" href="#\u6839\u636E\u51FD\u6570\u5757\u7EA7\u6CE8\u91CA\u5224\u65AD\u662F\u5426\u9700\u8981\u81EA\u52A8\u57CB\u70B9" aria-hidden="true">#</a> \u6839\u636E\u51FD\u6570\u5757\u7EA7\u6CE8\u91CA\u5224\u65AD\u662F\u5426\u9700\u8981\u81EA\u52A8\u57CB\u70B9</h3>`,14),_=s("\u6211\u4EEC\u901A\u8FC7 "),w={href:"https://astexplorer.net/",target:"_blank",rel:"noopener noreferrer"},x=s("astexplorer"),j=s(" \u6765\u67E5\u770B\uFF0C\u4E0A\u9762\u56DB\u79CD\u51FD\u6570\u6CE8\u91CA\u7684AST\u8282\u70B9\u7C7B\u578B\u662F\u4EC0\u4E48\uFF1A"),N=p('<p><img src="'+r+'" alt=""></p><p><img src="'+d+'" alt=""></p><p><img src="'+k+'" alt=""></p><p><img src="'+m+`" alt=""></p><p>\u4ECE\u4E0A\u9762\u7684\u4F8B\u5B50\u53EF\u4EE5\u770B\u5230\u5757\u6CE8\u91CA\u7684 AST \u7C7B\u578B\u662F <code>leadingComments</code>\uFF0C\u800C\u4E14\u51FD\u6570\u7C7B\u578B\u7684\u4E0D\u540C\u7684 <code>leadingComments</code> \u4F4D\u7F6E\u4E5F\u4E0D\u540C</p><ul><li><p>\u51FD\u6570\u58F0\u660E\u548C\u7C7B\u51FD\u6570\u7684 <code>leadingComments</code> \u5C31\u5728\u51FD\u6570\u7684 AST \u8282\u70B9\u4E0B\uFF0C\u53EF\u4EE5\u4F7F\u7528path\u76F4\u63A5\u83B7\u53D6</p></li><li><p>\u51FD\u6570\u8868\u8FBE\u5F0F\u548C\u7BAD\u5934\u51FD\u6570\u7684 <code>leadingComments</code> \u5C5E\u6027\u5728\u5B83\u4EEC\u7684\u7236\u7EA7\u8282\u70B9\uFF0C\u56E0\u4E3A\u4ED6\u4EEC\u662F\u901A\u8FC7\u53D8\u91CF\u58F0\u660E\u7684\u65B9\u5F0F\u8D4B\u503C\u51FD\u6570\u7684\uFF0C\u4E5F\u5C31\u662F\u6211\u4EEC\u7684\u6CE8\u91CA\u5176\u5B9E\u662F\u5728 <code>VariableDeclarator</code> \u8282\u70B9\u4E0B</p><p>\u56E0\u6B64\u5BF9\u4E8E \u51FD\u6570\u8868\u8FBE\u5F0F\u548C\u7BAD\u5934\u51FD\u6570 \u6211\u4EEC\u9700\u8981\u901A\u8FC7\u7236\u7EA7\u8282\u70B9\u53BB\u67E5\u627E</p></li></ul><p>\u67E5\u627E\u5757\u8282\u70B9\u7684\u4EE3\u7801\u4E3A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">autoTracker</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>template<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u601D\u8DEF\uFF1A</span>
  <span class="token comment">// 1.\u6839\u636E\u6CE8\u91CA\u6807\u9898\u5224\u65AD\u662F\u5426\u662F\u9700\u8981\u81EA\u52A8\u57CB\u70B9\u7684\u51FD\u6570\uFF0C\u51FD\u6570\u7C7B\u578B\uFF1A\u51FD\u6570\u58F0\u660E\uFF0C\u7BAD\u5934\u51FD\u6570\uFF0C\u51FD\u6570\u8868\u8FBE\u5F0F\uFF0C\u7C7B\u65B9\u6CD5</span>
  <span class="token comment">// 2. \u8FD9\u4E00\u6B65\u5148\u83B7\u53D6\u51FD\u6570\u6CE8\u91CA</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">visitor</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string">&#39;FunctionDeclaration|ClassMethod|ObjectMethod|ArrowFunctionExpression|FunctionExpression&#39;</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> comment <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;leadingComments&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>comment<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token function">setAutoTracker</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> state<span class="token punctuation">,</span> template<span class="token punctuation">,</span> comment<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token comment">// export Fn(){}\u3001\u51FD\u6570\u8868\u8FBE\u5F0F\u7B49</span>
          path<span class="token punctuation">.</span><span class="token function">findParent</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">parentPath</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>parentPath<span class="token punctuation">.</span>node<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;Program&#39;</span> <span class="token operator">||</span> parentPath<span class="token punctuation">.</span>node<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;BlockStatement&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token boolean">false</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">const</span> findComment <span class="token operator">=</span> parentPath<span class="token punctuation">.</span>node<span class="token punctuation">.</span>leadingComments
            <span class="token keyword">if</span><span class="token punctuation">(</span>findComment<span class="token operator">&amp;&amp;</span>findComment<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">setAutoTracker</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> state<span class="token punctuation">,</span> template<span class="token punctuation">,</span> findComment<span class="token punctuation">)</span>
              <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token boolean">false</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5224\u65AD\u6CE8\u91CA\u5E76\u5F15\u5165\u57CB\u70B9" tabindex="-1"><a class="header-anchor" href="#\u5224\u65AD\u6CE8\u91CA\u5E76\u5F15\u5165\u57CB\u70B9" aria-hidden="true">#</a> \u5224\u65AD\u6CE8\u91CA\u5E76\u5F15\u5165\u57CB\u70B9</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">setAutoTracker</span><span class="token punctuation">(</span><span class="token parameter">path<span class="token punctuation">,</span> state<span class="token punctuation">,</span> template<span class="token punctuation">,</span> commentNode <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u904D\u5386\u6CE8\u91CA</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> comment <span class="token keyword">of</span> commentNode<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">// \u63D0\u53D6\u6CE8\u91CA</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span> value <span class="token operator">=</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span> <span class="token operator">=</span>  comment
       <span class="token comment">// \u5224\u65AD\u6CE8\u91CA\u662F\u5426\u5305\u542B autoTracker</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;\\\\s*&#39;</span><span class="token operator">+</span><span class="token constant">AUTOTRACKER</span><span class="token operator">+</span><span class="token string">&#39;\\\\s*&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u5F15\u5165\u57CB\u70B9\u51FD\u6570\u6587\u4EF6\u5E76\u83B7\u83B7\u53D6\u57CB\u70B9\u51FD\u6570\u540D</span>
            <span class="token keyword">const</span> trackerImportName  <span class="token operator">=</span> <span class="token function">trackerImportDeclaration</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5224\u65AD\u662F\u5426\u5DF2\u7ECF\u6DFB\u52A0\u4E86\u57CB\u70B9\u51FD\u6570\uFF0C\u9632\u6B62\u91CD\u590D\u6DFB\u52A0</span>
            <span class="token keyword">const</span> fistNode <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span>body<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>
                    fistNode
                    <span class="token operator">&amp;&amp;</span> fistNode<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;ExpressionStatement&#39;</span>
                    <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>
                        <span class="token punctuation">(</span>fistNode<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>callee<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;Identifier&#39;</span> <span class="token operator">&amp;&amp;</span> fistNode<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>callee<span class="token punctuation">.</span>name <span class="token operator">===</span> trackerImportName<span class="token punctuation">)</span>
                        <span class="token operator">||</span> <span class="token punctuation">(</span>fistNode<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>callee<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;MemberExpression&#39;</span> <span class="token operator">&amp;&amp;</span> fistNode<span class="token punctuation">.</span>expression<span class="token punctuation">.</span>callee<span class="token punctuation">.</span>object<span class="token punctuation">.</span>name <span class="token operator">===</span> trackerImportName<span class="token punctuation">)</span>
                    <span class="token punctuation">)</span>
                <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">// \u6DFB\u52A0\u57CB\u70B9\u51FD\u6570</span>
                path<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token function">template</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>trackerImportName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.call(this)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">break</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u904D\u5386 commentNode\uFF0C\u5224\u65AD\u6CE8\u91CA\u662F\u5426\u5305\u542B autoTracker</p></li><li><p>\u7136\u540E\u5224\u65AD\u662F\u5426\u5DF2\u7ECF\u6DFB\u52A0\u4E86\u57CB\u70B9\u51FD\u6570\uFF0C\u9632\u6B62\u91CD\u590D\u6DFB\u52A0</p><ul><li><p><code>fistNode.type === &#39;ExpressionStatement&#39;</code>: \u8868\u793A\u9996\u884C\u7684\u8BED\u53E5\u662F\u5426\u662F\u51FD\u6570\u7C7B\u578B\uFF08\u5373\u8C03\u7528\u51FD\u6570\uFF09</p></li><li><p><code>istNode.expression.callee.type === &#39;Identifier&#39;</code>\uFF1A\u5982\u679C\u662F\u76F4\u63A5\u8C03\u7528\u4E86\u51FD\u6570\u7C7B\u578B\u4E3A <code>Identifier</code>\uFF0C\u5982 <code>tracker()</code>\uFF0C\u6B64\u65F6\u901A\u8FC7 <code>fistNode.expression.callee.name</code> \u83B7\u53D6\u8BE5\u51FD\u6570\u540D</p></li><li><p><code>fistNode.expression.callee.type === &#39;MemberExpression&#39;</code>\uFF1A\u5982\u679C\u662F\u5E26\u6709\u4FEE\u9970\u7B26\u8C03\u7528\u7684\u51FD\u6570\u7C7B\u578B\u4E3A <code>MemberExpression</code>\uFF0C\u5982 <code>tracker.call()</code>\uFF0C\u6B64\u5730\u901A\u8FC7 <code>fistNode.expression.callee.object.name</code> \u83B7\u53D6\u51FD\u6570\u540D</p></li></ul></li><li><p>\u5F80 body \u4E2D\u6DFB\u52A0\u57CB\u70B9\u65B9\u6CD5</p></li></ul><h3 id="\u5F15\u5165\u57CB\u70B9\u51FD\u6570\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u5F15\u5165\u57CB\u70B9\u51FD\u6570\u6587\u4EF6" aria-hidden="true">#</a> \u5F15\u5165\u57CB\u70B9\u51FD\u6570\u6587\u4EF6</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> importModule <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@babel/helper-module-imports&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5F15\u7528\u57CB\u70B9\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">trackerImportDeclaration</span><span class="token punctuation">(</span><span class="token parameter">path<span class="token punctuation">,</span> state</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// state.trackerImportName \u4E3A\u4E86\u5B69\u5B50\u91CD\u590D\u6DFB\u52A0</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>state<span class="token punctuation">.</span>trackerImportName<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">const</span> pathName <span class="token operator">=</span> state<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>pathName<span class="token punctuation">;</span> <span class="token comment">// \u83B7\u53D6\u57CB\u70B9\u51FD\u6570\u7684\u6587\u4EF6\u8DEF\u5F84\uFF0CpathName \u662F\u914D\u7F6E\u63D2\u4EF6\u65F6\u7684\u53C2\u6570</span>
    state<span class="token punctuation">.</span>trackerImportName  <span class="token operator">=</span> importModule<span class="token punctuation">.</span><span class="token function">addDefault</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> pathName<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token comment">// If &#39;hintedName&#39; exists in scope, the name will be &#39;_tracker2&#39;, &#39;_tracker3&#39;, ...</span>
      <span class="token literal-property property">nameHint</span><span class="token operator">:</span> path<span class="token punctuation">.</span>scope<span class="token punctuation">.</span><span class="token function">generateUid</span><span class="token punctuation">(</span><span class="token string">&#39;tracker&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> state<span class="token punctuation">.</span>trackerImportName<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u901A\u8FC7 <code>state.opts.pathName</code> \u62FF\u5230\u57CB\u70B9\u65B9\u6CD5\u6240\u5728\u6587\u4EF6\u7684\u8DEF\u5F84\uFF08 <code>pathName</code> \u662F\u6211\u4EEC\u5728\u914D\u7F6E babel \u63D2\u4EF6\u65F6\u9700\u8981\u4F20\u5165\u7684\u53C2\u6570\uFF09</p></li><li><p>\u901A\u8FC7 <code>@babel/helper-module-imports</code> \u5305\u5C06\u57CB\u70B9\u65B9\u6CD5\u5F15\u5165\u8FDB\u6765\uFF0C\u8C03\u7528\u5F15\u5165\u65B9\u6CD5\u540E\u4F1A\u8FD4\u56DE\u4E00\u4E2A <code>name</code>\uFF0C\u8868\u8FBE\u5BFC\u51FA\u7684\u540D\u79F0\uFF0C\u8BE5\u540D\u79F0\u4E5F\u5C31\u662F\u6211\u4EEC\u540E\u9762\u9700\u8981\u63D2\u5165\u57CB\u70B9\u51FD\u6570\u65F6\u6240\u7528\u5230\u7684\u51FD\u6570\u540D\u3002</p></li><li><p>\u4E3A\u4E86\u9632\u6B62\u91CD\u590D\u6DFB\u52A0\u6240\u4EE5\u5C06\u83B7\u53D6\u5230\u7684\u57CB\u70B9\u51FD\u6570\u540D\u7F13\u5B58\u5230 <code>state</code> \u4E2D</p></li></ul><h3 id="\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528" aria-hidden="true">#</a> \u4F7F\u7528</h3><p><code>babel.config.js</code> \u5F15\u5165\u63D2\u4EF6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">[</span>
        <span class="token string">&#39;./babel-auto-tracker&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token string-property property">&#39;pathName&#39;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./src/utils/tracker&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// \u914D\u7F6E\u57CB\u70B9\u51FD\u6570\u7684\u8DEF\u5F84</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6DFB\u52A0\u57CB\u70B9\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">tracker</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u4E0A\u4F20\u57CB\u70B9\u6570\u636E\uFF1A&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u6548\u679C</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">/*autoTracker*/</span>
<span class="token keyword">function</span> <span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  
<span class="token punctuation">}</span>

<span class="token comment">// \u6253\u5305\u540E</span>
<span class="token comment">/*autoTracker*/</span>
<span class="token keyword">function</span> <span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token function">tracker</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21);function T(E,C){const e=t("RouterLink"),o=t("ExternalLinkIcon");return i(),l("div",null,[b,h,n("p",null,[a(e,{to:"/Node/Webpack/Babel-Loader.html"},{default:u(()=>[f]),_:1}),g]),y,n("p",null,[_,n("a",w,[x,a(o)]),j]),N])}var A=c(v,[["render",T],["__file","\u57CB\u70B9\u65B9\u6848.html.vue"]]);export{A as default};
