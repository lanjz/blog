import{_ as n,o as s,c as a,d as p}from"./app.9941db85.js";const t={},e=p(`<h1 id="watch" tabindex="-1"><a class="header-anchor" href="#watch" aria-hidden="true">#</a> Watch</h1><p>Watch \u7684\u4F7F\u7528\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">handler</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> oldVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56DE\u987E\u4E00\u4E0B\u54CD\u5E94\u5F0F\u539F\u7406\uFF1AVue \u4E2D\u7684\u54CD\u5E94\u5F0F\u662F\u6307\u6570\u636E\u5C42\u7684\u53D8\u5316\u80FD\u81EA\u52A8\u89E6\u53D1\u89C6\u56FE\u7684\u66F4\u65B0\u3002\u5176\u539F\u7406\u662F\u6BCF\u4E2A <code>data</code> \u5C5E\u6027\u90FD\u6709\u4E00\u4E2A\u5BB9\u5668 <code>dep</code> \u53BB\u6536\u96C6\u4E00\u4E2A <code>Watcher</code>\uFF0C \u8FD9\u4E2A <code>Watcher</code> \u662F\u4E00\u4E2A\u5305\u542B\u4E86\u6E32\u67D3\u7EC4\u4EF6\u7684\u65B9\u6CD5\u7684\u5B9E\u4F8B\u3002\u6BCF\u6B21\u6570\u636E\u7684\u53D8\u5316\u90FD\u80FD\u89E6\u53D1\u8FD9\u4E9B\u6536\u96C6\u5230\u7684 <code>Watcher</code>\uFF0C \u8FDB\u800C\u5B9E\u73B0\u89C6\u56FE\u7684\u66F4\u65B0</p><p>\u8FD9\u91CC\u7684 <code>watch</code> \u4E5F\u662F\u540C\u7406\uFF0C<code>watch</code> \u76D1\u542C\u7684\u6BCF\u4E2A\u5C5E\u6027\u90FD\u6709\u5BF9\u5E94\u7684\u4E00\u4E2A <code>handler</code> \u65B9\u6CD5\uFF0C\u8FD9\u4E2A <code>handler</code> \u65B9\u6CD5\u8DDF\u4E0A\u9762\u7684\u54CD\u5E94\u5F0F\u539F\u7406\u4E00\u6837\u4E5F\u4F1A\u88AB\u4E00\u4E2A <code>Watcher</code> \u5305\u88C5\u5E76\u88AB\u76D1\u542C\u7684\u5C5E\u6027\u6240\u6536\u96C6\u3002\u63A5\u4E0B\u4ECE\u6E90\u7801\u89D2\u5EA6\u5206\u6790\u4E00\u4E0B\u5B9E\u73B0\u8FC7\u7A0B</p><h2 id="\u6E90\u7801\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u6E90\u7801\u5206\u6790" aria-hidden="true">#</a> \u6E90\u7801\u5206\u6790</h2><p>\u6E90\u7801\u4E2D\u5904\u7406 <code>watch</code> \u5C5E\u6027\u7684\u5730\u65B9\uFF1A<code>initState(vn) =&gt; initWatch(vm, opts.watch)</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// initWatch</span>
<span class="token keyword">function</span> <span class="token function">initWatch</span> <span class="token punctuation">(</span><span class="token parameter">vm<span class="token punctuation">,</span> watch</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> watch<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> handler <span class="token operator">=</span> watch<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> handler<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">createWatcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> handler<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">createWatcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> key<span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
 <span class="token comment">// createWatcher</span>
<span class="token keyword">function</span> <span class="token function">createWatcher</span> <span class="token punctuation">(</span>
  <span class="token parameter">vm<span class="token punctuation">,</span>
  expOrFn<span class="token punctuation">,</span>
  handler<span class="token punctuation">,</span>
  options</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    options <span class="token operator">=</span> handler<span class="token punctuation">;</span>
    handler <span class="token operator">=</span> handler<span class="token punctuation">.</span>handler<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> handler <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    handler <span class="token operator">=</span> vm<span class="token punctuation">[</span>handler<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> vm<span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span>expOrFn<span class="token punctuation">,</span> handler<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>initWatch</code> \u4F1A\u904D\u5386\u6240\u6709\u7684 <code>watch</code>, \u5E76\u6267\u884C <code>createWatcher(vm, key, handler)</code>, \u7136\u540E\u518D\u6267\u884C <code>vm.$watch(expOrFn, handler, options)</code>,\u8FD9\u91CC\u53C2\u6570\u8868\u793A\u5982\u4E0B\uFF1A</p><ul><li><p><code>expOrFn</code>: \u76D1\u6D4B\u7684\u5C5E\u6027\u540D</p></li><li><p><code>handler</code>: \u76D1\u6D4B\u7684\u5C5E\u6027\u540D\u5BF9\u5E94\u7684 <code>handler</code></p></li></ul><p>\u91CD\u70B9\u770B\u4E0B <code>vm.$watch</code> \u7684\u5B9A\u4E49\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$watch</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>
    <span class="token parameter">expOrFn<span class="token punctuation">,</span>
    cb<span class="token punctuation">,</span>
    options</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">createWatcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> expOrFn<span class="token punctuation">,</span> cb<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    options <span class="token operator">=</span> options <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    options<span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> watcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> expOrFn<span class="token punctuation">,</span> cb<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>immediate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> watcher<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">handleError</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;callback for immediate watcher \\&quot;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>expression<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">unwatchFn</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      watcher<span class="token punctuation">.</span><span class="token function">teardown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8DDF\u54CD\u5E94\u5F0F\u539F\u7406\u4E00\u6837\uFF0C\u5728 <code>vm.$watch</code> \u4E2D\u4E5F\u5B9E\u4F8B\u5316\u4E86\u4E00\u4E2A <code>Watcher</code> \uFF0C\u5206\u6790\u4E0B\u6B64\u65F6\u7684\u8FD9\u4E2A <code>Watcher</code> \u6784\u9020\u51FD\u6570\u505A\u4E86\u5565\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">var</span> <span class="token function-variable function">Watcher</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">Watcher</span> <span class="token punctuation">(</span>
    vm<span class="token punctuation">,</span>
    expOrFn<span class="token punctuation">,</span> <span class="token comment">// \u8FD9\u4E2A\u53C2\u6570\u662F watch \u8981\u76D1\u542C\u7684\u5C5E\u6027\u540D</span>
    cb<span class="token punctuation">,</span>     <span class="token comment">// \u5BF9\u5E94 watch \u7684 handler</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>vm <span class="token operator">=</span> vm<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isRenderWatcher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      vm<span class="token punctuation">.</span>_watcher <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    vm<span class="token punctuation">.</span>_watchers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// options</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>deep <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>deep<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>user<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>lazy <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>lazy<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>sync <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>options<span class="token punctuation">.</span>sync<span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>before <span class="token operator">=</span> options<span class="token punctuation">.</span>before<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>deep <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lazy <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sync <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>cb <span class="token operator">=</span> cb<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token operator">++</span>uid$2<span class="token punctuation">;</span> <span class="token comment">// uid for batching</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>active <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>dirty <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lazy<span class="token punctuation">;</span> <span class="token comment">// for lazy watchers</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>deps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDeps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>depIds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">_Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>newDepIds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">_Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>expression <span class="token operator">=</span> expOrFn<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C expOrFn \u662F\u51FD\u6570\uFF0Crender \u65F6\u8FD9\u91CC\u662F\u51FD\u6570</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> expOrFn <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> expOrFn<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// watch\u65F6 expOrFn \u662F\u5C5E\u6027\u540D\uFF0C\u6240\u4EE5\u4F1A\u8D70\u5230\u8FD9\u91CC</span>
      <span class="token comment">// parsePath \u65B9\u6CD5\u5C31\u662F\u83B7\u53D6\u5C5E\u6027\u540D\u5BF9\u5E94\u503C\u7684\u65B9\u6CD5</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> <span class="token function">parsePath</span><span class="token punctuation">(</span>expOrFn<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>getter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> noop<span class="token punctuation">;</span>
        <span class="token function">warn</span><span class="token punctuation">(</span>
          <span class="token string">&quot;Failed watching path: \\&quot;&quot;</span> <span class="token operator">+</span> expOrFn <span class="token operator">+</span> <span class="token string">&quot;\\&quot; &quot;</span> <span class="token operator">+</span>
          <span class="token string">&#39;Watcher only accepts simple dot-delimited paths. &#39;</span> <span class="token operator">+</span>
          <span class="token string">&#39;For full control, use a function instead.&#39;</span><span class="token punctuation">,</span>
          vm
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// this.lazy \u4E3Afalse \u6240\u4EE5\u4F1A\u6267\u884C this.get()</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lazy
      <span class="token operator">?</span> <span class="token keyword">undefined</span>
      <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8981\u6CE8\u610F\u6B64\u65F6\u4F20\u8FDB\u6765\u7684\u53C2\u6570\uFF1A</p><ul><li><p><code>expOrFn</code>: <code>watch</code> \u8981\u76D1\u542C\u7684\u5C5E\u6027\u540D</p></li><li><p><code>cb</code>: <code>watch</code> \u7684\u5C5E\u540D\u6027\u540D\u7684 <code>handler</code></p></li></ul><p>\u5728\u6267\u884C <code>Watcher</code> \u6784\u9020\u65B9\u6CD5\u65F6\u91CD\u70B9\u4EE3\u7801\u662F\u4EE5\u4E0B\u51E0\u884C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>expression <span class="token operator">=</span> expOrFn<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// parse expression for getter</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> expOrFn <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> expOrFn<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>getter <span class="token operator">=</span> <span class="token function">parsePath</span><span class="token punctuation">(</span>expOrFn<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lazy
  <span class="token operator">?</span> <span class="token keyword">undefined</span>
  <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>expOrFn</code> \u6B64\u65F6\u662F\u5B57\u7B26\u4E32\u6240\u4EE5\u8D70\u7684\u4EE3\u7801\u662F <code>this.getter = parsePath(expOrFn)</code>, \u8FD9\u91CC\u5148\u7B80\u5355\u4ECB\u7ECD\u4E0B <code>parsePath</code> \u65B9\u6CD5\u5C31\u662F\u83B7\u53D6\u5C5E\u6027\u540D\u5BF9\u5E94\u503C\u7684\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">parsePath</span> <span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>bailRE<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> segments <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5904\u7406\u76D1\u6D4B\u5C5E\u6027\u662F\u4E00\u4E2A\u5BF9\u8C61\u5C5E\u6027\u7684\u60C5\u51B5\uFF0C\u6BD4\u5982 \`obj.a: { handler: function(){}}\`</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> segments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>obj<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">}</span>
      obj <span class="token operator">=</span> obj<span class="token punctuation">[</span>segments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> obj
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u5728\u54CD\u5E94\u539F\u7406\u4E2D\u5B9E\u4F8B\u7684 <code>Watcher</code> \u65F6\uFF0C<code>expOrFn</code> \u662F\u4E00\u4E2A\u6E32\u67D3\u7EC4\u4EF6\u7684 <code>updateComponents()</code> \u51FD\u6570</p></blockquote><p>\u4E4B\u540E\u6267\u884C <code>get()</code> \u65B9\u6CD5:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token doc-comment comment">/**
   * Evaluate the getter, and re-collect dependencies.
   */</span>
<span class="token class-name">Watcher</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">get</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">get</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">pushTarget</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C06\u5F53\u524D\u7684 Watcher \u4FDD\u5B58\u5230 \`Dep.target\` \u5168\u5C40\u5C5E\u6027\u4E2D</span>
  <span class="token keyword">var</span> value<span class="token punctuation">;</span>
  <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span> 
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;getter for watcher \\&quot;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>expression<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> e
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    <span class="token comment">// &quot;touch&quot; every property so they are all tracked as</span>
    <span class="token comment">// dependencies for deep watching</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>deep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">popTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cleanupDeps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> value
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684 <code>get</code> \u4E3B\u8981\u505A\u7684\u4E8B\u60C5\u6709\uFF1A</p><ol><li><p>\u6267\u884C <code>pushTarget(this)</code>: \u5C06\u5F53\u524D\u7684 <code>Watcher</code> \u5B9E\u4F8B\u4FDD\u5B58\u5230 <code>Dep.target</code> \u5168\u5C40\u5C5E\u6027\u4E2D, \u65B9\u4FBF\u88AB\u5C5E\u6027\u7684 <code>dep</code> \u5BB9\u5668\u6536\u96C6</p></li><li><p>\u6267\u884C <code>value = this.getter.call(vm, vm)</code> : \u6B64\u65F6\u7684 <code>this.getter</code> \u662F\u4E0A\u6587\u4E2D <code>parsePath(expOrFn)</code> \u7684\u8FD4\u56DE\u503C\uFF0C \u8FD9\u91CC\u6267\u884C\u5B8C\u4E4B\u540E\u5C31\u662F\u5F97\u5230\u5C5E\u6027\u5BF9\u5E94\u7684\u503C</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token number">007</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">handler</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;message\u53D8\u4E86\uFF01&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// value = this.getter.call(vm, vm) \u6267\u884C\u4E4B\u540E\uFF0Cvalue\u5C31\u662F 007</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0A\u9762\u8FD9\u4E2A\u4F8B\u5B50\u4E3A\u4F8B\uFF0C <code>this.getter</code> \u662F\u83B7\u53D6 <code>message</code> \u5BF9\u5E94\u7684\u503C\uFF0C\u5C31\u662F\u610F\u5473\u7740\u8981\u8BFB\u53D6 <code>data</code> \u4E0A\u7684 <code>message</code> \u5C5E\u6027\uFF0C \u6B64\u65F6\u5C31\u662F\u4F1A\u88AB <code>Object.definedProperty()</code> \u7684 <code>get</code> \u65B9\u6CD5\u52AB\u6301\uFF0C\u7136\u540E\u5C31\u662F\u628A\u5F53\u524D\u4FDD\u5B58\u5728\u5168\u5C40\u5C5E\u6027 <code>Dep.target</code> \u4E2D\u7684\u5F53\u524D\u7684 <code>Watcher</code> \u5B9E\u4F8B\u4FDD\u5B58\u5230\u5BB9\u5668 <code>dep</code> \u4E2D\uFF0C \u81F3\u6B64\u5C31\u5B8C\u6210\u5F53\u524D\u5C5E\u6027\uFF08<code>message</code>\uFF09\u5BF9\u8FD9\u4E2A <code>Watcher</code> \u7684\u6536\u96C6</p><p>\u4E0A\u9762\u5C31\u5B8C\u6210\u4E86\u5BF9 <code>watch</code> \u76D1\u542C\u5C5E\u6027\u673A\u5236\u7684\u5206\u6790</p><h2 id="\u89E6\u53D1handle" tabindex="-1"><a class="header-anchor" href="#\u89E6\u53D1handle" aria-hidden="true">#</a> \u89E6\u53D1handle</h2><p>\u5F53\u8981\u76D1\u542C\u5C5E\u6027\u66F4\u65B0\u65F6\uFF0C\u8FD9\u4F1A\u6D3E\u53D1\u6536\u96C6\u5230\u7684 <code>Watcher</code> \uFF0C\u6267\u884C <code>Watcher.update =&gt; Watcher.run =&gt; this.cb</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token class-name">Watcher</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">run</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">run</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>active<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>
        value <span class="token operator">!==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">||</span>
        <span class="token comment">// Deep watchers and watchers on Object/Arrays should fire even</span>
        <span class="token comment">// when the value is the same, because the value may</span>
        <span class="token comment">// have mutated.</span>
        <span class="token function">isObject</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">||</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>deep
      <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// set new value</span>
        <span class="token keyword">var</span> oldValue <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;callback for watcher \\&quot;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>expression<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">,</span> value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>this.cb</code> \u5C31\u662F <code>watch handle</code> \u65B9\u6CD5</p><h2 id="deep" tabindex="-1"><a class="header-anchor" href="#deep" aria-hidden="true">#</a> deep</h2><p>\u4F7F\u7528 <code>watch</code> \u7684\u65F6\u5019\u53EF\u4EE5\u914D\u7F6E\u4E00\u4E2A <code>deep</code> \u5C5E\u6027\u6765\u914D\u7F6E\u662F\u5426\u6DF1\u5EA6\u76D1\u542C\u5C5E\u6027\uFF0C\u90A3\u4E48 Vue \u4E2D\u662F\u5982\u4F55\u5904\u7406\u7684\u5462\uFF1F \u4EE5\u4E0B\u5728\u4F8B\u5B50\u4E3A\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">tree</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">child</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;lan&#39;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">tree</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">handler</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">deep</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148 Vue \u4E5F\u53EF\u4EE5\u52AB\u6301\u5230 <code>object</code> \u7C7B\u578B\u7684\u6570\u636E\u7684\uFF0C \u56E0\u4E3A\u5728\u521D\u59CB\u5316 <code>data</code> \u6570\u636E\u65F6\uFF0C\u4F1A\u904D\u5386\u5BF9\u8C61\u5BF9\u5B50\u5143\u7D20\u4F7F\u7528 <code>Object.definedProperry()</code> \u5904\u7406\uFF0C\u4E5F\u5C31\u662F\u610F\u5473\u7740\u6BCF\u4ED6\u5BF9\u8C61\u7684\u5B50\u5143\u7D20\u4E5F\u4F1A\u6709\u81EA\u5DF1\u7684\u4E00\u4E2A\u6536\u96C6\u5BB9\u5668\u7684 <code>dep</code>\u3002</p><p>\u56DE\u5230 Vue \u5BF9 <code>watch</code> \u7684\u5904\u7406\u4E2D\uFF0C\u4E0A\u6587\u6709\u63D0\u5230\u5728 <code>new Watcher</code> \u7684\u6784\u9020\u65B9\u6CD5\u65F6\uFF0C\u7ED3\u5C3E\u4F1A\u6267\u884C <code>Watcher.property.get()</code> \u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Watcher</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">get</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">get</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">pushTarget</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> value<span class="token punctuation">;</span>
  <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>vm<span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getter</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> vm<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">handleError</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;getter for watcher \\&quot;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>expression<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> e
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    <span class="token comment">// &quot;touch&quot; every property so they are all tracked as</span>
    <span class="token comment">// dependencies for deep watching</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>deep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">traverse</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">popTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">cleanupDeps</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> value
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\u5F53\u524D <code>this.deep</code> \u4E3A <code>true</code> \u65F6\uFF0C \u4F1A\u6267\u884C <code>traverse(value)</code> ,\u5B83\u7684\u5B9A\u4E49\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">traverse</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">_traverse</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> seenObjects<span class="token punctuation">)</span><span class="token punctuation">;</span>
  seenObjects<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// _traverse</span>
<span class="token keyword">function</span> <span class="token function">_traverse</span> <span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> seen</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> i<span class="token punctuation">,</span> keys<span class="token punctuation">;</span>
  <span class="token keyword">var</span> isA <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span>isA <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> Object<span class="token punctuation">.</span><span class="token function">isFrozen</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">||</span> val <span class="token keyword">instanceof</span> <span class="token class-name">VNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u83B7\u53D6\u5F53\u524D val \u6240\u5BF9\u5E94 Observer \u5B9E\u4F8B</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>val<span class="token punctuation">.</span>__ob__<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> depId <span class="token operator">=</span> val<span class="token punctuation">.</span>__ob__<span class="token punctuation">.</span>dep<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>seen<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>depId<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    seen<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>depId<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>isA<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    i <span class="token operator">=</span> val<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">_traverse</span><span class="token punctuation">(</span>val<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> seen<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    i <span class="token operator">=</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">_traverse</span><span class="token punctuation">(</span>val<span class="token punctuation">[</span>keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> seen<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\u5B9E\u9645\u6267\u884C\u7684\u662F <code>_traverse</code> \u65B9\u6CD5\uFF0C\u4F20\u8FDB\u53BB\u7684\u53C2\u6570\u4E3A\uFF1A</p><ul><li><p><code>val</code>: \u4EE5\u4E0A\u9762\u7684\u4F8B\u5B50\u4E3A\u4F8B\uFF0C\u6B64\u65F6\u7684\u503C\u4E3A: <code>{ child: { name: &#39;lan&#39; }}</code></p></li><li><p><code>seenObjects</code>: \u4E00\u4E2A <code>Set</code> \u7ED3\u6784</p></li></ul><p>\u8FDB\u5165\u5230 <code>_traverse</code> \u540E\uFF0C \u9010\u6761\u5206\u6790\u4E00\u4E0B\u4EE3\u7801\uFF1A</p><ol><li><p>\u53EA\u6709\u5F53\u524D <code>val</code> \u7684\u503C\u662F\u5BF9\u8C61\u7C7B\u578B\u624D\u7EE7\u7EED\u5F80\u4E0B\u5904\u7406</p></li><li><p>\u901A\u8FC7 <code>depId</code> \u548C <code>seen</code> \u914D\u5408\u5224\u65AD\u5F53\u524D\u7684 <code>val</code> \u662F\u5426\u662F\u5DF2\u7ECF\u5904\u7406\u8FC7\u7684\uFF0C \u8FD9\u4E2A <code>val.__ob__</code> \u5C5E\u6027\u5728\u521D\u5316 <code>data</code> \u6570\u6DFB\u52A0\u7684, \u5177\u4F53\u4F4D\u7F6E\u5728 <code>new Observer(value)</code> \u4E2D\u6709\u4E00\u884C\u4EE3\u7801 <code>def(value, &#39;__ob__&#39;, this)</code>\uFF1A</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code> <span class="token keyword">function</span> <span class="token function">def</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> val<span class="token punctuation">,</span> enumerable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> val<span class="token punctuation">,</span>
    <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token operator">!</span>enumerable<span class="token punctuation">,</span>
    <span class="token literal-property property">writable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53C2\u6570\u4E3A\uFF1A</p><ul><li><p><code>value</code>: \u5F53\u524D\u76D1\u542C\u5C5E\u6027\u5BF9\u5E94\u7684\u503C</p></li><li><p><code>__ob__</code></p></li><li><p><code>this</code>: \u5F53\u524D <code>Observer</code> \u5B9E\u4F8B</p></li></ul><blockquote><p><code>initData (vm)</code> =&gt; <code>observe (value, asRootData)</code> =&gt; <code>new Observer(value)</code></p></blockquote><ol start="3"><li>\u65E0\u8BBA\u662F\u6570\u7EC4\u8FD8\u662F\u5BF9\u8C61\u90FD\u901A\u8FC7\u904D\u5386\uFF0C \u7EE7\u7EED <code>_traverse(val[keys[i]], seen)</code></li></ol><p>\u7136\u540E\u6574\u4E2A\u51FD\u6570\u5C31\u5B8C\u4E86\uFF5E\uFF0C\u600E\u4E48\u611F\u89C9\u4EC0\u4E48\u90FD\u505A\uFF1F</p><p>\u771F\u6B63\u53D1\u6325\u4F5C\u7528 <code>_traverse(val[keys[i]], seen)</code> \u8FD9\u884C\u4EE3\u7801\uFF0C\u8C03\u7528 <code>_traverse</code> \u65B9\u6CD5\u65F6\u4E00\u65B9\u9762\u662F\u904D\u5386\u5B50\u5143\u7D20\u9012\u5F52\u8C03\u7528\u81EA\u5DF1\uFF0C\u8FD8\u6709\u4E00\u4E2A\u5173\u952E\u7684\u8BED\u53E5\u662F <code>val[keys[i]]</code>, <code>val[keys[i]]</code> \u7684\u4F5C\u7528\u662F\u83B7\u53D6\u5F53\u524D\u5B50\u5C5E\u6027\u7684\u503C\uFF0C\u4E0A\u6587\u6709\u63D0\u5230\uFF0C\u5BF9\u4E8E <code>object</code> \u7C7B\u578B\u7684\u6570\u636E\uFF0C Vue \u4F1A\u901A\u8FC7\u904D\u5386\u5BF9\u5B50\u5C5E\u6027\u4E5F\u6DFB\u52A0 <code>Object.defindProperty</code> \u52AB\u6301\uFF0C\u4E5F\u5C31\u610F\u5473\u7740\u5F53\u8FD9\u91CC\u8BBF\u95EE <code>val[keys[i]]</code> \u65F6\uFF0C\u5C31\u4F1A\u89E6\u53D1\u52AB\u6301\u7684 <code>get</code> \u65B9\u6CD5\uFF0C\u89E6\u53D1 <code>get</code> \u65B9\u6CD5\u65F6\uFF0C\u6B64\u65F6\u7684 <code>Dep.target</code> \u8FD8\u662F\u8FD9\u4E2A <code>watch</code> \u5BF9\u5E94\u7684 <code>Watcher</code> \uFF01\u6240\u4EE5\u5B50\u5143\u7D20\u7684 <code>dep</code> \u4E5F\u6536\u96C6\u4E86\u8FD9\u4E2A <code>Watcher</code>\uFF0C\u4EE5\u6B64\u5B8C\u6210\u4E86\u5BF9\u6240\u8C13 <code>deep</code> \u7684\u6DF1\u5EA6\u76D1\u542C</p><h2 id="immediate" tabindex="-1"><a class="header-anchor" href="#immediate" aria-hidden="true">#</a> immediate</h2><p><code>immediate</code> \u662F <code>watch</code> \u7684\u53E6\u4E00\u4E2A\u5C5E\u6027\uFF0C\u8868\u793A\u7ACB\u5373\u6267\u884C\u4E00\u4E2A <code>handler</code> \u7684\u610F\u601D,\u5728 <code>Vue.prototype.$watch</code> \u5B9A\u4E49</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$watch</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>
  <span class="token parameter">expOrFn<span class="token punctuation">,</span>
  cb<span class="token punctuation">,</span>
  options</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">createWatcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> expOrFn<span class="token punctuation">,</span> cb<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  options <span class="token operator">=</span> options <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  options<span class="token punctuation">.</span>user <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> watcher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Watcher</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> expOrFn<span class="token punctuation">,</span> cb<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span>immediate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token function">cb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> watcher<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">handleError</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;callback for immediate watcher \\&quot;&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>watcher<span class="token punctuation">.</span>expression<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">unwatchFn</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    watcher<span class="token punctuation">.</span><span class="token function">teardown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u5B58\u5728 <code>options.immediate</code> \u5219\u6267\u884C <code>cb.call(vm, watcher.value)</code> , \u8FD9\u4E2A <code>cb</code> \u5C31\u662F\u5BF9\u5E94\u7684 <code>handler</code> \u65B9\u6CD5</p><h1 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h1><p><code>watch</code> \u7684\u76D1\u542C\u539F\u7406\u5176\u5B9E\u4E5F\u662F\u628A\u5F53\u524D\u7684 <code>watch handler</code> \u5305\u88C5\u5728 <code>watcher</code> \u4E2D\uFF0C\u7136\u540E\u8FD9\u4E2A <code>watch Watcher</code> \u88AB\u76D1\u542C\u7684\u5C5E\u6027\u6240\u6536\u96C6\uFF0C\u4E4B\u540E\u5F53\u5C5E\u6027\u88AB\u66F4\u65B0\u65F6\uFF0C\u8FD9\u4F1A\u6D3E\u53D1\u6536\u96C6\u7684 <code>Watcher</code>\uFF0C\u6267\u884C\u5BF9\u5E94\u7684 <code>handler</code> \u65B9\u6CD5</p><p><code>deep</code> \u7684\u5B9E\u73B0\u672C\u8D28\u662F\u56E0\u4E3A Vue \u5BF9\u4E8E\u5BF9\u8C61\u7C7B\u578B\u7684\u6570\u636E\u4F1A\u904D\u5386\u5176\u5B50\u5143\u7D20\uFF0C\u5E76\u5BF9\u8FD9\u4E9B\u5B50\u5143\u7D20\u8FDB\u884C\u76D1\u542C\u52AB\u6301\uFF0C\u7136\u540E\u5F53\u524D\u5982\u679C\u6709 <code>deep</code> \u5C5E\u6027\u65F6\uFF0C <code>watch Watcher</code> \u4E2D\u4F1A\u53BB\u904D\u5386\u76D1\u542C\u5143\u7D20\u7684\u5B50\u5143\u7D20\uFF0C\u6CE8\u610F\u6B64\u65F6\u5168\u5C40 <code>Dep.target</code> \u4ECD\u4E3A\u5F53\u524D\u8FD9\u4E2A <code>watch Watcher</code>,\u901A\u8FC7\u8BBF\u95EE\u8FD9\u4E9B\u5B50\u5C5E\u6027\uFF0C\u8BA9\u5B50\u5C5E\u6027\u6536\u96C6 <code>watch Watcher</code></p>`,58),o=[e];function c(i,l){return s(),a("div",null,o)}var k=n(t,[["render",c],["__file","Watch.html.vue"]]);export{k as default};
