import{_ as n,o as s,c as a,d as t}from"./app.8ae844c0.js";const p={},e=t(`<h1 id="set" tabindex="-1"><a class="header-anchor" href="#set" aria-hidden="true">#</a> $set</h1><p>\u7528\u6CD5: <code>Vue.set( target, propertyName/index, value )</code></p><p>\u53C2\u6570\u8BF4\u660E\uFF1A</p><ul><li><p><code>{Object | Array} target</code></p></li><li><p><code>{string | number} propertyName/index</code></p></li><li><p><code>{any} value</code></p></li></ul><p>\u8FD4\u56DE\u503C\uFF1A\u8BBE\u7F6E\u7684\u503C</p><p>\u5411\u54CD\u5E94\u5F0F\u5BF9\u8C61\u4E2D\u6DFB\u52A0\u4E00\u4E2A <code>property</code>\uFF0C\u5E76\u786E\u4FDD\u8FD9\u4E2A\u65B0 <code>property</code> \u540C\u6837\u662F\u54CD\u5E94\u5F0F\u7684\uFF0C\u4E14\u89E6\u53D1\u89C6\u56FE\u66F4\u65B0\u3002\u5B83\u5FC5\u987B\u7528\u4E8E\u5411\u54CD\u5E94\u5F0F\u5BF9\u8C61\u4E0A\u6DFB\u52A0\u65B0 <code>property</code>\uFF0C\u56E0\u4E3A Vue \u65E0\u6CD5\u63A2\u6D4B\u666E\u901A\u7684\u65B0\u589E <code>property</code> (\u6BD4\u5982 <code>this.myObject.newProperty = &#39;hi&#39;</code>)</p><p><code>set</code> \u65B9\u6CD5\u5728\u6E90\u7801\u4E2D\u7684\u5B9A\u4E49\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token doc-comment comment">/**
   * \u8BBE\u7F6E\u5BF9\u8C61\u7684\u5C5E\u6027\u3002\u6DFB\u52A0\u65B0\u5C5E\u6027\u5982\u679C\u5C5E\u6027\u4E0D\u5B58\u5728
   */</span>
  <span class="token keyword">function</span> <span class="token function">set</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isUndef</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isPrimitive</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">warn</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&quot;Cannot set reactive property on undefined, null, or primitive value: &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isValidArrayIndex</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      target<span class="token punctuation">.</span>length <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>length<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
      target<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> val
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> target <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
      <span class="token keyword">return</span> val
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> ob <span class="token operator">=</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">.</span>__ob__<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span>_isVue <span class="token operator">||</span> <span class="token punctuation">(</span>ob <span class="token operator">&amp;&amp;</span> ob<span class="token punctuation">.</span>vmCount<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">warn</span><span class="token punctuation">(</span>
        <span class="token string">&#39;Avoid adding reactive properties to a Vue instance or its root $data &#39;</span> <span class="token operator">+</span>
        <span class="token string">&#39;at runtime - declare it upfront in the data option.&#39;</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> val
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ob<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
      <span class="token keyword">return</span> val
    <span class="token punctuation">}</span>
    <span class="token function">defineReactive$$1</span><span class="token punctuation">(</span>ob<span class="token punctuation">.</span>value<span class="token punctuation">,</span> key<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ob<span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> val
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5206\u6790\u5206\u6790</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isValidArrayIndex</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    target<span class="token punctuation">.</span>length <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>length<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    target<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> val
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u76EE\u6807\u662F\u6570\u7EC4\u7C7B\u578B\u5219\u76F4\u63A5\u8C03\u7528 <code>splice</code> \u65B9\u6CD5\uFF0C\u8FD9\u91CC\u7684 <code>splice</code> \u4E0D\u4EC5\u4EC5\u662F\u8C03\u7528\u539F\u6570\u7EC4\u7684 <code>splice</code> \u7684\u65B9\u6CD5\uFF0C\u56E0\u4E3A Vue \u5BF9\u4E8E\u6570\u7EC4\u7C7B\u578B\u7684\u503C\u4E5F\u5B9A\u4E49\u4E86 <code>splice</code> \u65B9\u6CD5\uFF0C\u5728\u6267\u884C\u6570\u7EC4\u7C7B\u578B\u7684 <code>splice</code> \u65B9\u6CD5\u65F6\u4E00\u65B9\u9762\u4F1A\u4E3B\u52A8\u6D3E\u53D1\u4F9D\u8D56\u7684\u66F4\u65B0\uFF0C\u4E00\u65B9\u9762\u4E5F\u4F1A\u6267\u884C\u771F\u6B63\u7684\u6570\u7EC4\u7684 <code>splice</code> \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> target <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
    <span class="token keyword">return</span> val
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u8FD9\u4E2A <code>key</code> \u5DF2\u7ECF\u5B58\u5728\u76EE\u6807\u4E2D\uFF0C\u5219\u76F4\u63A5\u4FEE\u6539\u6539\u8FD9\u4E2A\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> ob <span class="token operator">=</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">.</span>__ob__<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ob<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
    <span class="token keyword">return</span> val
<span class="token punctuation">}</span>
<span class="token function">defineReactive$$1</span><span class="token punctuation">(</span>ob<span class="token punctuation">.</span>value<span class="token punctuation">,</span> key<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
ob<span class="token punctuation">.</span>dep<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> val
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u5BF9\u8C61\u7684\u7C7B\u578B\u4F1A\u505A\u7684\u51E0\u4EF6\u4E8B\u60C5\uFF1A</p><ol><li><p>\u901A\u8FC7 <code>(target).__ob__</code> \u83B7\u53D6\u8FD9\u4E2A\u5C5E\u6027\u7684 <code>Dep</code> \u5B9E\u4F8B\uFF0C\u91CC\u9762\u6709\u8FD9\u4E2A\u5C5E\u6027\u6536\u96C6\u4F9D\u8D56</p></li><li><p><code>defineReactive$$1(ob.value, key, val)</code> \u76D1\u542C\u8FD9\u4E2A\u5C5E\u6027</p></li><li><p><code>ob.dep.notify()</code> \u6D3E\u53D1\u66F4\u65B0\uFF0C\u7136\u540E\u518D\u6E32\u67D3\u7EC4\u4EF6\u7684\u65F6\u5019\uFF0C\u5F53\u524D\u7684 <code>Watcher</code> \u4F1A\u88AB\u8FD9\u4E2A\u5C5E\u6027\u6536\u96C6</p></li></ol>`,16),o=[e];function c(i,l){return s(),a("div",null,o)}var r=n(p,[["render",c],["__file","$set.html.vue"]]);export{r as default};
