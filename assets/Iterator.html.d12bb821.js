import{_ as n,o as s,c as a,d as t}from"./app.62075c25.js";const p={},e=t(`<h1 id="iterator" tabindex="-1"><a class="header-anchor" href="#iterator" aria-hidden="true">#</a> Iterator</h1><p>\u904D\u5386\u5668\uFF08Iterator\uFF09\u662F\u4E00\u79CD\u63A5\u53E3\uFF0C\u4E3A\u5404\u79CD\u4E0D\u540C\u7684\u6570\u636E\u7ED3\u6784\u63D0\u4F9B\u7EDF\u4E00\u7684\u8BBF\u95EE\u673A\u5236\u3002\u4EFB\u4F55\u6570\u636E\u7ED3\u6784\u53EA\u8981\u90E8\u7F72 Iterator \u63A5\u53E3\uFF0C\u5C31\u53EF\u4EE5\u5B8C\u6210\u904D\u5386\u64CD\u4F5C\uFF08\u5373\u4F9D\u6B21\u5904\u7406\u8BE5\u6570\u636E\u7ED3\u6784\u7684\u6240\u6709\u6210\u5458\uFF09</p><p>Iterator \u7684\u4F5C\u7528\u6709\u4E09\u4E2A:</p><ol><li><p>\u4E3A\u5404\u79CD\u6570\u636E\u7ED3\u6784\uFF0C\u63D0\u4F9B\u4E00\u4E2A\u7EDF\u4E00\u7684\u3001\u7B80\u4FBF\u7684\u8BBF\u95EE\u63A5\u53E3</p></li><li><p>\u4F7F\u5F97\u6570\u636E\u7ED3\u6784\u7684\u6210\u5458\u80FD\u591F\u6309\u67D0\u79CD\u6B21\u5E8F\u6392\u5217</p></li><li><p>ES6 \u521B\u9020\u4E86\u4E00\u79CD\u65B0\u7684\u904D\u5386\u547D\u4EE4 <code>for...of</code> \u5FAA\u73AF\uFF0CIterator \u63A5\u53E3\u4E3B\u8981\u4F9B <code>for...of</code> \u6D88\u8D39</p></li></ol><p>Iterator \u7684\u904D\u5386\u8FC7\u7A0B:</p><ol><li><p>\u521B\u5EFA\u4E00\u4E2A\u6307\u9488\u5BF9\u8C61\uFF0C\u6307\u5411\u5F53\u524D\u6570\u636E\u7ED3\u6784\u7684\u8D77\u59CB\u4F4D\u7F6E\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u904D\u5386\u5668\u5BF9\u8C61\u672C\u8D28\u4E0A\uFF0C\u5C31\u662F\u4E00\u4E2A\u6307\u9488\u5BF9\u8C61</p></li><li><p>\u7B2C\u4E00\u6B21\u8C03\u7528\u6307\u9488\u5BF9\u8C61\u7684 <code>next</code> \u65B9\u6CD5\uFF0C\u53EF\u4EE5\u5C06\u6307\u9488\u6307\u5411\u6570\u636E\u7ED3\u6784\u7684\u7B2C\u4E00\u4E2A\u6210\u5458</p></li><li><p>\u7B2C\u4E8C\u6B21\u8C03\u7528\u6307\u9488\u5BF9\u8C61\u7684 <code>next</code> \u65B9\u6CD5\uFF0C\u6307\u9488\u5C31\u6307\u5411\u6570\u636E\u7ED3\u6784\u7684\u7B2C\u4E8C\u4E2A\u6210\u5458</p></li><li><p>\u4E0D\u65AD\u8C03\u7528\u6307\u9488\u5BF9\u8C61\u7684 <code>next</code> \u65B9\u6CD5\uFF0C\u76F4\u5230\u5B83\u6307\u5411\u6570\u636E\u7ED3\u6784\u7684\u7ED3\u675F\u4F4D\u7F6E</p></li></ol><p>\u6BCF\u4E00\u6B21\u8C03\u7528 <code>next</code> \u65B9\u6CD5\uFF0C\u90FD\u4F1A\u8FD4\u56DE\u6570\u636E\u7ED3\u6784\u7684\u5F53\u524D\u6210\u5458\u7684\u4FE1\u606F\u3002\u5177\u4F53\u6765\u8BF4\uFF0C\u5C31\u662F\u8FD4\u56DE\u4E00\u4E2A\u5305\u542B <code>value</code> \u548C <code>done</code> \u4E24\u4E2A\u5C5E\u6027\u7684\u5BF9\u8C61\u3002\u5176\u4E2D\uFF0C<code>value</code> \u5C5E\u6027\u662F\u5F53\u524D\u6210\u5458\u7684\u503C\uFF0C<code>done</code> \u5C5E\u6027\u662F\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u904D\u5386\u662F\u5426\u7ED3\u675F</p><p>\u6A21\u62DF <code>next</code> \u65B9\u6CD5\u8FD4\u56DE\u503C\u7684\u4F8B\u5B50:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> it <span class="token operator">=</span> <span class="token function">makeIterator</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: &quot;a&quot;, done: false }</span>
it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: &quot;b&quot;, done: false }</span>
it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: undefined, done: true }</span>

<span class="token keyword">function</span> <span class="token function">makeIterator</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> nextIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> nextIndex <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length <span class="token operator">?</span>
        <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> array<span class="token punctuation">[</span>nextIndex<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span> <span class="token operator">:</span>
        <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ES6 \u89C4\u5B9A\uFF0C\u9ED8\u8BA4\u7684 Iterator \u63A5\u53E3\u90E8\u7F72\u5728\u6570\u636E\u7ED3\u6784\u7684 <code>Symbol.iterator</code> \u5C5E\u6027\uFF0C\u6216\u8005\u8BF4\uFF0C\u4E00\u4E2A\u6570\u636E\u7ED3\u6784\u53EA\u8981\u5177\u6709 <code>Symbol.iterator</code> \u5C5E\u6027\uFF0C\u5C31\u53EF\u4EE5\u8BA4\u4E3A\u662F\u201C\u53EF\u904D\u5386\u7684\u201D\uFF08iterable\uFF09\u3002<code>Symbol.iterator</code> \u5C5E\u6027\u672C\u8EAB\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u5C31\u662F\u5F53\u524D\u6570\u636E\u7ED3\u6784\u9ED8\u8BA4\u7684\u904D\u5386\u5668\u751F\u6210\u51FD\u6570\u3002\u6267\u884C\u8FD9\u4E2A\u51FD\u6570\uFF0C\u5C31\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u904D\u5386\u5668\u3002\u81F3\u4E8E\u5C5E\u6027\u540D <code>Symbol.iterator</code> \uFF0C\u5B83\u662F\u4E00\u4E2A\u8868\u8FBE\u5F0F\uFF0C\u8FD4\u56DE Symbol \u5BF9\u8C61\u7684 <code>iterator</code> \u5C5E\u6027\uFF0C\u8FD9\u662F\u4E00\u4E2A\u9884\u5B9A\u4E49\u597D\u7684\u3001\u7C7B\u578B\u4E3A Symbol \u7684\u7279\u6B8A\u503C\uFF0C\u6240\u4EE5\u8981\u653E\u5728\u65B9\u62EC\u53F7\u5185</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
          <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ES6 \u7684\u6709\u4E9B\u6570\u636E\u7ED3\u6784\u539F\u751F\u5177\u5907 Iterator \u63A5\u53E3\uFF08\u6BD4\u5982\u6570\u7EC4\uFF09\uFF0C\u5373\u4E0D\u7528\u4EFB\u4F55\u5904\u7406\uFF0C\u5C31\u53EF\u4EE5\u88AB <code>for...of</code> \u5FAA\u73AF\u904D\u5386\u3002\u539F\u56E0\u5728\u4E8E\uFF0C\u8FD9\u4E9B\u6570\u636E\u7ED3\u6784\u539F\u751F\u90E8\u7F72\u4E86 <code>Symbol.iterator</code> \u5C5E\u6027</p><p>\u539F\u751F\u5177\u5907 Iterator \u63A5\u53E3\u7684\u6570\u636E\u7ED3\u6784\u5982\u4E0B:</p><ul><li><p><code>Array</code></p></li><li><p><code>Map</code></p></li><li><p><code>Set</code></p></li><li><p><code>String</code></p></li><li><p><code>TypedArray</code></p></li><li><p>\u51FD\u6570\u7684 <code>arguments</code> \u5BF9\u8C61</p></li><li><p><code>NodeList</code> \u5BF9\u8C61</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> iter <span class="token operator">=</span> arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: &#39;a&#39;, done: false }</span>
iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: &#39;b&#39;, done: false }</span>
iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: &#39;c&#39;, done: false }</span>
iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: undefined, done: true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u8C61\u7C7B\u578B\u6CA1\u6709\u5B9E\u73B0 <code>Symbol.iterator</code> \u63A5\u53E3\uFF0C \u6240\u4EE5\u4E0D\u80FD\u4F7F\u7528 <code>for...of</code> \u904D\u5386\u65B9\u6CD5</p><p>\u4E00\u4E2A\u5BF9\u8C61\u5982\u679C\u8981\u5177\u5907\u53EF\u88AB <code>for...of</code> \u5FAA\u73AF\u8C03\u7528\u7684 Iterator \u63A5\u53E3\uFF0C\u5C31\u5FC5\u987B\u5728 <code>Symbol.iterator</code> \u7684\u5C5E\u6027\u4E0A\u90E8\u7F72\u904D\u5386\u5668\u751F\u6210\u65B9\u6CD5\uFF08\u539F\u578B\u94FE\u4E0A\u7684\u5BF9\u8C61\u5177\u6709\u8BE5\u65B9\u6CD5\u4E5F\u53EF\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">RangeIterator</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">start<span class="token punctuation">,</span> stop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> start<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>stop <span class="token operator">=</span> stop<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stop<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> value<span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token parameter">start<span class="token punctuation">,</span> stop</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RangeIterator</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> stop<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> value <span class="token keyword">of</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0, 1, 2</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F8B\u5B50\u4E8C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>  <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span>
  obj<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> self <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;this&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment">// \u6307\u5411 return \u51FA\u6765\u7684\u5BF9\u8C61</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;self&#39;</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>index <span class="token operator">&lt;</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> obj<span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token comment">// \u8F93\u51FA a, b</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8C03\u7528-iterator-\u63A5\u53E3\u7684\u573A\u5408" tabindex="-1"><a class="header-anchor" href="#\u8C03\u7528-iterator-\u63A5\u53E3\u7684\u573A\u5408" aria-hidden="true">#</a> \u8C03\u7528 Iterator \u63A5\u53E3\u7684\u573A\u5408</h2><p>\u6709\u4E00\u4E9B\u573A\u5408\u4F1A\u9ED8\u8BA4\u8C03\u7528 Iterator \u63A5\u53E3\uFF08\u5373Symbol.iterator\u65B9\u6CD5\uFF09\uFF0C\u9664\u4E86\u4E0B\u6587\u4F1A\u4ECB\u7ECD\u7684 <code>for...of</code> \u5FAA\u73AF\uFF0C\u8FD8\u6709\u51E0\u4E2A\u522B\u7684\u573A\u5408\u3002</p><ul><li><p>\u89E3\u6784\u8D4B\u503C</p></li><li><p>\u6269\u5C55\u8FD0\u7B97\u7B26</p></li><li><p><code>yield*</code></p><p><code>yield*</code> \u540E\u9762\u8DDF\u7684\u662F\u4E00\u4E2A\u53EF\u904D\u5386\u7684\u7ED3\u6784\uFF0C\u5B83\u4F1A\u8C03\u7528\u8BE5\u7ED3\u6784\u7684\u904D\u5386\u5668\u63A5\u53E3\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> <span class="token function-variable function">generator</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> iterator <span class="token operator">=</span> <span class="token function">generator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: 1, done: false }</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: 2, done: false }</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: 3, done: false }</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: 4, done: false }</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: 5, done: false }</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value: undefined, done: true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>for...of</code></p></li><li><p><code>Array.from()</code></p></li><li><p><code>Map()</code>, <code>Set()</code>, <code>WeakMap()</code>, <code>WeakSet()</code>\uFF08\u6BD4\u5982 <code>new Map([[&#39;a&#39;,1],[&#39;b&#39;,2]])</code> \uFF09</p></li><li><p><code>Promise.all()</code></p></li><li><p><code>Promise.race()</code></p></li><li><p>\u5B57\u7B26\u4E32\u7684</p><p>\u5B57\u7B26\u4E32\u662F\u4E00\u4E2A\u7C7B\u4F3C\u6570\u7EC4\u7684\u5BF9\u8C61\uFF0C\u4E5F\u539F\u751F\u5177\u6709 Iterator \u63A5\u53E3</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> someString <span class="token operator">=</span> <span class="token string">&quot;hi&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">typeof</span> someString<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span>
<span class="token comment">// &quot;function&quot;</span>

<span class="token keyword">var</span> iterator <span class="token operator">=</span> someString<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// { value: &quot;h&quot;, done: false }</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// { value: &quot;i&quot;, done: false }</span>
iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// { value: undefined, done: true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="iterator-\u63A5\u53E3\u4E0E-generator-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#iterator-\u63A5\u53E3\u4E0E-generator-\u51FD\u6570" aria-hidden="true">#</a> Iterator \u63A5\u53E3\u4E0E Generator \u51FD\u6570</h2><p>Symbol.iterator\u65B9\u6CD5\u7684\u6700\u7B80\u5355\u5B9E\u73B0\uFF0C\u8FD8\u662F\u4F7F\u7528 Generator \u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> myIterable <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">[</span><span class="token operator">...</span>myIterable<span class="token punctuation">]</span> <span class="token comment">// [1, 2, 3]</span>

<span class="token comment">// \u6216\u8005\u91C7\u7528\u4E0B\u9762\u7684\u7B80\u6D01\u5199\u6CD5</span>

<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">*</span> <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> <span class="token string">&#39;world&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token keyword">of</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// &quot;hello&quot;</span>
<span class="token comment">// &quot;world&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u904D\u5386\u5668\u5BF9\u8C61\u7684-return-throw" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386\u5668\u5BF9\u8C61\u7684-return-throw" aria-hidden="true">#</a> \u904D\u5386\u5668\u5BF9\u8C61\u7684 return()\uFF0Cthrow()</h2><p>\u904D\u5386\u5668\u5BF9\u8C61\u9664\u4E86\u5177\u6709 <code>next</code> \u65B9\u6CD5\uFF0C\u8FD8\u5177\u6709\u4E24\u4E2A\u65B9\u6CD5</p><ul><li><p><code>return</code>\uFF1A \u5982\u679C <code>for...of</code>\u5FAA\u73AF\u63D0\u524D\u9000\u51FA\uFF08\u901A\u5E38\u662F\u56E0\u4E3A\u51FA\u9519\uFF0C\u6216\u8005\u6709 <code>break</code> \u8BED\u53E5\uFF09\uFF0C\u5C31\u4F1A\u8C03\u7528 <code>return</code> \u65B9\u6CD5\u3002\u5982\u679C\u4E00\u4E2A\u5BF9\u8C61\u5728\u5B8C\u6210\u904D\u5386\u524D\uFF0C\u9700\u8981\u6E05\u7406\u6216\u91CA\u653E\u8D44\u6E90\uFF0C\u5C31\u53EF\u4EE5\u90E8\u7F72 <code>return</code> \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u60C5\u51B5\u4E00</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> line <span class="token keyword">of</span> <span class="token function">readLinesSync</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">break</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>

<span class="token comment">// \u60C5\u51B5\u4E8C</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> line <span class="token keyword">of</span> <span class="token function">readLinesSync</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>throw</code>: <code>throw</code> \u65B9\u6CD5\u4E3B\u8981\u662F\u914D\u5408 Generator \u51FD\u6570\u4F7F\u7528\uFF0C\u4E00\u822C\u7684\u904D\u5386\u5668\u5BF9\u8C61\u7528\u4E0D\u5230\u8FD9\u4E2A\u65B9\u6CD5</p></li></ul><p><code>return</code> \u65B9\u6CD5\u548C <code>throw</code> \u65B9\u6CD5\u662F\u5426\u90E8\u7F72\u662F\u53EF\u9009\u7684\u3002</p>`,30),o=[e];function c(l,i){return s(),a("div",null,o)}var r=n(p,[["render",c],["__file","Iterator.html.vue"]]);export{r as default};
