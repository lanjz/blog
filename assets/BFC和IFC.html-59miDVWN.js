import{_ as i,r as l,o as a,c as n,b as e,d as o,a as p,e as c}from"./app-p5-cwF4Z.js";const r="/lanjz/assets/IFC_1-KKoZny1E.png",t="/lanjz/assets/IFC_2-pXHfwHEd.png",s="/lanjz/assets/IFC_3-wP8Wy69K.png",h={},b=c('<h1 id="bfc" tabindex="-1"><a class="header-anchor" href="#bfc" aria-hidden="true">#</a> BFC</h1><p>一个块格式化上下文（block formatting context） 是Web页面的可视化CSS渲染出的一部分。它是块级盒布局出现的区域，也是浮动层元素进行交互的区域。</p><p>它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素将如何定位，以及和其他元素的关系和相互作用</p><p><strong>一个块格式化上下文由以下之一创建：</strong></p><ul><li><p><code>display: flow-root</code> 或表格布局或者弹性布局</p></li><li><p>内联块 (元素具有 <code>display: inline-block</code>)</p></li><li><p>浮动元素 (元素的 <code>float</code> 不是 <code>none</code>)</p></li><li><p>绝对定位元素 (元素具有 <code>position</code> 为 <code>absolute</code> 或 <code>fixed</code>)</p></li><li><p>具有<code>overflow</code> 且值不是 <code>visible</code> 的块元素，</p></li><li><p><code>column-span: all</code> 应当总是会创建一个新的格式化上下文，即便具有 <code>column-span: all</code> 的元素并不被包裹在一个多列容器中。</p></li><li><p>表格标题 (元素具有 <code>display: table-caption</code>, HTML表格标题默认属性)</p></li><li><p>表格单元格 (元素具有 <code>display: table-cell</code>，HTML表格单元格默认属性)</p></li></ul><p>块格式化上下文对于定位 (参见 float) 与清除浮动 (参见 clear) 很重要。定位和清除浮动的样式规则只适用于处于同一块格式化上下文内的元素。浮动不会影响其它块格式化上下文中元素的布局，并且清除浮动只能清除同一块格式化上下文中在它前面的元素的浮动。</p><h2 id="bfc布局规则特性" tabindex="-1"><a class="header-anchor" href="#bfc布局规则特性" aria-hidden="true">#</a> BFC布局规则特性：</h2><ul><li><p>在BFC中，盒子从顶端开始垂直地一个接一个地排列</p></li><li><p>子垂直方向的距离由margin决定。属于同一个BFC的两个相邻盒子的margin会发生重叠</p></li><li><p>在BFC中，每一个盒子的左外边缘（margin-left）会触碰到容器的左边缘(border-left)（对于从右到左的格式来说，则触碰到右边缘）。</p></li></ul><h2 id="bfc的主要用途" tabindex="-1"><a class="header-anchor" href="#bfc的主要用途" aria-hidden="true">#</a> BFC的主要用途</h2><ul><li><p>清除元素内部浮动</p><p>只要把父元素设为BFC就可以清理子元素的浮动了，最常见的用法就是在父元素上设置<code>overflow: hidden</code>样式，对于IE6加上 <code>zoom:1</code> 就可以了。</p></li><li><p>解决外边距合并问题</p><p>外边距合并的问题</p><p>属于同一个BFC的两个相邻盒子的 <code>margin</code> 会发生重叠，那么我们创建不属于同一个 BFC，就不会发生 <code>margin</code> 重叠了</p></li><li><p>制作右侧自适应的盒子问题</p></li></ul><h2 id="bfc总结" tabindex="-1"><a class="header-anchor" href="#bfc总结" aria-hidden="true">#</a> BFC总结</h2><p>BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。因此，有了这个特性我们布局的时候就不会出现意外情况了</p><h2 id="ifc" tabindex="-1"><a class="header-anchor" href="#ifc" aria-hidden="true">#</a> IFC</h2><p>Inline Formatting Contexts，也就是“内联格式化上下文”。</p><p>生成一个IFC的规则：<strong>块级元素中仅包含内联级别元素</strong></p><h2 id="ifc布局规则" tabindex="-1"><a class="header-anchor" href="#ifc布局规则" aria-hidden="true">#</a> IFC布局规则</h2>',16),f=c('<li><p>子元素水平方向横向排列，并且垂直方向起点为元素顶部。</p><p>这点很好理解，内联元素就是水平排列的</p></li><li><p>子元素只会计算横向样式空间，【<code>padding</code>、<code>border</code>、<code>margin</code>】，垂直方向样式空间不会被计算，【<code>padding</code>、<code>border</code>、<code>margin</code>】</p><p><code>margin</code>：</p><p><img src="'+r+'" alt=""></p><p><code>padding</code>：</p><p><img src="'+t+'" alt=""></p><p><code>border</code>：</p><p><img src="'+s+'" alt=""></p><p>平时如果不知道这些规则的话，开发遇到时，会觉得莫名其妙</p></li>',2),_=e("p",null,"在垂直方向上，子元素会以不同形式来对齐（vertical-align）",-1),g={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/vertical-align",target:"_blank",rel:"noopener noreferrer"},x=c("<li><p>当 <code>inline-level boxes</code> 的总宽度少于包含它们的 <code>line box</code> 时，其水平渲染规则由 <code>text-align</code> 属性值来决定</p></li><li><p>IFC中的“line box”一般左右边贴紧其包含块，但 <code>float</code> 元素会优先排列。</p><p>这点开发中也用到过，虽然现在已经很久没用 <code>float</code> 的属性了</p></li><li><p>当一个<code>inline box</code> 超过 <code>line box</code> 的宽度时，它会被分割成多个 <code>boxes</code>，这些 <code>boxes</code> 被分布在多个 <code>line box</code> 里。如果一个 <code>inline box</code> 不能被分割（比如只包含单个字符，或 <code>word-breaking</code> 机制被禁用，或该行内框受 <code>white-space</code> 属性值为 <code>nowrap</code> 或pre的影响），那么这个 <code>inline box</code> 将溢出这个 <code>line box</code>。</p><p>就是默认情况下文本塞不下时会换行</p></li><li><p>能把在一行上的框都完全包含进去的一个矩形区域，被称为该行的行框（line box）。行框的宽度是由包含块（containing box）和与其中的浮动来决定。</p></li><li><p>IFC中的“line box”高度由 CSS 行高计算规则来确定，同个IFC下的多个line box高度可能会不同。</p></li>",5),C=e("h2",{id:"ifc总结",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ifc总结","aria-hidden":"true"},"#"),o(" IFC总结")],-1),m=e("p",null,[o("了解 IFC 的特性可以帮助我们在布局避免踩到一些坑，例如：垂直的 "),e("code",null,"margin"),o(),e("code",null,"padding"),o(" 不生效、多个文本元素行高不一致排列混乱等问题")],-1);function u(F,I){const d=l("ExternalLinkIcon");return a(),n("div",null,[b,e("ul",null,[f,e("li",null,[_,e("p",null,[e("a",g,[o("vertical-align-MDN"),p(d)])])]),x]),C,m])}const v=i(h,[["render",u],["__file","BFC和IFC.html.vue"]]);export{v as default};
